{"version":3,"sources":["webpack:///./node_modules/rxjs/_esm2015/internal/operators/concatAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/reduce.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/zip.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/symbol/rxSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/BehaviorSubject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/config.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/delay.js.pre-build-optimizer.js","webpack:///./node_modules/ng6-breadcrumbs/lib/breadcrumbs.component.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/ArgumentOutOfRangeError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/mergeMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/never.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/Immediate.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AsapAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AsapScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/asap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/Subscriber.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/core/fesm2015/core.js.pre-build-optimizer.js","webpack:///./node_modules/ng6-breadcrumbs/lib/breadcrumbs.service.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/ObjectUnsubscribedError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/takeLast.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/subscribeToObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/from.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/fromObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/fromPromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/fromIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/async.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/ConnectableObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/empty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/every.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/concat.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/Observable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/toSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isArrayLike.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AsyncScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/take.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/catchError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/scan.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/noop.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/of.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/symbol/iterator.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/AsyncSubject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/hostReportError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/last.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/defer.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/publish.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/race.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/groupBy.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/timer.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/common/fesm2015/common.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/subscribeTo.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/identity.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/first.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/merge.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/Notification.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/throwIfEmpty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/Subject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/scalar.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isObject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/Scheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/TimeoutError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isNumeric.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/SubjectSubscription.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/InnerSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/subscribeToResult.js.pre-build-optimizer.js","webpack:///./node_modules/ng6-breadcrumbs/lib/breadcrumbs.module.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/subscribeToPromise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/mergeAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/concatMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isPromise.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/platform-browser/fesm2015/platform-browser.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/forkJoin.js.pre-build-optimizer.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./node_modules/rxjs/_esm2015/internal/util/errorObject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/switchMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/Observer.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/router/fesm2015/router.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/combineLatest.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/ReplaySubject.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/symbol/observable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/audit.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/auditTime.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/buffer.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/bufferCount.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/bufferTime.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/bufferToggle.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/bufferWhen.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/combineAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/combineLatest.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/concat.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/concatMapTo.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/count.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/debounce.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/debounceTime.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/delayWhen.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/dematerialize.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/distinct.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/distinctUntilChanged.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/distinctUntilKeyChanged.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/elementAt.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/exhaust.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/exhaustMap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/expand.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/finalize.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/find.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/findIndex.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/ignoreElements.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/isEmpty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/mapTo.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/materialize.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/max.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/merge.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/mergeMapTo.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/mergeScan.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/min.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/OuterSubscriber.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/onErrorResumeNext.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/pairwise.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/not.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/partition.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/pluck.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/publishBehavior.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/publishLast.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/publishReplay.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/race.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/repeat.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/repeatWhen.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/retry.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/retryWhen.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/sample.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/sampleTime.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/sequenceEqual.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/shareReplay.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/single.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/skip.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/skipLast.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/skipUntil.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/skipWhile.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/startWith.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/SubscribeOnObservable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/subscribeOn.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/switchAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/switchMapTo.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/takeUntil.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/takeWhile.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/throttle.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/throttleTime.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/timeInterval.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/timeoutWith.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/timeout.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/timestamp.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/toArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/window.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/windowCount.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/windowTime.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/windowToggle.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/windowWhen.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/withLatestFrom.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/zip.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/zipAll.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/operators/index.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/map.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/pipe.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isDate.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/tryCatch.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isFunction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/subscribeToArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/multicast.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/filter.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/subscribeToIterable.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/UnsubscriptionError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/observeOn.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/AnimationFrameScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/animationFrame.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/VirtualTimeScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/bindCallback.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/bindNodeCallback.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/fromEventPattern.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/generate.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/iif.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/interval.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/onErrorResumeNext.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/pairs.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/range.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/using.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/index.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/QueueAction.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/QueueScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/scheduler/queue.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/Subscription.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/EmptyError.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/tap.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/share.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/refCount.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/operators/defaultIfEmpty.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/fromEvent.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/fromArray.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/util/isScheduler.js.pre-build-optimizer.js","webpack:///./node_modules/rxjs/_esm2015/internal/observable/throwError.js.pre-build-optimizer.js","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.ts","webpack:///./node_modules/@angular/router/router.ngfactory.js.pre-build-optimizer.js","webpack:///./node_modules/@angular/router/router.d.ts.ɵEmptyOutletComponent.html","webpack:///./src/app/shared/components/page-title/page-title.component.ts","webpack:///./src/app/shared/components/page-title/page-title.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/page-title/page-title.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/page-title/page-title.component.html","webpack:///./src/app/features/features.component.ts","webpack:///./src/app/features/features.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/features/features.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/features/features.component.html","webpack:///./src/app/features/home/home.component.ts","webpack:///./src/app/core/services/component-interation.service.ts","webpack:///./src/app/core/services/component-interation.service.ts.pre-build-optimizer.js","webpack:///./src/app/features/home/home.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/features/home/home.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/features/home/home.component.html","webpack:///./src/app/shared/components/dialog/dialog.component.ts","webpack:///./src/app/shared/components/dialog/dialog.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/dialog/dialog.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/dialog/dialog.component.html","webpack:///./src/app/features/detail/detail.component.ts","webpack:///./src/app/features/detail/detail.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/features/detail/detail.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/features/detail/detail.component.html","webpack:///./src/app/features/directive/directive.component.ts","webpack:///./src/app/core/services/logger.service.ts","webpack:///./src/app/core/services/logger.service.ts.pre-build-optimizer.js","webpack:///./src/app/features/directive/directive.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/features/directive/directive.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/features/directive/directive.component.html","webpack:///./src/app/features/events/events.component.ts","webpack:///./src/app/core/functions/func-utils.ts","webpack:///./node_modules/@angular/common/fesm2015/http.js.pre-build-optimizer.js","webpack:///./src/app/core/services/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/core/services/api.service.ts.pre-build-optimizer.js","webpack:///./src/app/features/events/events.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/features/events/events.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/features/events/events.component.html","webpack:///./src/app/features/events/event-detail/event-detail.component.ts","webpack:///./src/app/features/events/event-detail/event-detail.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/features/events/event-detail/event-detail.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/features/events/event-detail/event-detail.component.html","webpack:///./src/app/features/lifecycle-hooks/lifecycle-hooks.component.ts","webpack:///./src/app/features/lifecycle-hooks/lifecycle-hooks.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/features/lifecycle-hooks/lifecycle-hooks.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/features/lifecycle-hooks/lifecycle-hooks.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/auth.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/auth/auth.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/auth/auth.component.html","webpack:///./node_modules/@angular/forms/fesm2015/forms.js.pre-build-optimizer.js","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/core/services/cookies.service.ts","webpack:///./src/app/core/services/cookies.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/loading-action.service.ts","webpack:///./src/app/core/services/loading-action.service.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/auth.service.ts","webpack:///./src/app/core/services/auth.service.ts.pre-build-optimizer.js","webpack:///./src/app/auth/login/login.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/auth/login/login.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/register/register.component.ts","webpack:///./src/app/auth/register/register.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/auth/register/register.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/auth/register/register.component.html","webpack:///./src/app/shared/components/header/header.component.ts","webpack:///./src/app/shared/components/header/header.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/header/header.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/header/header.component.html","webpack:///./src/app/shared/components/footer/footer.component.ts","webpack:///./src/app/shared/components/footer/footer.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/footer/footer.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/shared/components/footer/footer.component.html","webpack:///./src/app/app.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/app.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/app.component.html","webpack:///./src/app/feature/feature.component.ts","webpack:///./src/app/feature/feature.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/feature/feature.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/feature/feature.component.html","webpack:///./src/app/other/other.component.ts","webpack:///./src/app/other/other.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/other/other.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/other/other.component.html","webpack:///./src/app/other-login/other-login.component.ts","webpack:///./src/app/core/services/login.service.ts","webpack:///./src/app/core/services/login.service.ts.pre-build-optimizer.js","webpack:///./src/app/other-login/other-login.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/other-login/other-login.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/other-login/other-login.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/user.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/user/user.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user-profile/user-profile.component.ts","webpack:///./src/app/user/user-profile/user-profile.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/user/user-profile/user-profile.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/user/user-profile/user-profile.component.html","webpack:///./src/app/user/user-dashboard/user-dashboard.component.ts","webpack:///./src/app/user/user-dashboard/user-dashboard.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/user/user-dashboard/user-dashboard.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/user/user-dashboard/user-dashboard.component.html","webpack:///./src/app/client/client.component.ts","webpack:///./src/app/core/services/authen.service.ts","webpack:///./src/app/core/services/authen.service.ts.pre-build-optimizer.js","webpack:///./src/app/client/client.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/client/client.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/client/client.component.html","webpack:///./src/app/client/client-home/client-home.component.ts","webpack:///./src/app/client/client-home/client-home.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/client/client-home/client-home.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/client/client-home/client-home.component.html","webpack:///./src/app/client/client-profile/client-profile.component.ts","webpack:///./src/app/client/client-profile/client-profile.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/client/client-profile/client-profile.component.scss.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/client/client-profile/client-profile.component.html","webpack:///./src/app/core/intercepter/http-interceptor.ts","webpack:///./src/app/core/intercepter/http-interceptor.ts.pre-build-optimizer.js","webpack:///./src/app/core/services/selective-preloading-strategy.service.ts","webpack:///./src/app/core/services/selective-preloading-strategy.service.ts.pre-build-optimizer.js","webpack:///./node_modules/@angular/service-worker/fesm2015/service-worker.js.pre-build-optimizer.js","webpack:///./src/app/features/features-routing.module.ts.pre-build-optimizer.js","webpack:///./src/app/features/features-routing.module.ts","webpack:///./src/app/user/user.guard.ts","webpack:///./src/app/user/user.guard.ts.pre-build-optimizer.js","webpack:///./src/app/user/user.deactive-guard.ts","webpack:///./src/app/user/user.deactive-guard.ts.pre-build-optimizer.js","webpack:///./src/app/user/user-dashboard/user.resolver.ts","webpack:///./src/app/user/user-dashboard/user.resolver.ts.pre-build-optimizer.js","webpack:///./src/app/client/client.guard.ts","webpack:///./src/app/client/client.guard.ts.pre-build-optimizer.js","webpack:///./src/app/client/client-profile/client-profile.candeactive.ts","webpack:///./src/app/client/client-profile/client-profile.candeactive.ts.pre-build-optimizer.js","webpack:///./src/app/client/client-profile/client-profile.resolve.ts","webpack:///./src/app/client/client-profile/client-profile.resolve.ts.pre-build-optimizer.js","webpack:///./src/app/app-routing.module.ts.pre-build-optimizer.js","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/features/features.module.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/app.module.ngfactory.js.pre-build-optimizer.js","webpack:///./src/main.ts"],"names":["concatAll","reduce","accumulator","seed","arguments","length","source","acc","value","index","zip","observables","resultSelector","pop","undefined","lift","ZipOperator","this","subscriber","subscribe","ZipSubscriber","Subscriber","destination","values","Object","create","super","iterators","active","push","StaticArrayIterator","StaticIterator","ZipBufferIterator","len","i","iterator","stillUnsubscribed","add","complete","hasValue","shouldComplete","args","result","next","hasCompleted","done","_tryresultSelector","apply","err","error","nextResult","array","OuterSubscriber","parent","observable","buffer","isComplete","shift","notifyInactive","outerValue","innerValue","outerIndex","innerIndex","innerSub","checkIterators","rxSubscriber","Symbol","for","BehaviorSubject","_value","getValue","subscription","_subscribe","closed","hasError","thrownError","_enable_super_gross_mode_that_will_cause_bad_things","config","Promise","delay","scheduler","delayFor","now","Math","abs","DelayOperator","DelaySubscriber","queue","errored","state","time","notification","observe","max","schedule","dispatch","message","DelayMessage","_schedule","scheduleNotification","createNext","createComplete","defineProperty","exports","core_1","router_1","operators_1","BreadcrumbComponent","breadcrumbService","activatedRoute","router","_this","ROUTE_DATA_BREADCRUMB","ROUTE_PARAM_BREADCRUMB","PREFIX_BREADCRUMB","get","breadcrumbs","prototype","hasParams","breadcrumb","keys","params","url","ngOnInit","navigated","generateBreadcrumbTrail","events","pipe","filter","event","NavigationEnd","currentBreadcrumbs","currentRoute","root","_loop_1","breadCrumbLabel","children","forEach","route","outlet","PRIMARY_OUTLET","hasData","routeConfig","data","hasDynamicBreadcrumb","snapshot","hasOwnProperty","replace","routeURL","map","segment","path","join","label","storePrefixed","this_1","store","decorators","type","Component","selector","template","styles","encapsulation","ViewEncapsulation","None","propDecorators","allowBootstrap","Input","addClass","ArgumentOutOfRangeError","Error","name","setPrototypeOf","mergeMap","project","concurrent","Number","POSITIVE_INFINITY","a","b","ii","MergeMapOperator","observer","MergeMapSubscriber","_tryNext","_innerSub","ish","remove","_next","NEVER","never","nextHandle","tasksByHandle","Immediate","cb","handle","resolve","then","runIfPresent","AsyncAction","work","id","requestAsyncId","actions","scheduled","setImmediate","flush","bind","recycleAsyncId","clearImmediate","AsyncScheduler","action","count","execute","unsubscribe","asap","destinationOrNext","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","obj","trustedSubscriber","SafeSubscriber","_error","_complete","_parent","_parents","_parentSubscriber","observerOrNext","context","_context","useDeprecatedSynchronousErrorHandling","__tryOrSetError","__tryOrUnsub","wrappedComplete","call","fn","defineInjectable","opts","providedIn","factory","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","annotationInstance","TypeDecorator","cls","annotationCls","propName","makeParamDecorator","ParamDecoratorFactory","annotation","ParamDecorator","unusedKey","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","constructor","meta","unshift","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","assign","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ChangeDetectionStrategy","OnPush","Default","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ivyEnabled","Directive","dir","c","changeDetection","Pipe","p","pure","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","_global","global","promise","_symbolIterator","getSymbolIterator","getOwnPropertyNames","Map","key","scheduleMicroTask","Zone","current","looseIdentical","isNaN","stringify","token","Array","overriddenName","res","toString","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","t","paramTypes","paramAnnotations","concat","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","ctorParam","convertTsickleDecoratorIntoMetadata","_zipTypesAndAnnotations","getOwnMetadata","fill","getParentCtor","_ownParameters","typeOrFunc","annotations","ownAnnotations","_ownAnnotations","propMetadata","prop","parentPropMetadata","ownPropMetadata","_ownPropMetadata","lcProperty","moduleUrl","members","runtime","enumIdentifier","decoratorInvocations","decoratorInvocation","ctor","parentProto","getPrototypeOf","getClosureSafeProperty","objWithPropertyToExtract","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","notFoundValue","Injector","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty$1","provide","String","useValue","NULL_INJECTOR","NEW_LINE","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","providerDeps","j","useExisting","computeDeps","useFactory","useClass","resolveProvider","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","NO_NEW_LINE","depRecords","depRecord","childRecord","resolveToken","e","tokenPath","formatError","tokens","text","charAt","substr","parts","JSON","_currentInjector","setCurrentInjector","injector","former","injectableDef","injectArgs","types","arg","GET_PROPERTY_NAME$1","USE_VALUE$1","EMPTY_ARRAY","convertInjectableProviderToFactory","valueProvider","existingProvider","factoryProvider","classProvider","reflectionCapabilities","Injectable","injectableType","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","ngModule","moduleType","metadata","ngInjectorDef","Emulated","Native","ShadowDom","Version","full","major","split","minor","patch","VERSION","getDebugContext","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","msg","wrappedError","addKey","injectors","noAnnotationError","signature","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","has","newKey","size","Reflector","caps","hasLifecycleHook","getter","setter","method","importUri","resourceUri","resolveIdentifier","identifier","resolveEnum","reflector","ReflectiveDependency","optional","visibility","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","fromKey","_extractToken","constructDependencies","resolveReflectiveProvider","resolveReflectiveProviders","resolvedProviderMap","normalizedProvidersMap","existing","mergeResolvedReflectiveProviders","_normalizeProviders","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","keyIds","objs","_getByKey","createChildFromResolved","inj","instantiateResolved","_instantiateProvider","outOfBoundsError","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","dep","_getByReflectiveDependency","originalException","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","keyId","_new","noProviderError","_getObjByKeyId","_throwOrNull","inj_","getProviderAtIndex","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","createInjector","defType","additionalProviders","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","imported","delete","isTypeProvider","isValueProvider","isExistingProvider","isFactoryProvider","classRef","hasDeps","providerToRecord","multiRecord","input","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","Compiler","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","_NullComponentFactoryResolver","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","resolveComponentFactory","ComponentFactoryBoundToModule","ngContentSelectors","inputs","outputs","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","trace","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","s","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","sink","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","zone","assertZonePatched","_nesting","_outer","_inner","fork","properties","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","handleError","runOutsideAngular","emit","isInAngularZone","run","scheduleEventTask","EMPTY_PAYLOAD","noop","runTask","cancelTask","runGuarded","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","assertNotInAngularZone","_runCallbacksIfReady","clearTimeout","timeoutId","doneCb","pending","getPendingTasks","updateCb","macroTasks","isPeriodic","creationLocation","xhr","timeout","addCallback","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","testability","elem","findInAncestors","findTestabilityInTree","_NoopGetTestability","registry","setTestabilityGetter","_platform","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","enableProdMode","isDevMode","NgProbeToken","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","destroyPlatform","destroy","_injector","_modules","_destroyListeners","_destroyed","moduleFactory","ngZone","ngZoneOption","getNgZone","ngZoneInjector","moduleRef","exceptionHandler","errorHandler","_callAndReportToErrorHandler","initStatus","runInitializers","_moduleDoBootstrap","compilerOptions","compilerFactory","optionsReducer","createCompiler","compileModuleAsync","bootstrapModuleFactory","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","module","listener","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","stableSub","unstableSub","assertInAngularZone","componentOrFactory","componentFactory","compRef","_unloadComponent","registerApplication","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","viewRef","attachToAppRef","detachFromAppRef","componentRef","attachView","hostView","detachView","list","el","splice","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","RendererStyleFlags2","Important","DashCase","Renderer2","ElementRef","NgModuleFactoryLoader","moduleFactories","registerModuleFactory","getModuleFactory","QueryList","dirty","_results","changes","find","flatten","flat","item","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","_config","loadFactory","loadAndCompile","exportName","checkNotEmpty","factoryClassSuffix","modulePath","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","nativeNode","_debugContext","DebugElement","addChild","listeners","references","providerTokens","attributes","classes","childNodes","child","childIndex","newChildren","siblingIndex","removeChild","refChild","newChild","refIndex","predicate","queryAll","matches","_queryElementChildren","element","node","_queryNodeChildren","parentNode","eventObj","asNativeElements","debugEls","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","comparator","iterator1","iterator2","item1","item2","areIterablesEqual","isAObject","isBObject","WrappedValue","wrapped","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isJsObject","o","DefaultIterableDifferFactory","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","nextIt","nextRemove","addRemoveOffset","moveOffsets","getPreviousIndex","adjPreviousIndex","currentIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","_nextPrevious","_nextAdded","_nextMoved","_nextIdentityChange","collection","check","_reset","itemTrackBy","mayBeDirty","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","_nextChanged","insertBefore","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","iterable","supports","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","APPLICATION_MODULE_PROVIDERS","ApplicationModule","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","unwrapResponse","componentResourceResolutionQueue","styleUrls","styleOffset","styleUrl","style","response","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","DOMParser","isDOMParserAvailable","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrName","removeAttribute","childNode","firstChild","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","match","tagSet","tags","merge$1","sets","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","startElement","TEXT_NODE","chars","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","elAttr","lower","srcset","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","inertBodyHelper","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","sanitizeChildren","getTemplateContent","isTemplateElement","content","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","outsideSingle","outsideDouble","hasBalancedQuotes","SecurityContext","NONE","HTML","STYLE","SCRIPT","URL","RESOURCE_URL","Sanitizer","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","_addDebugContext","viewDebugError","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","unwrapValue","nodeIdx","bindingIdx","unwrap","globalBindingIdx","bindingIndex","oldValues","createRendererType2","_renderCompCount","resolveRendererType2","isFilled","checkBinding","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","componentView","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","configurable","getParentRenderElement","renderHost","renderParent","componentRendererType","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","EMPTY_ARRAY$2","EMPTY_MAP","anchorDef","templateFactory","outputIndex","checkIndex","childFlags","directChildFlags","childMatchedQueries","ns","attrs","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","bindingDefs","suffixOrSecurityContext","securityContext","suffix","nonMinifiedName","outputDefs","elDef","selectorOrNode","createComment","parentEl","selectRootElement","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementValue","binding","elData","renderNode$$1","renderValue","sanitize","setElementAttribute","removeClass","setElementClass","unit","setStyle","removeStyle","setElementStyle","setProperty","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","moduleProvideDef","moduleDef","providersByKey","modules","isRoot","resolveNgModuleDep","depDef","tokenKey$$1","providerDef","_def","providerInstance","_createProviderInstance","moduleTransitivelyPresent","injectable","depValues","_createClass","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","createComponentFactory","viewDefFactory","ComponentFactory_","getComponentViewDefinitionFactory","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","createViewContainerData","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","ngModuleRef","contextInjector","parentInjector","viewRef_","parentView","vcElementData","dvcElementData","projectedViews","_projectedViews","nodeFlags","parentNodeDef","markNodeAsProjectedTemplate","attachProjectedView","attachEmbeddedView","oldViewIndex","newViewIndex","moveEmbeddedView","viewData","createChangeDetectorRef","_viewContainerRef","_appRef","renderNodes","rootRenderNodes","fs","rendererFactory","begin","end","disposables","detach","vcRef","createTemplateData","TemplateRef_","_parentView","createInjector$1","nodeValue","createRendererV1","RendererAdapter","hostElement","parentElement","comment","createText","viewRootNodes","viewAllNodes","propertyName","propertyValue","attributeValue","className","isAdd","styleName","styleValue","methodName","setValue","bootstrapComponents","NgModuleRef_","_moduleType","provDef","initNgModule","injectFlags","lifecycles","callNgModuleLifecycle","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","directiveDef","pipeDef","depDefs","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","eventHandlerClosure","allowPrivateServices","callFactory","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","searchView","findCompView","viewContainer","providerData","updateProp","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","queryIds","nodeMatchedQueries","tplDef","setDirty","checkAndUpdateQuery","queryList","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","textDef","staticText","prefix","_addInterpolationPart","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","validateNode","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","anchorDef$$1","createView","initView","createViewNodes","rendererType","compRenderer","createRenderer","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementInline","checkAndUpdateTextInline","directive","ngOnChanges","ngDoCheck","checkAndUpdateDirectiveInline","transform","checkAndUpdatePureExpressionInline","checkAndUpdateNodeInline","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkAndUpdateNodeDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyNode","destroyViewNodes","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","callViewAction","viewState","execProjectedViewsAction","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","viewDef$$1","viewDefOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","calcHasOverrides","moduleSet","applyProviderOverrides","applyProviderOverridesToNgModule","comp","compFactory","hostViewDef","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","findElementIndicesWithOverwrittenProviders","applyProviderOverridesToElement","elIndex","_currentAction","_currentView","_currentNodeIndex","nextDirectiveWithBinding","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","givenValues","bindingValues","CAMEL_CASE_REGEXP","m","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","queueInitHooks","onInit","doCheck","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","start","queueContentHooks","queueViewHooks","queueDestroyHooks","afterContentInit","contentHooks","afterContentChecked","contentCheckHooks","afterViewInit","viewHooks","afterViewChecked","viewCheckHooks","destroyHooks","executeInitHooks","currentView","creationMode","executeHooks","allHooks","hooksToCall","callHooks","throwMultipleComponentError","tNode","RendererStyleFlags3","isProceduralRenderer","domRendererFactory3","document","stringify$1","loadInternal","readElementValue","getNextLNode","getChildLNode","getParentLNode","containerHostIndex","dynamicLContainerNode","projectionNodeStack","walkLNodeTree","startingNode","rootNode","renderParentNode","beforeNode","projectionNodeIndex","native","executeNodeAction","lContainerNode","childContainerData","componentHost","findComponentHost","head","lViewData","viewRootLNode","createTextNode","addRemoveViewFromContainer","container","insertMode","insertView","viewNode","views","lView","removeIndex","detached","removedLView","removeView","destroyLView","getLViewChild","hostNode","rootView","cleanUpView","viewOrContainer","getParentState","destroyViewTree","cleanup","removeEventListener","cleanupFn","removeListeners","executeOnDestroys","pipeDestroyHooks","executePipeOnDestroys","canInsertNativeNode","grandParentContainer","appendProjectedNode","lContainer","isCssClassMatching","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","isNodeMatchingSelector","mode","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","selectorAttrValue","nodeAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","ngProjectAsAttrIdx","getProjectAsAttrValue","EMPTY_ARR","EMPTY_OBJ","updateStyleProp","singleIndex","currFlag","getPointers","hasValueChanged","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","isClassBased","valueExists","setContextDirty","removeProperty","setClass","isDirtyYes","adjustedIndex","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","getStyleSanitizer","setProp","setFlag","getProp","findEntryPositionByProp","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","indexStartPosition","initialIndexForSingle","updateSinglePointerValues","prepareInitialFlag","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","HEADER_FILLER","previousOrParentNode","isParent","currentQueries","directives","currentElementNode","getRenderer","getCurrentSanitizer","getViewData","getPreviousOrParentNode","getCleanup","getTViewCleanup","checkNoChangesMode","enterView","newView","host","leaveView","creationOnly","refreshView","lViewNode","dynamicViewData","renderEmbeddedTemplate","refreshDynamicEmbeddedViews","setHostBindings","hostBindings","contentQueries","directiveDefIdx","refreshContentQueries","componentRefresh","refreshChildComponents","defs","dirIndex","executeInitAndContentHooks","createLViewData","createLNodeObject","queries","nodeInjector","createLNode","tParent","isState","createTNode","tData","previousTNode","dynamicContainerNode","resetApplicationState","rf","_isParent","_previousOrParentNode","tickRootContext","namespaceHTML","renderComponentOrTemplate","componentOrContext","getRenderFlags","_currentNamespace","namespaceSVG","namespaceMathML","localRefs","elementStart","elementEnd","elementCreate","setUpAttributes","createDirectivesAndLocals","overriddenRenderer","rendererToUse","createElementNS","exportsMap","currentMatches","findDirectiveMatches","valueIndex","resolveDirective","saveNameToExportMap","localNames","cacheMatchingLocalNames","cacheMatchingDirectivesForNode","tDirectives","directiveCreate","instantiateDirectivesDirectly","saveResolvedLocalsInData","directiveRegistry","diPublic","throwCyclicDependencyError","queueComponentIndexForCheck","initChangeDetectorIfExisting","_setComponentContext","exportAs","getOrCreateTView","pipes","viewQuery","ngPrivateData","createTView","bindingStartIndex","pipeRegistry","isProc","namespaceURI","attrVal","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","tag","rNode","directiveDefs","pipeDefs","onPush","listenerFn","useCapture","wrappedListener","markViewDirty","wrapListenerWithDirtyLogic","storeCleanupFn","preventDefault","wrapListenerWithDirtyAndDefault","addEventListener","cleanupInstances","generatePropertyAliases","outputData","storeCleanupWithContext","createOutput","addNode","elementAttribute","NO_CHANGE","loadElement","strValue","elementProperty","inputData","dataValue","setInputsForProperty","markDirtyIfOnPush","tViews","initialInputs","stylingTemplate","projection","tNodeFlags","direction","propStore","isInput","propertyAliasMap","publicName","internalName","elementClassProp","stylingIndex","addOrRemove","updateClassProp","getStylingContext","elementStyling","classDeclarations","styleDeclarations","styleSanitizer","initialClassDeclarations","initialStyleDeclarations","initialStylingValues","stylesLookup","classesLookup","totalStyleDeclarations","hasPassedDeclarations","styleProps","classNames","classNamesIndexStart","totalProps","maxLength","multiStart","indexForInitial","initialValue","indexForSingle","initialFlag","createStylingContextTemplate","elementStylingApply","stylingContext","load","lElement","templateStyleContext","allocStylingContext","styleStore","classStore","isContextDirty","multiStartIndex","valueToApply","renderStyling","elementStyleProp","styleIndex","valueToAdd","elementStylingMap","applyAllClasses","ignoreAllClassUpdates","cachedClassString","classesStartIndex","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","indexOfEntry","valueToCompare","flagToCompare","updateStylingMap","textNode","textBinding","existingNode","textContent","baseDirectiveCreate","directiveIndex","addToViewTree","addComponentLogic","initialInputData","minifiedInputName","attrValue","generateInitialInputs","setInputsFromAttrs","enumerable","createLContainer","parentLNode","isForViewContainerRef","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerNode","startIdx","viewAtPositionId","scanForView","containerTViews","getOrCreateEmbeddedTView","embeddedViewEnd","adjustedElementIndex","viewAttached","detectChangesInternal","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","projectionNodeStack$1","selectorIndex","grandparent","nodeToProject","currentComponentHost","firstProjectedNode","lNode","adjustedHostIndex","rootContext","clean","scheduleTick","rootComponent","_getComponentHostLElementNode","getRootView","hostTView","createViewQuery","updateViewQuery","markDirty","initBindings","bindingUpdated","reserveSlots","numSlots","moveBindingIndexToReservedSlot","currentSlot","restoreBindingIndex","interpolationV","different","interpolation1","interpolation2","i0","bindingUpdated2","interpolation3","i1","interpolation4","i2","bindingUpdated4","interpolation5","i3","interpolation6","i4","interpolation7","i5","interpolation8","i6","loadDirective","loadQueryList","queryListIdx","loadElementInternal","consumeBinding","throwErrorIfNoChangesMode","checkAndUpdateBinding$1","exp1","exp2","exp3","exp4","getTView","registerContentQuery","savedContentQueriesLength","currentDirectiveIndex","tViewContentQueries","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","renderComponent","componentDef","createRootContext","requestAnimationFrame","elementNode","componentTag","hostFeatures","feature","whenRendered","getRootContext","defineComponent","componentDefinition","pipeTypes","directiveTypes","declaredInputs","contentQueriesRefresh","invertObject","extractDirectiveDef","extractPipeDef","features","ngComponentDef","ngDirectiveDef","ngPipeDef","defineNgModule","declarations","transitiveCompileScopes","EMPTY$1","secondary","newLookup","minifiedKey","declaredName","defineDirective","definePipe","fillProperties","isComponentDef","definition","InheritDefinitionFeature","superType","superDef","prevHostBindings","superHostBindings","elementIndex","superPrototype","NgOnChangesFeature","declaredToMinifiedInputs","proto","privateMinKey","originalProperty","checkProto","getOwnPropertyDescriptor","simpleChanges","writable","isFirstChange","currentChange","onChangesWrapper","delegateHook","ViewRef$1","_lViewNode","ComponentFactoryResolver$1","ComponentFactory$1","toRefArray","nonMinified","ROOT_CONTEXT","SCHEDULER","isInternalRootView","LifecycleHooksFeature","projection$$1","nodeList","firstTNode","ComponentRef$1","destroyCbs","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","elementRef","di","bloomBit","mask","bloomAdd","diPublicInInjector","directiveInject","getOrCreateInjectable","injectElementRef","getOrCreateElementRef","injectTemplateRef","getOrCreateTemplateRef","injectViewContainerRef","getOrCreateContainerRef","injectChangeDetectorRef","getOrCreateChangeDetectorRef","injectAttribute","attrNameToInject","currentNode","getClosestComponentAncestor","hostInjector","getOrCreateHostChangeDetector","bloomHash","bloomHashBit","formerInjector","bloomFindPossibleInjector","searchMatchesQueuedForCreation","sameHostView","startInjector","ElementRef$1","vcRefHost","hostParent","hostTNode","ViewContainerRef$1","_lContainerNode","_viewRefs","adjustedIdx","_adjustIndex","newIndex","TemplateRef$1","_tView","_renderer","_queries","createEmbeddedViewNode","PublicFeature","i18nTagRegex","i18nMapping","translation","elements","expressions","templateRoots","lastChildIndex","translationParts","instructions","generateMappingInstructions","tmplIndex","partIndex","tmplInstructions","phVisited","openedTagCount","maxIndex","currentElements","currentExpressions","phIndex","templateRootIndex","newTmplIndex","tmplElements","phKeys","ph","tmplExpressions","appendI18nNode","previousNode","i18nApply","localParentNode","localPreviousNode","instruction","element$$1","textRNode","removedNode","i18nExpMapping","placeholders","i18nInterpolation1","i18nInterpolation2","i18nInterpolation3","idx","b1","i18nInterpolation4","i18nInterpolation5","b2","i18nInterpolation6","i18nInterpolation7","i18nInterpolation8","i18nInterpolationV","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","ngModuleDef","componentFactoryResolver","NgModuleFactory$1","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipeName","getPipeDef","pipeInstance","pipeBind1","isPure","pipeBind2","pipeBind3","pipeBind4","pipeBindV","LQueries_","deep","shallow","descend","read","createQuery$1","containerValues","clonedQuery","viewValuesIdx","getIdxOfMatchingSelector","getIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","createPredicate","previous","_valuesTree","QueryList_","_values","flatten$1","QueryList$1","memoryIndex","QueryType","clone","track","queryRefresh","BRAND","allowSanitizationBypass","bypassSanitizationTrustHtml","trustedHtml","bypassSanitizationTrustString","bypassSanitizationTrustStyle","trustedStyle","bypassSanitizationTrustScript","trustedScript","bypassSanitizationTrustUrl","trustedUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","trustedString","trusted","sanitizeHtml","sanitizeStyle","unsafeStyle","sanitizeUrl","unsafeUrl","sanitizeResourceUrl","unsafeResourceUrl","rxjs_1","BreadcrumbsService","prefixedBreadcrumbs","breadcrumbsSource","Subject","breadcrumbsChanged$","asObservable","localStorage","getItem","parse","allBreadcrumbs","storeIfUnique","setItem","newBreadcrumb","isUnique","_i","_a","ObjectUnsubscribedError","takeLast","TakeLastOperator","total","TakeLastSubscriber","ring","subscribeToObservable","obs","TypeError","Observable","subscribeTo","sub","Subscription","fromObservable","subscribeToPromise","fromPromise","isArrayLike","fromArray","isIterable","return","subscribeToIterable","fromIterable","Action","setInterval","clearInterval","_execute","errorValue","x","ConnectableObservable","subjectFactory","_refCount","_isComplete","getSubject","subject","_subject","connection","_connection","ConnectableSubscriber","connectableProto","connectableObservableDescriptor","operator","connect","refCount","connectable","_unsubscribe","empty","emptyScheduled","every","EveryOperator","EverySubscriber","everyValueMatch","notifyComplete","_isScalar","nextOrObserver","toSubscriber","_trySubscribe","promiseCtor","getPromiseCtor","operations","SchedulerAction","take","TakeOperator","TakeSubscriber","catchError","CatchOperator","caught","CatchSubscriber","err2","_unsubscribeAndRecycle","scan","hasSeed","ScanOperator","ScanSubscriber","_seed","of","AsyncSubject","hasNext","hostReportError","defaultValue","hasDefaultValue","defer","observableFactory","publish","race","RaceOperator","RaceSubscriber","hasFirst","subscriptions","groupBy","keySelector","elementSelector","durationSelector","subjectSelector","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","group","groupedObservable","GroupedObservable","duration","GroupDurationSubscriber","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","timer","dueTime","periodOrScheduler","period","due","PlatformLocation","LOCATION_INITIALIZED","LocationStrategy","APP_BASE_HREF","Location","platformStrategy","_platformStrategy","browserBaseHref","getBaseHref","_baseHref","stripTrailingSlash","_stripIndexHtml","onPopState","ev","includeHash","normalize","normalizeQueryParams","baseHref","startsWith","_stripBaseHref","prepareExternalUrl","pushState","replaceState","forward","back","onNext","onThrow","onReturn","slashes","endsWith","pathEndIdx","HashLocationStrategy","_platformLocation","onHashChange","hash","internal","joinWithSlash","title","queryParams","pathname","PathLocationStrategy","href","getBaseHrefFromDOM","search","externalUrl","u","localeEn","n","LOCALE_DATA","registerLocaleData","localeId","extraData","CURRENCIES_EN","NumberFormatStyle","Decimal","Percent","Currency","Scientific","Plural","Zero","One","Two","Few","Many","Other","FormStyle","Format","Standalone","TranslationWidth","Narrow","Abbreviated","Wide","Short","FormatWidth","Medium","Long","Full","NumberSymbol","Group","List","PercentSign","PlusSign","MinusSign","Exponential","SuperscriptingExponent","PerMille","Infinity","NaN","TimeSeparator","CurrencyDecimal","CurrencyGroup","WeekDay","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","getLocaleId","findLocaleData","getLocaleDayPeriods","formStyle","width","amPm","getLastDefinedValue","getLocaleDayNames","days","getLocaleMonthNames","months","getLocaleEraNames","getLocaleFirstDayOfWeek","getLocaleWeekEndRange","getLocaleDateFormat","getLocaleTimeFormat","getLocaleDateTimeFormat","getLocaleNumberSymbol","symbol","getLocaleNumberFormat","getLocaleCurrencySymbol","getLocaleCurrencyName","getLocalePluralCase","checkFullData","getLocaleExtraDayPeriodRules","rule","extractTime","getLocaleExtraDayPeriods","dayPeriods","h","hours","minutes","normalizedLocale","parentLocale","getCurrencySymbol","code","format","currency","getLocaleCurrencies","symbolNarrow","getNumberOfCurrencyDigits","digits","ISO8601_DATE_REGEX","NAMED_FORMATS","DATE_FORMATS_SPLIT","ZoneWidth","ShortGMT","Extended","DateType","FullYear","Month","Date","Hours","Minutes","Seconds","FractionalSeconds","Day","TranslationType","DayPeriods","Days","Months","Eras","formatDate","timezone","date","isDate","parsedNb","parseFloat","test","y","d","val","isoStringToDate","toDate","getNamedFormat","formatValue","shortTime","shortDate","formatDateTime","mediumTime","mediumDate","longTime","longDate","fullTime","fullDate","part","dateTimezoneOffset","getTimezoneOffset","timezoneToOffset","getTime","setMinutes","getMinutes","addDateMinutes","convertTimezoneToLocal","dateFormatter","DATE_FORMATS","formatter","dateStrGetter","dateGetter","weekGetter","timeZoneGetter","getDateFormatter","str","opt_values","padNumber","num","minusSign","negWrap","neg","strNum","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","getDay","getDatePart","localeMinus","form","extended","currentHours","currentMinutes","rules","hoursFrom","minutesFrom","hoursTo","minutesTo","getDateTranslation","ceil","monthBased","nbDaysBefore1stDayOfMonth","today","firstThurs","year","firstDayOfYear","THURSDAY","getFirstThursdayOfYear","diff","datetime","round","fallback","requestedTimezoneOffset","tzHour","tzMin","dateSetter","setUTCFullYear","setFullYear","timeSetter","setUTCHours","setHours","ms","valueOf","NUMBER_FORMAT_REGEXP","formatNumberToLocaleString","pattern","groupSymbol","decimalSymbol","digitsInfo","isPercent","formattedText","isZero","isFinite","parsedNumber","integerLen","zeros","numStr","exponent","MAX_DIGITS","parseNumber","fractionLen","toPercent","minInt","minFraction","minFrac","maxFraction","maxFrac","minIntPart","minFractionPart","maxFractionPart","parseIntAutoRadix","fractionSize","min","roundAt","digit","dropTrailingZeros","minLen","carry","reduceRight","roundNumber","decimals","lgSize","gSize","negPre","negSuf","posPre","posSuf","formatCurrency","currencyCode","parseNumberFormat","formatPercent","formatNumber","patternParts","positive","negative","positiveParts","lastIndexOf","integer","fraction","ch","trunkLen","pos","parseInt","DEPRECATED_PLURAL_FN","NgLocalization","getPluralCategory","cases","ngLocalization","NgLocaleLocalization","deprecatedPluralFn","getPluralCase","nLike","nDecimal","parseCookieValue","cookieStr","encodeURIComponent","cookie","eqIndex","cookieName","cookieValue","decodeURIComponent","NgClass","_iterableDiffers","_keyValueDiffers","_ngEl","_initialClasses","_removeClasses","_applyClasses","_rawClass","_iterableDiffer","_keyValueDiffer","iterableChanges","_applyIterableChanges","keyValueChanges","_applyKeyValueChanges","forEachAddedItem","_toggleClass","forEachChangedItem","forEachRemovedItem","rawClassVal","klass","enabled","NgComponentOutlet","_componentRef","_moduleRef","ngComponentOutlet","ngComponentOutletInjector","ngComponentOutletNgModuleFactory","parentModule","createComponent","ngComponentOutletContent","NgForOfContext","$implicit","ngForOf","even","NgForOf","_viewContainer","_template","_differs","_ngForOfDirty","_differ","_ngForOf","ngForTrackBy","_applyChanges","insertTuples","forEachOperation","adjustedPreviousIndex","tuple","RecordViewTuple","move","_perViewChange","ilen","forEachIdentityChange","NgIf","NgIfContext","_thenTemplateRef","_elseTemplateRef","_thenViewRef","_elseViewRef","condition","ngIf","_updateView","assertTemplate","property","SwitchView","_templateRef","_created","created","NgSwitch","_defaultUsed","_caseCount","_lastCaseCheckIndex","_lastCasesMatched","_ngSwitch","_updateDefaultCases","_defaultViews","matched","useDefault","enforceState","NgSwitchCase","ngSwitch","_addCase","_matchCase","ngSwitchCase","NgSwitchDefault","_addDefault","NgPlural","_localization","_caseViews","_switchValue","switchView","_clearViews","_activateView","_activeView","NgPluralCase","ngPlural","isANumber","addCase","NgStyle","_ngStyle","_setStyle","nameAndUnit","NgTemplateOutlet","_shouldRecreateView","ngTemplateOutlet","ngTemplateOutletContext","_updateExistingContext","ctxChange","_hasContextShapeChanged","prevCtxKeys","currCtxKeys","ctx","COMMON_DIRECTIVES","invalidPipeArgumentError","DATE_FORMATS_SPLIT$1","PATTERN_ALIASES","datePartGetterFactory","combine","digitCondition","nameCondition","DATE_FORMATS$1","digitModifier","hourExtractor","hour12Modify","hourClockExtractor","timeZoneGetter$1","inner","intlDateFormat","Intl","DateTimeFormat","hour","hour12","timeZoneName","merged","opt","ret","DATE_FORMATTER_CACHE","DeprecatedDatePipe","_locale","isDate$1","cacheKey","_format","partToTime","_ALIASES","formatNumber$1","currencyAsSymbol","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","currencyDisplay","NumberFormat","DeprecatedDecimalPipe","DeprecatedPercentPipe","DeprecatedCurrencyPipe","symbolDisplay","COMMON_DEPRECATED_I18N_PIPES","ObservableStrategy","async","updateLatestValue","PromiseStrategy","_promiseStrategy","_observableStrategy","AsyncPipe","_ref","_latestValue","_latestReturnedValue","_subscription","_obj","_strategy","_dispose","wrap","_selectStrategy","createSubscription","_updateLatestValue","dispose","markForCheck","LowerCasePipe","unicodeWordMatch","TitleCasePipe","txt","toUpperCase","UpperCasePipe","DatePipe","_INTERPOLATION_REGEXP","I18nPluralPipe","pluralMap","I18nSelectPipe","mapping","JsonPipe","KeyValuePipe","differs","compareFn","defaultComparator","differ","differChanges","keyValues","forEachItem","sort","keyValueA","keyValueB","aString","bString","DecimalPipe","isEmpty","strToNumber","PercentPipe","CurrencyPipe","display","SlicePipe","COMMON_PIPES","CommonModule","DeprecatedI18NPipesModule","DOCUMENT","PLATFORM_BROWSER_ID","PLATFORM_SERVER_ID","PLATFORM_WORKER_APP_ID","PLATFORM_WORKER_UI_ID","isPlatformBrowser","platformId","isPlatformServer","isPlatformWorkerApp","isPlatformWorkerUi","ViewportScroller","BrowserViewportScroller","supportScrollRestoration","scrollX","scrollY","position","scrollTo","anchor","elSelectedById","scrollToElement","elSelectedByName","scrollRestoration","history","rect","getBoundingClientRect","left","pageXOffset","top","pageYOffset","NullViewportScroller","identity","merge","Notification","kind","do","undefinedValueNotification","completeNotification","throwIfEmpty","errorFactory","defaultErrorFactory","SubjectSubscriber","observers","AnonymousSubject","copy","scalar","isObject","Scheduler","TimeoutError","isNumeric","SubjectSubscription","subscriberIndex","InnerSubscriber","notifyNext","notifyError","subscribeToResult","outerSubscriber","breadcrumbs_component_1","platform_browser_1","common_1","breadcrumbs_service_1","BreadcrumbsModule","RouterModule","BrowserModule","mergeAll","concatMap","_DOM","getDOM","setRootDomAdapter","adapter","DomAdapter","resourceLoaderType","_attrToPropMap","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","getStyle","domPrefixes","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","getDistributedNodes","baseUrl","createShadowRoot","_keyMap","_chromeNumKeyPadMap","nodeContains","contains","BrowserDomAdapter","templateHtml","groupEnd","nodeA","nodeB","querySelectorAll","evt","eventType","getDefaultDocument","createEvent","initEvent","defaultPrevented","hasProperty","replaceChild","checked","doc","css","shadowRoot","cloneNode","getElementsByClassName","getElementsByTagName","classList","stylename","attrib","attribute","hasAttribute","hasAttributeNS","getAttribute","getAttributeNS","removeAttributeNS","bottom","right","height","newTitle","isElementNode","msMatchesSelector","webkitMatchesSelector","COMMENT_NODE","HTMLElement","DocumentFragment","importNode","templateAwareRoot","adoptNode","keyIdentifier","baseElement","urlParsingNode","navigator","userAgent","getComputedStyle","performance","DOCUMENT$1","supportsState","BrowserPlatformLocation","_doc","_init","getLocation","_history","getHistory","getGlobalEventTarget","newPath","TRANSITION_ID","appInitializerFactory","transitionId","dom","SERVER_TRANSITION_PROVIDERS","BrowserGetTestability","getAllTestabilities","getAllRootElements","testabilities","didWork","decrement","didWork_","whenStable","getTestability","isShadowRoot","getHost","exportNgVar","COMPILED","CORE_TOKENS","inspectNativeElement","_createNgProbe","coreTokens","ELEMENT_PROBE_PROVIDERS","EVENT_MANAGER_PLUGINS","EventManager","plugins","_eventNameToPlugin","manager","_plugins","handler","_findPluginFor","addGlobalEventListener","plugin","EventManagerPlugin","SharedStylesHost","_stylesSet","additions","onStylesAdded","DomSharedStylesHost","_hostNodes","_styleNodes","styleEl","_addStylesToHost","styleNode","NAMESPACE_URIS","COMPONENT_REGEX","shimContentAttribute","componentShortId","shimHostAttribute","flattenStyles","compId","decoratePreventDefault","eventHandler","DomRendererFactory2","eventManager","sharedStylesHost","rendererByCompId","DefaultDomRenderer2","EmulatedEncapsulationDomRenderer2","applyToHost","ShadowDomRenderer","addStyles","namespaceUri","checkNoSyntheticProp","AT_CHARCODE","nameKind","contentAttr","hostAttr","hostEl","attachShadow","addHost","removeHost","nodeOrShadowRoot","__symbol__","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","symbolNames","stopSymbol","blackListedMap","isBlackListedEvent","globalListener","symbolName","taskDatas","taskData","copiedTasks","DomEventsPlugin","patchEvent","Event","stopImmediatePropagation","globalListenerRegistered","callbackRegistered","underlyingRemove","found","EVENT_NAMES","HAMMER_GESTURE_CONFIG","HAMMER_LOADER","HammerGestureConfig","overrides","mc","enable","HammerGesturesPlugin","loader","isCustomEvent","Hammer","getZone","cancelRegistration","deregister","buildHammer","on","off","MODIFIER_KEYS","MODIFIER_KEY_GETTERS","altKey","ctrlKey","metaKey","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","onAndCancel","domEventName","_normalizeKey","fullKey","modifierName","getEventKey","modifierGetter","getEventFullKey","keyName","DomSanitizer","DomSanitizerImpl","SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","SafeStyleImpl","SafeScriptImpl","SafeResourceUrlImpl","SafeUrlImpl","expectedType","SafeValueImpl","getTypeName","INTERNAL_BROWSER_PLATFORM_PROVIDERS","initDomAdapter","_document","BROWSER_SANITIZATION_PROVIDERS","platformBrowser","makeCurrent","BROWSER_MODULE_PROVIDERS","appId","createMeta","Meta","_dom","forceCreation","_getOrCreateElement","attrSelector","_parseSelector","getTag","_setMetaElementAttributes","removeTagElement","_containsAttributes","createTitle","Title","getTitle","setTitle","win","ChangeDetectionPerfRecord","msPerTick","numTicks","AngularProfiler","isProfilerAvailable","profile","performanceNow","toFixed","enableDebugTools","disableDebugTools","escapeHtml","escapedText","'","makeStateKey","TransferState","onSerializeCallbacks","transferState","initTransferState","script","getElementById","initialState","unescapedText","unescapeHtml","BrowserTransferStateModule","By","debugElement","elementMatches","forkJoin","sources","ForkJoinSubscriber","completed","haveValues","innerSubscription","_hasValue","webpackEmptyAsyncContext","req","errorObject","switchMap","SwitchMapOperator","SwitchMapSubscriber","RouterEvent","NavigationStart","navigationTrigger","restoredState","urlAfterRedirects","NavigationCancel","reason","NavigationError","RoutesRecognized","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","EmptyOutletComponent","ParamsAsMap","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","pathMatch","hasChildren","posParams","consumed","LoadedRouterConfig","routes","validateConfig","parentPath","getFullPath","fullPath","loadChildren","redirectTo","matcher","standardizeConfig","shallowEqual","k1","k2","last$1","map$$1","andObservables","wrapIntoObservable","containsTree","containee","exact","equalQueryParams","equalSegmentGroups","equalPath","numberOfChildren","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","serializePaths","UrlSegment","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","childOutlet","UrlSerializer","DefaultUrlSerializer","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","strParams","encodeUriQuery","serializeQueryParams","encodeUriString","encodeUriSegment","decode","decodeQuery","SEGMENT_RE","matchSegments","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","NoMatch","AbsoluteRedirect","urlTree","noMatch","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","expandSegmentGroup","rootSegmentGroup","createUrlTree","noMatchError","rootCandidate","expandChildren","expandSegment","waitHead","waitTail","mapped","waitForMap","expandSegmentAgainstRoute","_","noLeftoversInUrl","paths","getOutlet","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","newSegments","consumedSegments","lastChild","positionalParamSegments","rawSegmentGroup","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","isEmptyPathRedirect","containsEmptyPathRedirectsWithNamedOutlets","mergeTrivialChildren","primarySegmentGroup","createChildrenForEmptySegments","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","cs","canLoad","injectionToken","guard","runCanLoadGuard","shouldLoad","navigationCancelingError","canLoadFails","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","Tree","_root","pathFromRoot","findNode","findPath","cc","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","activated","ActivatedRouteSnapshot","RouterStateSnapshot","createEmptyStateSnapshot","emptyUrl","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","curr","_resolvedData","flattenInherited","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","Position","processChildren","getPath","updateSegmentGroup","updateSegmentGroupChildren","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","prefixedWith","slicedCommands","g","createNewSegmentGroup","getOutlets","createNewSegmentChildren","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","parentContexts","futureRoot","setupChildRouteGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","runResolve","__","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","shouldRunGuardsAndResolvers","runGuardsAndResolvers","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","getResolver","resolver","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","relativeLinkResolution","split$1","processSegmentGroup","freeze","routeState","inheritParamsAndData","routeNode","processSegment","names","routeWithSameOutletName","checkOutletNameUniqueness","localeCompare","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","emptyPathMatch","getOutlet$1","containsEmptyPathMatchesWithNamedOutlets","primarySegment","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","detachedTree","ROUTES","RouterConfigLoader","compiler","onLoadStartListener","onLoadEndListener","loadModuleFactory","UrlHandlingStrategy","DefaultUrlHandlingStrategy","newUrlPart","wholeUrl","defaultErrorHandler","defaultMalformedUriErrorHandler","defaultRouterHook","runExtras","Router","rootContexts","navigations","navigationId","isNgZoneEnabled","malformedUriErrorHandler","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","urlUpdateStrategy","resetConfig","currentUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","parseUrl","scheduleNavigation","serializeUrl","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","q","removeEmptyProps","nav","cmd","cmdIdx","urlPart","computeNavigation","toRoot","startingPosition","modifier","ci","dd","createPositionApplyingDoubleDots","findStartingPosition","extras","skipLocationChange","mergedTree","validateCommands","executeScheduledNavigation","rawUrl","lastNavigation","extract","urlTransition","shouldProcessUrl","setBrowserUrl","runNavigate","precreatedState","resolvePromise","rejectPromise","urlAndSnapshot$","preActivation","appliedUrl","recognize","routerState$","appliedUrlTree","initialize","checkGuards","resolveData","prevState","createNode","shouldReuseRoute","createOrReuseChildren","detachedRouteHandle","retrieve","setFutureSnapshotsOfActivatedRoutes","createRouterState","activateRoutes","storedState","storedUrl","navigationIsSuccessful","ActivateRoutes","activate","resetUrlToCurrentUrlTree","resetStateAndUrl","ee","isCurrentPathEqualTo","go","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","shouldDetach","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","onOutletDeactivated","deactivate","getOrCreateContext","shouldAttach","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","activateWith","RouterLink","tabIndex","preserve","attrBoolValue","RouterLinkWithHref","locationStrategy","updateTargetUrlAndHref","button","RouterLinkActive","cdr","isActive","routerLinkActiveOptions","update","links","linksWithHrefs","hasActiveLinks","link","isLinkActive","OutletContext","ChildrenOutletContexts","RouterOutlet","changeDetector","_activatedRoute","activateEvents","deactivateEvents","onChildOutletCreated","onChildOutletDestroyed","cmp","childContexts","OutletInjector","PreloadingStrategy","PreloadAllModules","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","preload","processRoutes","preloadConfig","RouterScroller","viewportScroller","lastId","lastSource","restoredId","scrollPositionRestoration","anchorScrolling","setHistoryScrollRestoration","routerEventsSubscription","createScrollEvents","scrollEventsSubscription","consumeScrollEvents","getScrollPosition","scheduleScrollEvent","scrollToPosition","scrollToAnchor","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","setupRouter","rootRoute","enableTracing","routerNgProbeToken","provideRoutes","provideForRootGuard","provideLocationStrategy","createRouterScroller","provideRouterInitializer","scrollOffset","setOffset","platformLocationStrategy","useHash","logGroup","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","isLegacyDisabled","isLegacyEnabled","initialNavigation","bootstrappedComponentRef","preloader","routerScroller","setUpPreloading","resetRootComponentType","getAppInitializer","appInitializer","getBootstrapListener","bootstrapListener","ROUTER_INITIALIZER","combineLatest","CombineLatestOperator","CombineLatestSubscriber","toRespond","unused","_tryResultSelector","ReplaySubject","bufferSize","windowTime","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","eventsCount","spliceCount","audit","AuditOperator","throttled","tryCatch","clearThrottle","auditTime","closingNotifier","BufferOperator","bufferCount","startBufferEvery","BufferCountOperator","subscriberClass","BufferSkipCountSubscriber","BufferCountSubscriber","buffers","bufferTime","bufferTimeSpan","isScheduler","bufferCreationInterval","maxBufferSize","BufferTimeOperator","BufferTimeSubscriber","Context","openContext","timespanOnly","closeAction","dispatchBufferTimeSpanOnly","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","prevContext","bufferToggle","openings","closingSelector","BufferToggleOperator","closeBuffer","openBuffer","trySubscribe","bufferWhen","BufferWhenOperator","subscribing","closingSubscription","combineAll","concatMapTo","innerObservable","CountOperator","CountSubscriber","_tryPredicate","debounce","DebounceOperator","durationSubscription","emitValue","debounceTime","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","dispatchNext","debouncedNext","delayWhen","delayDurationSelector","subscriptionDelay","SubscriptionDelayObservable","DelayWhenOperator","delayNotifierSubscriptions","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","dematerialize","DeMaterializeOperator","DeMaterializeSubscriber","distinct","flushes","DistinctOperator","_useKeySelector","_finalizeNext","distinctUntilChanged","DistinctUntilChangedOperator","hasKey","Boolean","distinctUntilKeyChanged","elementAt","defaultIfEmpty","exhaust","SwitchFirstOperator","hasSubscription","exhaustMap","ExhauseMapOperator","tryNext","expand","ExpandOperator","subscribeToProjection","finalize","FinallyOperator","FindValueOperator","yieldIndex","FindValueSubscriber","findIndex","ignoreElements","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptyOperator","IsEmptySubscriber","mapTo","MapToOperator","MapToSubscriber","materialize","MaterializeOperator","createError","comparer","mergeMapTo","mergeScan","MergeScanOperator","onErrorResumeNext","nextSources","OnErrorResumeNextOperator","subscribeToNextSource","pairwise","PairwiseOperator","PairwiseSubscriber","hasPrev","not","pred","notPred","partition","pluck","currentProp","plucker","publishBehavior","multicast","publishLast","publishReplay","selectorOrScheduler","repeat","RepeatOperator","RepeatSubscriber","repeatWhen","notifier","RepeatWhenOperator","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","notifications","retry","RetryOperator","RetrySubscriber","retryWhen","RetryWhenOperator","errors","sample","sampleSubscriber","SampleSubscriber","sampleTime","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","sequenceEqual","compareTo","comparor","SequenceEqualOperator","_b","_oneComplete","checkValues","areEqual","nextB","shareReplay","shareReplayOperator","single","SingleOperator","seenValue","singleValue","applySingleValue","EmptyError","skip","SkipOperator","SkipSubscriber","skipLast","_skipCount","_count","_ring","skipCount","skipUntil","SkipUntilOperator","skipWhile","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","startWith","delayTime","subscribeOn","switchAll","switchMapTo","takeUntil","takeUntilSubscriber","TakeUntilSubscriber","takeWhile","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","defaultThrottleConfig","leading","trailing","throttle","ThrottleOperator","_leading","_trailing","_sendValue","_throttled","tryDurationSelector","throttlingDone","throttleTime","ThrottleTimeOperator","ThrottleTimeSubscriber","_hasTrailingValue","_trailingValue","timeInterval","TimeInterval","interval","timeoutWith","withObservable","absoluteTimeout","waitFor","TimeoutWithOperator","scheduleTimeout","dispatchTimeout","throwError","timestamp","Timestamp","toArrayReducer","toArray","windowBoundaries","windowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowCount","windowSize","startWindowEvery","WindowCountOperator","windows","windowTimeSpan","windowCreationInterval","maxWindowSize","WindowTimeOperator","WindowTimeSubscriber","_numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","windowToggle","WindowToggleOperator","openSubscription","windowWhen","unsubscribeClosingNotification","closingNotification","withLatestFrom","WithLatestFromOperator","_tryProject","zipAll","MapOperator","MapSubscriber","fns","pipeFromArray","tryCatchTarget","tryCatcher","isFunction","subscribeToArray","subjectOrSubjectFactory","MulticastOperator","FilterOperator","FilterSubscriber","UnsubscriptionError","observeOn","ObserveOnOperator","ObserveOnSubscriber","ObserveOnMessage","scheduleMessage","AnimationFrameAction","cancelAnimationFrame","animationFrame","VirtualTimeScheduler","VirtualAction","maxFrames","frame","frameTimeFactor","sortActions","bindCallback","callbackFunc","innerArgs","bindNodeCallback","fromEventPattern","addHandler","removeHandler","retValue","generate","initialStateOrOptions","iterate","resultSelectorOrObservable","conditionResult","needIterate","iif","trueResult","falseResult","counter","remainder","subNext","pairs","resourceFactory","resource","QueueAction","_subscriptions","hasErrors","flattenUnsubscriptionErrors","teardown","_addParent","tmp","subscriptionIndex","errs","tap","DoOperator","TapSubscriber","_tapNext","_tapError","_tapComplete","shareSubjectFactory","share","RefCountOperator","refCounter","RefCountSubscriber","sharedConnection","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","fromEvent","setupSubscription","sourceObj","isEventTarget","isJQueryStyleEventEmitter","addListener","removeListener","isNodeStyleEventEmitter","auth","loading","toggleLoading","tabId","asd","checkLogged","listerning$","navigate","abc","RenderType_ɵEmptyOutletComponent","View_ɵEmptyOutletComponent_0","_l","View_ɵEmptyOutletComponent_Host_0","ɵEmptyOutletComponentNgFactory","RenderType_PageTitleComponent","View_PageTitleComponent_1","View_PageTitleComponent_0","pageTitle","RenderType_FeaturesComponent","View_FeaturesComponent_0","ad","_co","onActivate","$event","onDeactivate","View_FeaturesComponent_Host_0","_ck","_v","FeaturesComponentNgFactory","_interator","hideTitle","birthday","inputVal","$getSource","RenderType_HomeComponent","View_HomeComponent_0","onClick","routerLink","View_HomeComponent_Host_0","HomeComponentNgFactory","_interactor","toogleDlg","afterClose","RenderType_DialogComponent","View_DialogComponent_0","close","RenderType_DetailComponent","View_DetailComponent_1","View_DetailComponent_0","logger","toggleDlg","demoNgModel","directiveList","warning","details","zoo","LoggerService","RenderType_DirectiveComponent","View_DirectiveComponent_1","detail","View_DirectiveComponent_0","openDlg","getEmit","View_DirectiveComponent_Host_0","DirectiveComponentNgFactory","interaction","api","events$","getAssets","HttpHandler","HttpBackend","HttpHeaders","headers","normalizedNames","lazyUpdate","lazyInit","line","maybeSetNormalizedName","op","lcName","copyFrom","applyUpdate","other","base","toDelete","HttpUrlEncodingCodec","standardEncoding","HttpParams","updates","cloneFrom","encoder","fromString","fromObject","rawParams","codec","param","eqIdx","decodeKey","decodeValue","paramParser","eKey","encodeKey","encodeValue","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","HttpRequest","third","fourth","reportProgress","withCredentials","mightHaveBody","urlWithParams","qIdx","setHeaders","setParams","HttpEventType","Sent","UploadProgress","ResponseHeader","DownloadProgress","Response","User","HttpResponseBase","defaultStatus","defaultStatusText","status","statusText","ok","HttpHeaderResponse","HttpResponse","HttpErrorResponse","addBody","res$","request","callbackParam","append","HttpInterceptorHandler","interceptor","intercept","HTTP_INTERCEPTORS","NoopInterceptor","XSSI_PREFIX","XhrFactory","BrowserXhr","xhrFactory","build","setRequestHeader","detectedType","detectContentTypeHeader","reqBody","serializeBody","headerResponse","partialFromXhr","getAllResponseHeaders","responseURL","getResponseHeader","getResponseUrl","onLoad","responseText","originalBody","sentHeaders","onDownProgress","progressEvent","loaded","lengthComputable","partialText","onUpProgress","progress","upload","abort","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","lastCookieString","lastToken","parseCount","cookieString","HttpXsrfInterceptor","tokenService","headerName","lcUrl","HttpInterceptingHandler","backend","chain","interceptors","HttpClientXsrfModule","HttpClientModule","API_DOMAIN","http","httpOptions","post","ErrorEvent","RenderType_EventsComponent","View_EventsComponent_1","View_EventsComponent_0","View_EventsComponent_Host_0","EventsComponentNgFactory","paramMap","queryParamMap","RenderType_EventDetailComponent","View_EventDetailComponent_0","View_EventDetailComponent_Host_0","EventDetailComponentNgFactory","_cdr","emitChild","datea","listLifeCycle","nameCycleDelete","directiveColor","styleCustom","li","color","currentId","RenderType_LifecycleHooksComponent","View_LifecycleHooksComponent_0","dlgClose","View_LifecycleHooksComponent_Host_0","LifecycleHooksComponentNgFactory","RenderType_AuthComponent","View_AuthComponent_0","View_AuthComponent_Host_0","AuthComponentNgFactory","AbstractControlDirective","control","valid","invalid","disabled","pristine","touched","untouched","statusChanges","valueChanges","errorCode","getError","ControlContainer","isEmptyInputValue","EMAIL_REGEXP","minLength","nullValidator","regex","regexStr","validators","presentValidators","isPresent","_mergeErrors","_executeValidators","_executeAsyncValidators","toObservable","arrayOfErrors","NG_VALUE_ACCESSOR","COMPOSITION_BUFFER_MODE","DefaultValueAccessor","_elementRef","_compositionMode","onChange","onTouched","_composing","getUserAgent","_isAndroid","isDisabled","normalizeValidator","validator","validate","normalizeAsyncValidator","unimplemented","NgControl","valueAccessor","_rawValidators","_rawAsyncValidators","RadioControlRegistry","_accessors","accessor","_isSameGroup","fireUncheck","controlPair","_control","FormErrorExamples","ReactiveErrors","directiveName","controlPath","setUpControl","compose","asyncValidator","composeAsync","writeValue","registerOnChange","_pendingValue","_pendingChange","_pendingDirty","updateOn","updateControl","setUpViewChangePipeline","emitModelEvent","viewToModelUpdate","setUpModelChangePipeline","registerOnTouched","_pendingTouched","markAsTouched","setUpBlurPipeline","setDisabledState","registerOnDisabledChange","registerOnValidatorChange","updateValueAndValidity","markAsDirty","emitModelToViewChange","setUpFormContainer","_noControlError","messageEnd","composeValidators","composeAsyncValidators","isPropertyUpdated","viewModel","BUILTIN_ACCESSORS","_optionMap","_idCounter","_compareWith","_getOptionId","valueString","_buildValueString","_getOptionValue","_extractId","optionSelectedStateSetter","ids","_setSelected","selected","selectedOptions","_extractId$1","_registry","_checkName","_state","_fn","select","formControlName","_throwNameError","syncPendingControls","_syncPendingControls","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","removeDir","AbstractFormGroupDirective","_checkParentType","addFormGroup","formDirective","removeFormGroup","getFormGroup","_validators","_asyncValidators","AbstractControlStatus","cd","_cd","NgControlStatus","NgControlStatusGroup","coerceToValidator","validatorOrOpts","isOptionsObj","coerceToAsyncValidator","origAsyncValidator","asyncValidators","_onCollectionChange","_onDisabledChange","_updateOn","newValidator","onlySelf","_forEachChild","markAsUntouched","_updateTouched","markAsPristine","_updatePristine","emitEvent","markAsPending","disable","_updateValue","_updateAncestors","changeFn","_setInitialStatus","_cancelExistingSubscription","_runValidator","_calculateStatus","_runAsyncValidator","ctrl","_updateTreeValidity","_allControlsDisabled","_asyncValidationSubscription","setErrors","_updateControlsErrors","delimiter","FormGroup","controls","FormArray","at","_find","_anyControlsHaveStatus","_anyControls","_anyControlsDirty","_anyControlsTouched","formState","FormControl","_onChange","_applyFormState","_setUpdateStrategy","_initObservables","emitViewToModelChange","_isBoxedValue","_setUpControls","setParent","_registerOnCollectionChange","registerControl","controlName","_checkAllValuesPresent","_throwIfControlMissing","patchValue","_reduceChildren","getRawValue","subtreeUpdated","updated","_reduceValue","initValue","_registerControl","resolvedPromise","submitted","_directives","ngSubmit","_findContainer","removeControl","resetForm","TemplateDrivenErrors","NgModelGroup","modelGroupParentException","resolvedPromise$1","_registered","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","addControl","standalone","formGroupNameException","modelParentException","missingNameException","disabledValue","NG_MODEL_WITH_FORM_CONTROL_WARNING","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","newCtrl","_clearChangeFns","cleanUpControl","_oldForm","sync","missingFormException","FormGroupName","_hasInvalidParent","groupParentException","FormArrayName","addFormArray","removeFormArray","getFormArray","arrayParentException","FormControlName","_ngModelWarningConfig","_added","_ngModelWarningSent","disabledAttrWarning","warningConfig","_ngModelWarningSentOnce","ngModelWarning","updateModel","ngModelGroupException","controlParentException","FormBuilder","controlsConfig","extra","_reduceControls","_createControl","controlConfig","NgNoValidate","InternalFormsSharedModule","FormsModule","ReactiveFormsModule","warnOnNgModelWithFormControl","_auth","pageInfo","email","password","login","day","minute","always","expires","setTime","toGMTString","ca","domain","CookiesService","getUser","setCookie","isLogin","deleteCookie","getCookie","RenderType_LoginComponent","View_LoginComponent_0","onSubmit","en","onReset","logins","_handleInput","_compositionStart","_compositionEnd","View_LoginComponent_Host_0","LoginComponentNgFactory","fb","registerForm","firstName","lastName","confirmPassword","user","parseUser","alert","RenderType_RegisterComponent","View_RegisterComponent_0","submit","p0_0","View_RegisterComponent_Host_0","RegisterComponentNgFactory","iteraction","logout","RenderType_HeaderComponent","View_HeaderComponent_1","View_HeaderComponent_2","View_HeaderComponent_3","View_HeaderComponent_0","routerLinkActive","RenderType_FooterComponent","View_FooterComponent_0","RenderType_AppComponent","View_AppComponent_1","View_AppComponent_0","addClassEle","View_AppComponent_Host_0","AppComponentNgFactory","RenderType_FeatureComponent","View_FeatureComponent_0","View_FeatureComponent_Host_0","FeatureComponentNgFactory","RenderType_OtherComponent","View_OtherComponent_0","View_OtherComponent_Host_0","OtherComponentNgFactory","loginService","LoginService","RenderType_OtherLoginComponent","View_OtherLoginComponent_0","View_OtherLoginComponent_Host_0","OtherLoginComponentNgFactory","RenderType_UserComponent","View_UserComponent_0","View_UserComponent_Host_0","UserComponentNgFactory","typing","RenderType_UserProfileComponent","View_UserProfileComponent_0","onTyping","View_UserProfileComponent_Host_0","UserProfileComponentNgFactory","RenderType_UserDashboardComponent","View_UserDashboardComponent_0","View_UserDashboardComponent_Host_0","UserDashboardComponentNgFactory","authen","AuthenService","RenderType_ClientComponent","View_ClientComponent_0","View_ClientComponent_Host_0","ClientComponentNgFactory","RenderType_ClientHomeComponent","View_ClientHomeComponent_0","View_ClientHomeComponent_Host_0","ClientHomeComponentNgFactory","isTyping","RenderType_ClientProfileComponent","View_ClientProfileComponent_0","View_ClientProfileComponent_Host_0","ClientProfileComponentNgFactory","authReq","AuthInterceptor","ERR_SW_NOT_SUPPORTED","serviceWorker","controllerChanges","controller","currentController","controllerWithChanges","worker","registration","getRegistration","payload","sw","postMessage","toPromise","nonce","waitForStatus","eventsOfType","subscriptionChanges","isEnabled","messages","pushManager","workerDrivenSubscriptions","pm","getSubscription","pushOptions","userVisibleOnly","decodeBase64","serverPublicKey","applicationServerKey","Uint8Array","success","atob","available","statusNonce","generateNonce","postMessageWithStatus","RegistrationOptions","ngswAppInitializer","app","stable","register","ngswCommChannelFactory","ɵ0","FormTrainModule","NFormModule","LearnFormModule","checkLogin","UserGuard","currentState","nextState","confirm","UserCanDeactivate","ClientGuard","CanDeactivateClientProfile","ApiWorkingModule","DemoLazyModule","AppModuleNgFactory","p0_1","p0_2","p1_0","p2_0","p2_1","p2_2","p2_3","userData"],"mappings":"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","file":"main.dec0cf11a28f1700f1eb.js","sourcesContent":["import { mergeAll } from './mergeAll';\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * <img src=\"./img/concatAll.png\" width=\"100%\">\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map(ev => Rx.Observable.interval(1000).take(4));\n * var firstOrder = higherOrder.concatAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map","import { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events that happened in 5 seconds</caption>\n * var clicksInFiveSeconds = Rx.Observable.fromEvent(document, 'click')\n *   .takeUntil(Rx.Observable.interval(5000));\n * var ones = clicksInFiveSeconds.mapTo(1);\n * var seed = 0;\n * var count = ones.reduce((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce(accumulator, seed) {\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan((acc, value, index) => {\n            return accumulator(acc, value, index + 1);\n        }), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map","import { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the latest parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * @example <caption>Combine age and name from different sources</caption>\n *\n * let age$ = Observable.of<number>(27, 25, 29);\n * let name$ = Observable.of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = Observable.of<boolean>(true, true, false);\n *\n * Observable\n *     .zip(age$,\n *          name$,\n *          isDev$,\n *          (age: number, name: string, isDev: boolean) => ({ age, name, isDev }))\n *     .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n *\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;\n        this.values = values;\n    }\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                this.add(iterator.subscribe(iterator, i));\n            }\n            else {\n                this.active--; // not an observable\n            }\n        }\n    }\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        // abort if not all of them have values\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            // check to see if it's completed now that you've gotten\n            // the next value.\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    hasValue() {\n        return true;\n    }\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return nextResult && nextResult.done;\n    }\n}\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    }\n    hasValue() {\n        return this.array.length > this.index;\n    }\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator extends OuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n    //    this is legit because `next()` will never be called by a subscription in this case.\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    }\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n    subscribe(value, index) {\n        return subscribeToResult(this, this.observable, this, index);\n    }\n}\n//# sourceMappingURL=zip.js.map","export const rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('rxSubscriber')\n    : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map","import { Subject } from './Subject';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n/**\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject extends Subject {\n    constructor(_value) {\n        super();\n        this._value = _value;\n    }\n    get value() {\n        return this.getValue();\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        const subscription = super._subscribe(subscriber);\n        if (subscription && !subscription.closed) {\n            subscriber.next(this._value);\n        }\n        return subscription;\n    }\n    getValue() {\n        if (this.hasError) {\n            throw this.thrownError;\n        }\n        else if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return this._value;\n        }\n    }\n    next(value) {\n        super.next(this._value = value);\n    }\n}\n//# sourceMappingURL=BehaviorSubject.js.map","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n    /**\n     * The promise constructor used by default for methods such as\n     * {@link toPromise} and {@link forEach}\n     */\n    Promise: undefined,\n    /**\n     * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n     * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n     * call in a try/catch block. It also enables producer interference, a nasty bug\n     * where a multicast can be broken for all observers by a downstream consumer with\n     * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n     * FOR MIGRATION REASONS.\n     */\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            const error = new Error();\n            console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * <img src=\"./img/delay.png\" width=\"100%\">\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * @example <caption>Delay each click by one second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delay(1000); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @example <caption>Delay all clicks until a future date happens</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var date = new Date('March 15, 2050 12:00:00'); // in the future\n * var delayedClicks = clicks.delay(date); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n//# sourceMappingURL=delay.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar operators_1 = require(\"rxjs/operators\");\nvar breadcrumbs_service_1 = require(\"./breadcrumbs.service\");\nvar BreadcrumbComponent = /** @class */ (function () {\n    function BreadcrumbComponent(breadcrumbService, activatedRoute, router) {\n        var _this = this;\n        this.breadcrumbService = breadcrumbService;\n        this.activatedRoute = activatedRoute;\n        this.router = router;\n        this.ROUTE_DATA_BREADCRUMB = \"breadcrumb\";\n        this.ROUTE_PARAM_BREADCRUMB = \"breadcrumb\";\n        this.PREFIX_BREADCRUMB = \"prefixBreadcrumb\";\n        breadcrumbService.get().subscribe(function (breadcrumbs) {\n            _this.breadcrumbs = breadcrumbs;\n        });\n    }\n    BreadcrumbComponent.prototype.hasParams = function (breadcrumb) {\n        return Object.keys(breadcrumb.params).length ? [breadcrumb.url, breadcrumb.params] : [breadcrumb.url];\n    };\n    BreadcrumbComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        if (this.router.navigated) {\n            this.generateBreadcrumbTrail();\n        }\n        ;\n        // subscribe to the NavigationEnd event\n        this.router.events.pipe(operators_1.filter(function (event) { return event instanceof router_1.NavigationEnd; })).subscribe(function (event) {\n            _this.generateBreadcrumbTrail();\n        });\n    };\n    BreadcrumbComponent.prototype.generateBreadcrumbTrail = function () {\n        var _this = this;\n        // reset currentBreadcrumbs\n        this.currentBreadcrumbs = [];\n        // get the root of the current route\n        var currentRoute = this.activatedRoute.root;\n        // set the url to an empty string\n        var url = \"\";\n        var _loop_1 = function () {\n            var childrenRoutes = currentRoute.children;\n            var breadCrumbLabel = \"\";\n            // iterate over each children\n            childrenRoutes.forEach(function (route) {\n                // Set currentRoute to this route\n                currentRoute = route;\n                // Verify this is the primary route\n                if (route.outlet !== router_1.PRIMARY_OUTLET) {\n                    return;\n                }\n                var hasData = (route.routeConfig && route.routeConfig.data);\n                var hasDynamicBreadcrumb = route.snapshot.params.hasOwnProperty(_this.ROUTE_PARAM_BREADCRUMB);\n                if (hasData || hasDynamicBreadcrumb) {\n                    /*\n                    Verify the custom data property \"breadcrumb\"\n                    is specified on the route or in its parameters.\n          \n                    Route parameters take precedence over route data\n                    attributes.\n                    */\n                    if (hasDynamicBreadcrumb) {\n                        breadCrumbLabel = route.snapshot.params[_this.ROUTE_PARAM_BREADCRUMB].replace(/_/g, \" \");\n                    }\n                    else if (route.snapshot.data.hasOwnProperty(_this.ROUTE_DATA_BREADCRUMB)) {\n                        breadCrumbLabel = route.snapshot.data[_this.ROUTE_DATA_BREADCRUMB];\n                    }\n                    // Get the route's URL segment\n                    var routeURL = route.snapshot.url.map(function (segment) { return segment.path; }).join(\"/\");\n                    url += \"/\" + routeURL;\n                    // Cannot have parameters on a root route\n                    if (routeURL.length === 0) {\n                        route.snapshot.params = {};\n                    }\n                    // Add breadcrumb\n                    var breadcrumb = {\n                        label: breadCrumbLabel,\n                        params: route.snapshot.params,\n                        url: url\n                    };\n                    // Add the breadcrumb as 'prefixed'. It will appear before all breadcrumbs\n                    if (route.snapshot.data.hasOwnProperty(_this.PREFIX_BREADCRUMB)) {\n                        _this.breadcrumbService.storePrefixed(breadcrumb);\n                    }\n                    else {\n                        _this.currentBreadcrumbs.push(breadcrumb);\n                    }\n                }\n            });\n            this_1.breadcrumbService.store(this_1.currentBreadcrumbs);\n        };\n        var this_1 = this;\n        // iterate from activated route to children\n        while (currentRoute.children.length > 0) {\n            _loop_1();\n        }\n    };\n    BreadcrumbComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: \"breadcrumb\",\n                    template: \"\\n        <div [ngClass]=\\\"{ 'container-fluid': allowBootstrap, 'fluid-bread': true}\\\">\\n            <div class=\\\"container\\\">\\n                <ol [ngClass]=\\\"{ 'breadcrumb': allowBootstrap}\\\" class=\\\"{{addClass ? '' + addClass : ''}}\\\">\\n                    <li *ngFor=\\\"let breadcrumb of breadcrumbs; let last = last\\\"\\n                        [ngClass]=\\\"{ 'breadcrumb-item': allowBootstrap, 'list': true, 'active': last }\\\">\\n                        <a *ngIf=\\\"!last\\\" [routerLink]=\\\"hasParams(breadcrumb)\\\">\\n                            {{breadcrumb.label}}\\n                        </a>\\n                        <span *ngIf=\\\"last\\\">{{ breadcrumb.label }}</span>\\n                    </li>\\n                </ol>\\n            </div>\\n        </div>\",\n                    styles: [\"\\n        .fluid-bread {\\n            background-color: white;\\n        }\\n\\n        .breadcrumb {\\n            background-color: white;\\n            padding: 4px;\\n            margin-bottom: 0;\\n        }\"],\n                    encapsulation: core_1.ViewEncapsulation.None\n                },] },\n    ];\n    /** @nocollapse */\n    BreadcrumbComponent.ctorParameters = function () { return [\n        { type: breadcrumbs_service_1.BreadcrumbsService },\n        { type: router_1.ActivatedRoute },\n        { type: router_1.Router }\n    ]; };\n    BreadcrumbComponent.propDecorators = {\n        allowBootstrap: [{ type: core_1.Input }],\n        addClass: [{ type: core_1.Input }]\n    };\n    return BreadcrumbComponent;\n}());\nexports.BreadcrumbComponent = BreadcrumbComponent;\n//# sourceMappingURL=breadcrumbs.component.js.map","/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n    constructor() {\n        super('argument out of range');\n        this.name = 'ArgumentOutOfRangeError';\n        Object.setPrototypeOf(this, ArgumentOutOfRangeError.prototype);\n    }\n}\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map","import { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from './map';\nimport { from } from '../observable/from';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nexport function mergeMap(project, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        // DEPRECATED PATH\n        return (source) => source.pipe(mergeMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii))), concurrent));\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return (source) => source.lift(new MergeMapOperator(project, concurrent));\n}\nexport class MergeMapOperator {\n    constructor(project, concurrent = Number.POSITIVE_INFINITY) {\n        this.project = project;\n        this.concurrent = concurrent;\n    }\n    call(observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber extends OuterSubscriber {\n    constructor(destination, project, concurrent = Number.POSITIVE_INFINITY) {\n        super(destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    _tryNext(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    }\n    _innerSub(ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n    notifyComplete(innerSub) {\n        const buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=mergeMap.js.map","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * <img src=\"./img/never.png\" width=\"100%\">\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * @example <caption>Emit the number 7, then never emit anything else (not even complete).</caption>\n * function info() {\n *   console.log('Will not be called');\n * }\n * var result = NEVER.startWith(7);\n * result.subscribe(x => console.log(x), info, info);\n *\n * @see {@link create}\n * @see {@link EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable(noop);\n/**\n * @deprecated Deprecated in favor of using NEVER constant.\n */\nexport function never() {\n    return NEVER;\n}\n//# sourceMappingURL=never.js.map","let nextHandle = 0;\nconst tasksByHandle = {};\nfunction runIfPresent(handle) {\n    const cb = tasksByHandle[handle];\n    if (cb) {\n        cb();\n    }\n}\nexport const Immediate = {\n    setImmediate(cb) {\n        const handle = nextHandle++;\n        tasksByHandle[handle] = cb;\n        Promise.resolve().then(() => runIfPresent(handle));\n        return handle;\n    },\n    clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    },\n};\n//# sourceMappingURL=Immediate.js.map","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If a microtask has already been scheduled, don't schedule another\n        // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n        // the current scheduled microtask id.\n        return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested microtask and\n        // set the scheduled flag to undefined so the next AsapAction will schedule\n        // its own.\n        if (scheduler.actions.length === 0) {\n            Immediate.clearImmediate(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    }\n}\n//# sourceMappingURL=AsapAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AsapScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsapScheduler.js.map","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link async} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * @example <caption>Compare async and asap scheduler</caption>\n *\n * Rx.Scheduler.async.schedule(() => console.log('async')); // scheduling 'async' first...\n * Rx.Scheduler.asap.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n *\n * @static true\n * @name asap\n * @owner Scheduler\n */\nexport const asap = new AsapScheduler(AsapAction);\n//# sourceMappingURL=asap.js.map","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber extends Subscription {\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    constructor(destinationOrNext, error, complete) {\n        super();\n        /** @internal */ this.syncErrorValue = null;\n        /** @internal */ this.syncErrorThrown = false;\n        /** @internal */ this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    // HACK(benlesh): For situations where Node has multiple copies of rxjs in\n                    // node_modules, we cannot rely on `instanceof` checks\n                    if (isTrustedSubscriber(destinationOrNext)) {\n                        const trustedSubscriber = destinationOrNext[rxSubscriberSymbol]();\n                        this.syncErrorThrowable = trustedSubscriber.syncErrorThrowable;\n                        this.destination = trustedSubscriber;\n                        trustedSubscriber.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    [rxSubscriberSymbol]() { return this; }\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     * @nocollapse\n     */\n    static create(next, error, complete) {\n        const subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    }\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    next(value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    }\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    error(err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    }\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    complete() {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        super.unsubscribe();\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    _error(err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.destination.complete();\n        this.unsubscribe();\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribeAndRecycle() {\n        const { _parent, _parents } = this;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SafeSubscriber extends Subscriber {\n    constructor(_parentSubscriber, observerOrNext, error, complete) {\n        super();\n        this._parentSubscriber = _parentSubscriber;\n        let next;\n        let context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    next(value) {\n        if (!this.isStopped && this._next) {\n            const { _parentSubscriber } = this;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            const { useDeprecatedSynchronousErrorHandling } = config;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            if (this._complete) {\n                const wrappedComplete = () => this._complete.call(this._context);\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    }\n    __tryOrUnsub(fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    }\n    __tryOrSetError(parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        const { _parentSubscriber } = this;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    }\n}\nfunction isTrustedSubscriber(obj) {\n    return obj instanceof Subscriber || ('syncErrorThrowable' in obj && obj[rxSubscriberSymbol]);\n}\n//# sourceMappingURL=Subscriber.js.map","/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { share } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `\\@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * \\@experimental\n * @template T\n * @param {?} opts\n * @return {?}\n */\nfunction defineInjectable(opts) {\n    return /** @type {?} */ ((/** @type {?} */ ({\n        providedIn: /** @type {?} */ (opts.providedIn) || null, factory: opts.factory, value: undefined,\n    })));\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * \\@experimental\n * @param {?} options\n * @return {?}\n */\nfunction defineInjector(options) {\n    return /** @type {?} */ ((/** @type {?} */ ({\n        factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n    })));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `\\@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * \\@usageNotes\n * ### Basic Example\n *\n * ### Plain InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * ### Tree-shakable InjectionToken\n *\n * {\\@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n *\n * @template T\n */\nclass InjectionToken {\n    /**\n     * @param {?} _desc\n     * @param {?=} options\n     */\n    constructor(_desc, options) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            /** @nocollapse */ this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            /** @nocollapse */ this.ngInjectableDef = undefined;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `InjectionToken ${this._desc}`; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ANNOTATIONS = '__annotations__';\n/** @type {?} */\nconst PARAMETERS = '__parameters__';\n/** @type {?} */\nconst PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @param {?=} typeFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    /** @type {?} */\n    const metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function DecoratorFactory(...args) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, ...args);\n            return this;\n        }\n        /** @type {?} */\n        const annotationInstance = new (/** @type {?} */ (DecoratorFactory))(...args);\n        /** @type {?} */\n        const TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            typeFn && typeFn(cls, ...args);\n            /** @type {?} */\n            const annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor(...args) {\n        if (props) {\n            /** @type {?} */\n            const values = props(...args);\n            for (const propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    /** @type {?} */\n    const metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory(...args) {\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        /** @type {?} */\n        const annotationInstance = new (/** @type {?} */ (ParamDecoratorFactory))(...args);\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            /** @type {?} */\n            const parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    /** @type {?} */\n    const metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory(...args) {\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        /** @type {?} */\n        const decoratorInstance = new (/** @type {?} */ (PropDecoratorFactory))(...args);\n        return function PropDecorator(target, name) {\n            /** @type {?} */\n            const constructor = target.constructor;\n            /** @type {?} */\n            const meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * \\@usageNotes\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n  @type {?} */\nconst ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/** *\n * Attribute decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Attribute = makeParamDecorator('Attribute', (attributeName) => ({ attributeName }));\n/**\n * Base class for query metadata.\n *\n * @see `ContentChildren`.\n * @see `ContentChild`.\n * @see `ViewChildren`.\n * @see `ViewChild`.\n * @abstract\n */\nclass Query {\n}\n/** *\n * ContentChildren decorator and metadata.\n *\n *\n * \\@Annotation\n  @type {?} */\nconst ContentChildren = makePropDecorator('ContentChildren', (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: false, descendants: false }, data)), Query);\n/** *\n * ContentChild decorator and metadata.\n *\n *\n * \\@Annotation\n  @type {?} */\nconst ContentChild = makePropDecorator('ContentChild', (selector, data = {}) => (Object.assign({ selector, first: true, isViewQuery: false, descendants: true }, data)), Query);\n/** *\n * ViewChildren decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst ViewChildren = makePropDecorator('ViewChildren', (selector, data = {}) => (Object.assign({ selector, first: false, isViewQuery: true, descendants: true }, data)), Query);\n/** *\n * ViewChild decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst ViewChild = makePropDecorator('ViewChild', (selector, data) => (Object.assign({ selector, first: true, isViewQuery: true, descendants: true }, data)), Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst ChangeDetectionStrategy = {\n    /**\n       * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n       * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n       * Change detection can still be explictly invoked.\n       */\n    OnPush: 0,\n    /**\n       * Use the default `CheckAlways` strategy, in which change detection is automatic until\n       * explicitly deactivated.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = 'OnPush';\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = 'Default';\n/** @enum {number} */\nconst ChangeDetectorStatus = {\n    /**\n       * A state in which, after calling `detectChanges()`, the change detector\n       * state becomes `Checked`, and must be explicitly invoked or reactivated.\n       */\n    CheckOnce: 0,\n    /**\n       * A state in which change detection is skipped until the change detector mode\n       * becomes `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * A state in which change detection continues automatically until explictly\n       * deactivated.\n       */\n    CheckAlways: 2,\n    /**\n       * A state in which a change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * Indicates that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state do not detect changes.\n       */\n    Errored: 4,\n    /**\n       * Indicates that the change detector has been destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = 'CheckOnce';\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = 'Checked';\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = 'CheckAlways';\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = 'Detached';\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = 'Errored';\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = 'Destroyed';\n/**\n * Reports whether a given strategy is currently the default for change detection.\n * @see `ChangeDetectorStatus`\n * @see `ChangeDetectorRef`\n * @param {?} changeDetectionStrategy The strategy to check.\n * @return {?} True if the given strategy is the current default, false otherwise.\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst ivyEnabled = false;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Type of the Directive metadata.\n  @type {?} */\nconst Directive = makeDecorator('Directive', (dir = {}) => dir, undefined, undefined, (type, meta) => (() => { })(type, meta));\n/** *\n * Component decorator and metadata.\n *\n * \\@usageNotes\n *\n * ### Using animations\n *\n * The following snippet shows an animation trigger in a component's\n * metadata. The trigger is attached to an element in the component's\n * template, using \"\\@_trigger_name_\", and a state expression that is evaluated\n * at run time to determine whether the animation should start.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'animation-cmp',\n *   templateUrl: 'animation-cmp.html',\n *   animations: [\n *     trigger('myTriggerName', [\n *       state('on', style({ opacity: 1 }),\n *       state('off', style({ opacity: 0 }),\n *       transition('on => off', [\n *         animate(\"1s\")\n *       ])\n *     ])\n *   ]\n * })\n * ```\n *\n * ```html\n * <!-- animation-cmp.html -->\n * <div \\@myTriggerName=\"expression\">...</div>\n * ```\n *\n * ### Preserving whitespace\n *\n * Removing whitespace can greatly reduce AOT-generated code size, and speed up view creation.\n * As of Angular 6, default for `preserveWhitespaces` is false (whitespace is removed).\n * To change the default setting for all components in your application, set\n * the `preserveWhitespaces` option of the AOT compiler.\n *\n * Current implementation removes whitespace characters as follows:\n * - Trims all whitespaces at the beginning and the end of a template.\n * - Removes whitespace-only text nodes. For example,\n * `<button>Action 1</button>  <button>Action 2</button>` becomes\n * `<button>Action 1</button><button>Action 2</button>`.\n * - Replaces a series of whitespace characters in text nodes with a single space.\n * For example, `<span>\\n some text\\n</span>` becomes `<span> some text </span>`.\n * - Does NOT alter text nodes inside HTML tags such as `<pre>` or `<textarea>`,\n * where whitespace characters are significant.\n *\n * Note that these transformations can influence DOM nodes layout, although impact\n * should be minimal.\n *\n * You can override the default behavior to preserve whitespace characters\n * in certain fragments of a template. For example, you can exclude an entire\n * DOM sub-tree by using the `ngPreserveWhitespaces` attribute:\n *\n * ```html\n * <div ngPreserveWhitespaces>\n *     whitespaces are preserved here\n *     <span>    and here </span>\n * </div>\n * ```\n *\n * You can force a single space to be preserved in a text node by using `&ngsp;`,\n * which is replaced with a space character by Angular's template\n * compiler:\n *\n * ```html\n * <a>Spaces</a>&ngsp;<a>between</a>&ngsp;<a>links.</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * Note that sequences of `&ngsp;` are still collapsed to just one space character when\n * the `preserveWhitespaces` option is set to `false`.\n *\n * ```html\n * <a>before</a>&ngsp;&ngsp;&ngsp;<a>after</a>\n * <!-->compiled to be equivalent to:</>\n *  <a>Spaces</a> <a>between</a> <a>links.</a>\n * ```\n *\n * To preserve sequences of whitespace characters, use the\n * `ngPreserveWhitespaces` attribute.\n *\n * \\@Annotation\n  @type {?} */\nconst Component = makeDecorator('Component', (c = {}) => (Object.assign({ changeDetection: ChangeDetectionStrategy.Default }, c)), Directive, undefined, (type, meta) => (() => { })(type, meta));\n/** *\n *\n *\n * \\@Annotation\n  @type {?} */\nconst Pipe = makeDecorator('Pipe', (p) => (Object.assign({ pure: true }, p)), undefined, undefined, (type, meta) => (() => { })(type, meta));\n/** *\n *\n * \\@Annotation\n  @type {?} */\nconst Input = makePropDecorator('Input', (bindingPropertyName) => ({ bindingPropertyName }));\n/** *\n *\n * \\@Annotation\n  @type {?} */\nconst Output = makePropDecorator('Output', (bindingPropertyName) => ({ bindingPropertyName }));\n/** *\n *\n * \\@Annotation\n  @type {?} */\nconst HostBinding = makePropDecorator('HostBinding', (hostPropertyName) => ({ hostPropertyName }));\n/** *\n * Binds a CSS event to a host listener and supplies configuration metadata.\n * Angular invokes the supplied handler method when the host element emits the specified event,\n * and updates the bound element with the result.\n * If the handler method returns false, applies `preventDefault` on the bound element.\n *\n * \\@usageNotes\n *\n * The following example declares a directive\n * that attaches a click listener to a button and counts clicks.\n *\n * ```\n * \\@Directive({selector: 'button[counting]'})\n * class CountClicks {\n *   numberOfClicks = 0;\n *\n * \\@HostListener('click', ['$event.target'])\n *   onClick(btn) {\n *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n *  }\n * }\n *\n * \\@Component({\n *   selector: 'app',\n *   template: '<button counting>Increment</button>',\n * })\n * class App {}\n * ```\n *\n * \\@Annotation\n  @type {?} */\nconst HostListener = makePropDecorator('HostListener', (eventName, args) => ({ eventName, args }));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * \\@description\n *\n * Represents a type that a Component or other object is instances of.\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n *\n  @type {?} */\nconst Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst __window = typeof window !== 'undefined' && window;\n/** @type {?} */\nconst __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\n/** @type {?} */\nconst __global = typeof global !== 'undefined' && global;\n/** @type {?} */\nconst _global = __global || __window || __self;\n/** @type {?} */\nconst promise = Promise.resolve(0);\n/** @type {?} */\nlet _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        /** @type {?} */\n        const Symbol = _global['Symbol'];\n        if (Symbol && Symbol.iterator) {\n            _symbolIterator = Symbol.iterator;\n        }\n        else {\n            /** @type {?} */\n            const keys = Object.getOwnPropertyNames(Map.prototype);\n            for (let i = 0; i < keys.length; ++i) {\n                /** @type {?} */\n                const key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(() => { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return `${token.overriddenName}`;\n    }\n    if (token.name) {\n        return `${token.name}`;\n    }\n    /** @type {?} */\n    const res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    /** @type {?} */\n    const newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Attention: These regex has to hold even if the code is minified!\n  @type {?} */\nconst DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n/** @type {?} */\nconst INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\n/** @type {?} */\nconst INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nclass ReflectionCapabilities {\n    /**\n     * @param {?=} reflect\n     */\n    constructor(reflect) { this._reflect = reflect || _global['Reflect']; }\n    /**\n     * @return {?}\n     */\n    isReflectionEnabled() { return true; }\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    factory(t) { return (...args) => new t(...args); }\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    _zipTypesAndAnnotations(paramTypes, paramAnnotations) {\n        /** @type {?} */\n        let result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (let i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    }\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    _ownParameters(type, parentCtor) {\n        /** @type {?} */\n        const typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        /** @type {?} */\n        const tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            /** @type {?} */\n            const ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            /** @type {?} */\n            const paramTypes = ctorParameters.map((ctorParam) => ctorParam && ctorParam.type);\n            /** @type {?} */\n            const paramAnnotations = ctorParameters.map((ctorParam) => ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators));\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        /** @type {?} */\n        const paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        /** @type {?} */\n        const paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    parameters(type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        /** @type {?} */\n        const parentCtor = getParentCtor(type);\n        /** @type {?} */\n        let parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    _ownAnnotations(typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            /** @type {?} */\n            let annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    annotations(typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        /** @type {?} */\n        const parentCtor = getParentCtor(typeOrFunc);\n        /** @type {?} */\n        const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        /** @type {?} */\n        const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    _ownPropMetadata(typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            /** @type {?} */\n            let propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            /** @type {?} */\n            const propDecorators = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            /** @type {?} */\n            const propMetadata = /** @type {?} */ ({});\n            Object.keys(propDecorators).forEach(prop => {\n                propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n            });\n            return propMetadata;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    propMetadata(typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        /** @type {?} */\n        const parentCtor = getParentCtor(typeOrFunc);\n        /** @type {?} */\n        const propMetadata = {};\n        if (parentCtor !== Object) {\n            /** @type {?} */\n            const parentPropMetadata = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata).forEach((propName) => {\n                propMetadata[propName] = parentPropMetadata[propName];\n            });\n        }\n        /** @type {?} */\n        const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach((propName) => {\n                /** @type {?} */\n                const decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push(...propMetadata[propName]);\n                }\n                decorators.push(...ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    guards(type) { return {}; }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getter(name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    setter(name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    method(name) {\n        /** @type {?} */\n        const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    importUri(type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return `./${stringify(type)}`;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    resourceUri(type) { return `./${stringify(type)}`; }\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    resolveIdentifier(name, moduleUrl, members, runtime) {\n        return runtime;\n    }\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    resolveEnum(enumIdentifier, name) { return enumIdentifier[name]; }\n}\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(decoratorInvocation => {\n        /** @type {?} */\n        const decoratorType = decoratorInvocation.type;\n        /** @type {?} */\n        const annotationCls = decoratorType.annotationCls;\n        /** @type {?} */\n        const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new annotationCls(...annotationArgs);\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    /** @type {?} */\n    const parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    /** @type {?} */\n    const parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @param {?} target\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract, target) {\n    for (let key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n * a query is not yet defined.\n *\n * \\@usageNotes\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * @see `forwardRef`\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Inject decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Inject = makeParamDecorator('Inject', (token) => ({ token }));\n/** *\n * Optional decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Optional = makeParamDecorator('Optional');\n/** *\n * Self decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Self = makeParamDecorator('Self');\n/** *\n * SkipSelf decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst SkipSelf = makeParamDecorator('SkipSelf');\n/** *\n * Host decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SOURCE = '__source';\n/** @type {?} */\nconst _THROW_IF_NOT_FOUND = new Object();\n/** @type {?} */\nconst THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/** *\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * \\@experimental\n  @type {?} */\nconst INJECTOR = new InjectionToken('INJECTOR');\nclass NullInjector {\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = _THROW_IF_NOT_FOUND) {\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n            // reason why correctly written application should cause this exception.\n            // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n            // if(ngDevMode) debugger;\n            throw new Error(`NullInjectorError: No provider for ${stringify(token)}!`);\n        }\n        return notFoundValue;\n    }\n}\n/**\n * Concrete injectors implement this interface.\n *\n * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n *\n * \\@usageNotes\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n *\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n *\n * @abstract\n */\nclass Injector {\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    static create(options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    }\n}\nInjector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nInjector.NULL = new NullInjector();\n/** @nocollapse */ Injector.ngInjectableDef = defineInjectable({\n    providedIn: /** @type {?} */ ('any'),\n    factory: () => inject(INJECTOR),\n});\n/** @type {?} */\nconst IDENT = function (value) {\n    return value;\n};\n/** @type {?} */\nconst EMPTY = /** @type {?} */ ([]);\n/** @type {?} */\nconst CIRCULAR = IDENT;\n/** @type {?} */\nconst MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\n/** @type {?} */\nconst GET_PROPERTY_NAME = /** @type {?} */ ({});\n/** @type {?} */\nconst USE_VALUE = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME });\n/** @type {?} */\nconst NG_TOKEN_PATH = 'ngTokenPath';\n/** @type {?} */\nconst NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n/** @type {?} */\nconst NULL_INJECTOR = Injector.NULL;\n/** @type {?} */\nconst NEW_LINE = /\\n/gm;\n/** @type {?} */\nconst NO_NEW_LINE = 'ɵ';\nclass StaticInjector {\n    /**\n     * @param {?} providers\n     * @param {?=} parent\n     * @param {?=} source\n     */\n    constructor(providers, parent = NULL_INJECTOR, source = null) {\n        this.parent = parent;\n        this.source = source;\n        /** @type {?} */\n        const records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        records.set(INJECTOR, /** @type {?} */ ({ token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    get(token, notFoundValue, flags = 0 /* Default */) {\n        /** @type {?} */\n        const record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            /** @type {?} */\n            const tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const tokens = /** @type {?} */ ([]);\n        /** @type {?} */\n        const records = this._records;\n        records.forEach((v, token) => tokens.push(stringify(token)));\n        return `StaticInjector[${tokens.join(', ')}]`;\n    }\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    /** @type {?} */\n    const deps = computeDeps(provider);\n    /** @type {?} */\n    let fn = IDENT;\n    /** @type {?} */\n    let value = EMPTY;\n    /** @type {?} */\n    let useNew = false;\n    /** @type {?} */\n    let provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) ;\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps, fn, useNew, value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (let i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            /** @type {?} */\n            let token = resolveForwardRef(provider.provide);\n            /** @type {?} */\n            const resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                /** @type {?} */\n                let multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token, options: 6 /* Default */ });\n            }\n            /** @type {?} */\n            const record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        /** @type {?} */\n        const path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @param {?} flags\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    /** @type {?} */\n    let value;\n    if (record && !(flags & 4 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            /** @type {?} */\n            let obj = undefined;\n            /** @type {?} */\n            let useNew = record.useNew;\n            /** @type {?} */\n            let fn = record.fn;\n            /** @type {?} */\n            let depRecords = record.deps;\n            /** @type {?} */\n            let deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (let i = 0; i < depRecords.length; i++) {\n                    /** @type {?} */\n                    const depRecord = depRecords[i];\n                    /** @type {?} */\n                    const options = depRecord.options;\n                    /** @type {?} */\n                    const childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new (/** @type {?} */ (fn))(...deps) : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    /** @type {?} */\n    let deps = EMPTY;\n    /** @type {?} */\n    const providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (let i = 0; i < providerDeps.length; i++) {\n            /** @type {?} */\n            let options = 6 /* Default */;\n            /** @type {?} */\n            let token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (let j = 0, annotations = token; j < annotations.length; j++) {\n                    /** @type {?} */\n                    const annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token, options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        /** @type {?} */\n        const token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source = null) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    /** @type {?} */\n    let context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        /** @type {?} */\n        let parts = /** @type {?} */ ([]);\n        for (let key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                /** @type {?} */\n                let value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = `{${parts.join(', ')}}`;\n    }\n    return `StaticInjectorError${source ? '(' + source + ')' : ''}[${context}]: ${text.replace(NEW_LINE, '\\n  ')}`;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty$1(objWithPropertyToExtract) {\n    for (let key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n/** *\n * Current injector value used by `inject`.\n * - `undefined`: it is an error to call `inject`\n * - `null`: `inject` can be called but there is no injector (limp-mode).\n * - Injector instance: Use the injector for resolution.\n  @type {?} */\nlet _currentInjector = undefined;\n/**\n * @param {?} injector\n * @return {?}\n */\nfunction setCurrentInjector(injector) {\n    /** @type {?} */\n    const former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} flags\n * @return {?}\n */\nfunction inject(token, flags = 0 /* Default */) {\n    if (_currentInjector === undefined) {\n        throw new Error(`inject() must be called from an injection context`);\n    }\n    else if (_currentInjector === null) {\n        /** @type {?} */\n        const injectableDef = (/** @type {?} */ (token)).ngInjectableDef;\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & 8 /* Optional */)\n            return null;\n        throw new Error(`Injector: NOT_FOUND [${stringify(token)}]`);\n    }\n    else {\n        return _currentInjector.get(token, flags & 8 /* Optional */ ? null : undefined, flags);\n    }\n}\n/**\n * @param {?} types\n * @return {?}\n */\nfunction injectArgs(types) {\n    /** @type {?} */\n    const args = [];\n    for (let i = 0; i < types.length; i++) {\n        /** @type {?} */\n        const arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            /** @type {?} */\n            let type = undefined;\n            /** @type {?} */\n            let flags = 0 /* Default */;\n            for (let j = 0; j < arg.length; j++) {\n                /** @type {?} */\n                const meta = arg[j];\n                if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                    flags |= 8 /* Optional */;\n                }\n                else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                    flags |= 4 /* SkipSelf */;\n                }\n                else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                    flags |= 2 /* Self */;\n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject(/** @type {?} */ ((type)), flags));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst GET_PROPERTY_NAME$1 = /** @type {?} */ ({});\nconst ɵ0$1 = GET_PROPERTY_NAME$1;\n/** @type {?} */\nconst USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$1 }, GET_PROPERTY_NAME$1);\n/** @type {?} */\nconst EMPTY_ARRAY = [];\n/**\n * @param {?} type\n * @param {?=} provider\n * @return {?}\n */\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        /** @type {?} */\n        const reflectionCapabilities = new ReflectionCapabilities();\n        /** @type {?} */\n        const deps = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return () => new type(...injectArgs(/** @type {?} */ (deps)));\n    }\n    if (USE_VALUE$1 in provider) {\n        /** @type {?} */\n        const valueProvider = (/** @type {?} */ (provider));\n        return () => valueProvider.useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        /** @type {?} */\n        const existingProvider = (/** @type {?} */ (provider));\n        return () => inject(existingProvider.useExisting);\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        /** @type {?} */\n        const factoryProvider = (/** @type {?} */ (provider));\n        return () => factoryProvider.useFactory(...injectArgs(factoryProvider.deps || EMPTY_ARRAY));\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        /** @type {?} */\n        const classProvider = (/** @type {?} */ (provider));\n        /** @type {?} */\n        let deps = (/** @type {?} */ (provider)).deps;\n        if (!deps) {\n            /** @type {?} */\n            const reflectionCapabilities = new ReflectionCapabilities();\n            deps = reflectionCapabilities.parameters(type);\n        }\n        return () => new classProvider.useClass(...injectArgs(deps));\n    }\n    else {\n        /** @type {?} */\n        let deps = (/** @type {?} */ (provider)).deps;\n        if (!deps) {\n            /** @type {?} */\n            const reflectionCapabilities = new ReflectionCapabilities();\n            deps = reflectionCapabilities.parameters(type);\n        }\n        return () => new type(...injectArgs(/** @type {?} */ ((deps))));\n    }\n}\n/**\n * Supports \\@Injectable() in JIT mode for Render2.\n * @param {?} injectableType\n * @param {?} options\n * @return {?}\n */\nfunction preR3InjectableCompile(injectableType, options) {\n    if (options && options.providedIn !== undefined && injectableType.ngInjectableDef === undefined) {\n        /** @nocollapse */ injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options),\n        });\n    }\n}\n/** *\n * Injectable decorator and metadata.\n *\n * \\@Annotation\n  @type {?} */\nconst Injectable = makeDecorator('Injectable', undefined, undefined, undefined, (type, meta) => (preR3InjectableCompile)(type, meta));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Defines a schema that allows an NgModule to contain the following:\n * - Non-Angular elements named with dash case (`-`).\n * - Element properties named with dash case (`-`).\n * Dash case is the naming convention for custom elements.\n *\n *\n  @type {?} */\nconst CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/** *\n * Defines a schema that allows any property on any element.\n *\n * \\@experimental\n  @type {?} */\nconst NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * @param {?} moduleType\n * @param {?} metadata\n * @return {?}\n */\nfunction preR3NgModuleCompile(moduleType, metadata) {\n    /** @type {?} */\n    let imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = [...imports, metadata.exports];\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n}\n/** *\n * \\@Annotation\n  @type {?} */\nconst NgModule = makeDecorator('NgModule', (ngModule) => ngModule, undefined, undefined, /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n(type, meta) => (preR3NgModuleCompile)(type, meta));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using the deprecated [Shadow DOM\n       * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n    /**\n       * Use Shadow DOM to encapsulate styles.\n       *\n       * For the DOM this means using modern [Shadow\n       * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    ShadowDom: 3,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = 'Emulated';\nViewEncapsulation[ViewEncapsulation.Native] = 'Native';\nViewEncapsulation[ViewEncapsulation.None] = 'None';\nViewEncapsulation[ViewEncapsulation.ShadowDom] = 'ShadowDom';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@description Represents the version of Angular\n *\n *\n */\nclass Version {\n    /**\n     * @param {?} full\n     */\n    constructor(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n}\n/** @type {?} */\nconst VERSION = new Version('6.1.10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n/** @type {?} */\nconst ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n/** @type {?} */\nconst ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console, ...values) {\n    (/** @type {?} */ (console.error))(...values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Provides a hook for centralized exception handling.\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n */\nclass ErrorHandler {\n    constructor() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    handleError(error) {\n        /** @type {?} */\n        const originalError = this._findOriginalError(error);\n        /** @type {?} */\n        const context = this._findContext(error);\n        /** @type {?} */\n        const errorLogger = getErrorLogger(error);\n        errorLogger(this._console, `ERROR`, error);\n        if (originalError) {\n            errorLogger(this._console, `ORIGINAL ERROR`, originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    _findContext(error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    }\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    _findOriginalError(error) {\n        /** @type {?} */\n        let e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    }\n}\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    /** @type {?} */\n    const msg = `${message} caused by: ${originalError instanceof Error ? originalError.message : originalError}`;\n    /** @type {?} */\n    const error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    /** @type {?} */\n    const res = [];\n    for (let i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        /** @type {?} */\n        const reversed = findFirstClosedCycle(keys.slice().reverse());\n        /** @type {?} */\n        const tokenStrs = reversed.map(k => stringify(k.token));\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    /** @type {?} */\n    const keys = [key];\n    /** @type {?} */\n    const errMsg = constructResolvingMessage(keys);\n    /** @type {?} */\n    const error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        /** @type {?} */\n        const first = stringify(keys[0].token);\n        return `No provider for ${first}!${constructResolvingPath(keys)}`;\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return `Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`;\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        /** @type {?} */\n        const first = stringify(keys[0].token);\n        return `${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`;\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(`Invalid provider - only instances of Provider and Type are allowed, got: ${provider}`);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n *\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    /** @type {?} */\n    const signature = [];\n    for (let i = 0, ii = params.length; i < ii; i++) {\n        /** @type {?} */\n        const parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n *\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(`Index ${index} is out-of-bounds.`);\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nclass ReflectiveKey {\n    /**\n     * Private\n     * @param {?} token\n     * @param {?} id\n     */\n    constructor(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    static get(token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    }\n    /**\n     * @return {?} the number of keys registered in the system.\n     */\n    static get numberOfKeys() { return _globalKeyRegistry.numberOfKeys; }\n}\nclass KeyRegistry {\n    constructor() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    get(token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        /** @type {?} */\n        const newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    }\n    /**\n     * @return {?}\n     */\n    get numberOfKeys() { return this._allKeys.size; }\n}\n/** @type {?} */\nconst _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nclass Reflector {\n    /**\n     * @param {?} reflectionCapabilities\n     */\n    constructor(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    updateCapabilities(caps) { this.reflectionCapabilities = caps; }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    factory(type) { return this.reflectionCapabilities.factory(type); }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    parameters(typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    annotations(typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    propMetadata(typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    }\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    hasLifecycleHook(type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getter(name) { return this.reflectionCapabilities.getter(name); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    setter(name) { return this.reflectionCapabilities.setter(name); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    method(name) { return this.reflectionCapabilities.method(name); }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    importUri(type) { return this.reflectionCapabilities.importUri(type); }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    resourceUri(type) { return this.reflectionCapabilities.resourceUri(type); }\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    resolveIdentifier(name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    }\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    resolveEnum(identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n  @type {?} */\nconst reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nclass ReflectiveDependency {\n    /**\n     * @param {?} key\n     * @param {?} optional\n     * @param {?} visibility\n     */\n    constructor(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    static fromKey(key) {\n        return new ReflectiveDependency(key, false, null);\n    }\n}\n/** @type {?} */\nconst _EMPTY_LIST = [];\nclass ResolvedReflectiveProvider_ {\n    /**\n     * @param {?} key\n     * @param {?} resolvedFactories\n     * @param {?} multiProvider\n     */\n    constructor(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n}\n/**\n * An internal resolved representation of a factory function created by resolving `Provider`.\n * \\@experimental\n */\nclass ResolvedReflectiveFactory {\n    /**\n     * @param {?} factory\n     * @param {?} dependencies\n     */\n    constructor(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n}\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    /** @type {?} */\n    let factoryFn;\n    /** @type {?} */\n    let resolvedDeps;\n    if (provider.useClass) {\n        /** @type {?} */\n        const useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = (aliasInstance) => aliasInstance;\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = () => provider.useValue;\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the `Provider` into `ResolvedProvider`.\n *\n * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n * syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    /** @type {?} */\n    const normalized = _normalizeProviders(providers, []);\n    /** @type {?} */\n    const resolved = normalized.map(resolveReflectiveProvider);\n    /** @type {?} */\n    const resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n * multi providers have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (let i = 0; i < providers.length; i++) {\n        /** @type {?} */\n        const provider = providers[i];\n        /** @type {?} */\n        const existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (let j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            /** @type {?} */\n            let resolvedProvider;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(b => {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        /** @type {?} */\n        const params = dependencies.map(t => [t]);\n        return dependencies.map(t => _extractToken(typeOrFunc, t, params));\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    /** @type {?} */\n    const params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(p => p == null)) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(p => _extractToken(typeOrFunc, p, params));\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    /** @type {?} */\n    let token = null;\n    /** @type {?} */\n    let optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    /** @type {?} */\n    let visibility = null;\n    for (let i = 0; i < metadata.length; ++i) {\n        /** @type {?} */\n        const paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * \\@usageNotes\n * ### Example\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nclass ReflectiveInjector {\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of `ResolvedReflectiveProvider`s.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * @param {?} providers\n     * @return {?}\n     */\n    static resolve(providers) {\n        return resolveReflectiveProviders(providers);\n    }\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, `Provider`,\n     * or a recursive array of more providers.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    static resolveAndCreate(providers, parent) {\n        /** @type {?} */\n        const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    }\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    static fromResolvedProviders(providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    }\n}\nclass ReflectiveInjector_ {\n    /**\n     * Private\n     * @param {?} _providers\n     * @param {?=} _parent\n     */\n    constructor(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        /** @type {?} */\n        const len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = THROW_IF_NOT_FOUND) {\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    }\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    resolveAndCreateChild(providers) {\n        /** @type {?} */\n        const ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    }\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    createChildFromResolved(providers) {\n        /** @type {?} */\n        const inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    resolveAndInstantiate(provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    instantiateResolved(provider) {\n        return this._instantiateProvider(provider);\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    getProviderAtIndex(index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    }\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    _new(provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    }\n    /**\n     * @return {?}\n     */\n    _getMaxNumberOfObjects() { return this.objs.length; }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    _instantiateProvider(provider) {\n        if (provider.multiProvider) {\n            /** @type {?} */\n            const res = new Array(provider.resolvedFactories.length);\n            for (let i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    }\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    _instantiate(provider, ResolvedReflectiveFactory$$1) {\n        /** @type {?} */\n        const factory = ResolvedReflectiveFactory$$1.factory;\n        /** @type {?} */\n        let deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(dep => this._getByReflectiveDependency(dep));\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        /** @type {?} */\n        let obj;\n        try {\n            obj = factory(...deps);\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    }\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    _getByReflectiveDependency(dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    }\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    _getByKey(key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    }\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    _getObjByKeyId(keyId) {\n        for (let i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    }\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    _throwOrNull(key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    _getByKeySelf(key, notFoundValue) {\n        /** @type {?} */\n        const obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    }\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    _getByKeyDefault(key, notFoundValue, visibility) {\n        /** @type {?} */\n        let inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            /** @type {?} */\n            const inj_ = /** @type {?} */ (inj);\n            /** @type {?} */\n            const obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get displayName() {\n        /** @type {?} */\n        const providers = _mapProviders(this, (b) => ' \"' + b.key.displayName + '\" ')\n            .join(', ');\n        return `ReflectiveInjector(providers: [${providers}])`;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return this.displayName; }\n}\nReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    /** @type {?} */\n    const res = new Array(injector._providers.length);\n    for (let i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n  @type {?} */\nconst APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Marker which indicates that a value has not yet been created from the factory function.\n  @type {?} */\nconst NOT_YET = {};\n/** *\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n  @type {?} */\nconst CIRCULAR$1 = {};\n/** @type {?} */\nconst EMPTY_ARRAY$1 = /** @type {?} */ ([]);\n/** *\n * A lazily initialized NullInjector.\n  @type {?} */\nlet NULL_INJECTOR$1 = undefined;\n/**\n * @return {?}\n */\nfunction getNullInjector() {\n    if (NULL_INJECTOR$1 === undefined) {\n        NULL_INJECTOR$1 = new NullInjector();\n    }\n    return NULL_INJECTOR$1;\n}\n/**\n * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n *\n * \\@experimental\n * @param {?} defType\n * @param {?=} parent\n * @param {?=} additionalProviders\n * @return {?}\n */\nfunction createInjector(defType, parent = null, additionalProviders = null) {\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, additionalProviders, parent);\n}\nclass R3Injector {\n    /**\n     * @param {?} def\n     * @param {?} additionalProviders\n     * @param {?} parent\n     */\n    constructor(def, additionalProviders, parent) {\n        this.parent = parent;\n        /**\n         * Map of tokens to records which contain the instances of those tokens.\n         */\n        this.records = new Map();\n        /**\n         * The transitive set of `InjectorType`s which define this injector.\n         */\n        this.injectorDefTypes = new Set();\n        /**\n         * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n         */\n        this.onDestroy = new Set();\n        /**\n         * Flag indicating that this injector was previously destroyed.\n         */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorType\n        // included transitively in `def`.\n        deepForEach([def], injectorDef => this.processInjectorType(injectorDef, new Set()));\n        additionalProviders &&\n            deepForEach(additionalProviders, provider => this.processProvider(provider));\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorType classes themselves.\n        this.injectorDefTypes.forEach(defType => this.get(defType));\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     * @return {?}\n     */\n    destroy() {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(service => service.ngOnDestroy());\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    }\n    /**\n     * @template T\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} flags\n     * @return {?}\n     */\n    get(token, notFoundValue = THROW_IF_NOT_FOUND, flags = 0 /* Default */) {\n        this.assertNotDestroyed();\n        /** @type {?} */\n        const previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 4 /* SkipSelf */)) {\n                /** @type {?} */\n                let record = this.records.get(token);\n                if (record === undefined) {\n                    /** @type {?} */\n                    const def = couldBeInjectableType(token) &&\n                        (/** @type {?} */ (token)).ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            /** @type {?} */\n            let next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    assertNotDestroyed() {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    }\n    /**\n     * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     * @param {?} defOrWrappedDef\n     * @param {?} parents\n     * @return {?}\n     */\n    processInjectorType(defOrWrappedDef, parents) {\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        /** @type {?} */\n        let def = /** @type {?} */ ((/** @type {?} */ (defOrWrappedDef)).ngInjectorDef);\n        /** @type {?} */\n        const ngModule = (def == null) && (/** @type {?} */ (defOrWrappedDef)).ngModule || undefined;\n        /** @type {?} */\n        const defType = (ngModule === undefined) ? (/** @type {?} */ (defOrWrappedDef)) : ngModule;\n        /** @type {?} */\n        const providers = (ngModule !== undefined) && (/** @type {?} */ (defOrWrappedDef)).providers ||\n            EMPTY_ARRAY$1;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, it might be from exports. Remove it.\n        if (def == null) {\n            return;\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(`Circular dependency: type ${stringify(defType)} ends up importing itself.`);\n        }\n        // Track the InjectorType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, imported => this.processInjectorType(imported, parents));\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, provider => this.processProvider(provider));\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, provider => this.processProvider(provider));\n    }\n    /**\n     * Process a `SingleProvider` and add it.\n     * @param {?} provider\n     * @return {?}\n     */\n    processProvider(provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        /** @type {?} */\n        let token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        /** @type {?} */\n        const record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            /** @type {?} */\n            let multiRecord = this.records.get(token);\n            if (multiRecord) {\n                // It has. Throw a nice error if\n                if (multiRecord.multi === undefined) {\n                    throw new Error(`Mixed multi-provider for ${token}.`);\n                }\n            }\n            else {\n                multiRecord = makeRecord(undefined, NOT_YET, true);\n                multiRecord.factory = () => injectArgs(/** @type {?} */ ((/** @type {?} */ ((multiRecord)).multi)));\n                this.records.set(token, multiRecord);\n            }\n            token = provider; /** @type {?} */\n            ((multiRecord.multi)).push(provider);\n        }\n        else {\n            /** @type {?} */\n            const existing = this.records.get(token);\n            if (existing && existing.multi !== undefined) {\n                throw new Error(`Mixed multi-provider for ${stringify(token)}`);\n            }\n        }\n        this.records.set(token, record);\n    }\n    /**\n     * @template T\n     * @param {?} token\n     * @param {?} record\n     * @return {?}\n     */\n    hydrate(token, record) {\n        if (record.value === CIRCULAR$1) {\n            throw new Error(`Circular dep for ${stringify(token)}`);\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$1;\n            record.value = /** @type {?} */ ((record.factory))();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return /** @type {?} */ (record.value);\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    injectableDefInScope(def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    }\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction injectableDefRecord(token) {\n    /** @type {?} */\n    const def = /** @type {?} */ ((/** @type {?} */ (token)).ngInjectableDef);\n    if (def === undefined) {\n        if (token instanceof InjectionToken) {\n            throw new Error(`Token ${stringify(token)} is missing an ngInjectableDef definition.`);\n        }\n        // TODO(alxhub): there should probably be a strict mode which throws here instead of assuming a\n        // no-args constructor.\n        return makeRecord(() => new (/** @type {?} */ (token))());\n    }\n    return makeRecord(def.factory);\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction providerToRecord(provider) {\n    /** @type {?} */\n    let token = resolveForwardRef(provider);\n    /** @type {?} */\n    let value = NOT_YET;\n    /** @type {?} */\n    let factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = () => inject(provider.useExisting);\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = () => provider.useFactory(...injectArgs(provider.deps || []));\n        }\n        else {\n            /** @type {?} */\n            const classRef = (/** @type {?} */ (provider)).useClass || token;\n            if (hasDeps(provider)) {\n                factory = () => new (classRef)(...injectArgs(provider.deps));\n            }\n            else {\n                return injectableDefRecord(classRef);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\n/**\n * @template T\n * @param {?} factory\n * @param {?=} value\n * @param {?=} multi\n * @return {?}\n */\nfunction makeRecord(factory, value = NOT_YET, multi = false) {\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\n/**\n * @template T\n * @param {?} input\n * @param {?} fn\n * @return {?}\n */\nfunction deepForEach(input, fn) {\n    input.forEach(value => Array.isArray(value) ? deepForEach(value, fn) : fn(value));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValueProvider(value) {\n    return USE_VALUE in value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isExistingProvider(value) {\n    return !!(/** @type {?} */ (value)).useExisting;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFactoryProvider(value) {\n    return !!(/** @type {?} */ (value)).useFactory;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction hasDeps(value) {\n    return !!(/** @type {?} */ (value)).deps;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && (/** @type {?} */ (value)).ngOnDestroy &&\n        typeof (/** @type {?} */ (value)).ngOnDestroy === 'function';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO: use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A function that will be executed when an application is initialized.\n  @type {?} */\nconst APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n */\nclass ApplicationInitStatus {\n    /**\n     * @param {?} appInits\n     */\n    constructor(appInits) {\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise((res, rej) => {\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    runInitializers() {\n        if (this.initialized) {\n            return;\n        }\n        /** @type {?} */\n        const asyncInitPromises = [];\n        /** @type {?} */\n        const complete = () => {\n            (/** @type {?} */ (this)).done = true;\n            this.resolve();\n        };\n        if (this.appInits) {\n            for (let i = 0; i < this.appInits.length; i++) {\n                /** @type {?} */\n                const initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(() => { complete(); }).catch(e => { this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    }\n}\nApplicationInitStatus.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nApplicationInitStatus.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n  @type {?} */\nconst APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return `${_randomChar()}${_randomChar()}${_randomChar()}`;\n}\n/** *\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n  @type {?} */\nconst APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/** *\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n  @type {?} */\nconst PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/** *\n * A token that indicates an opaque platform id.\n * \\@experimental\n  @type {?} */\nconst PLATFORM_ID = new InjectionToken('Platform ID');\n/** *\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n  @type {?} */\nconst APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/** *\n * A token which indicates the root directory of the application\n * \\@experimental\n  @type {?} */\nconst PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass Console {\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    log(message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    warn(message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    }\n}\nConsole.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n * @template T\n */\nclass ModuleWithComponentFactories {\n    /**\n     * @param {?} ngModuleFactory\n     * @param {?} componentFactories\n     */\n    constructor(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n}\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(`Runtime compiler is not loaded`);\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n *\n */\nclass Compiler {\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleSync(moduleType) { throw _throwError(); }\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAsync(moduleType) { throw _throwError(); }\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsSync(moduleType) {\n        throw _throwError();\n    }\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    compileModuleAndAllComponentsAsync(moduleType) {\n        throw _throwError();\n    }\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    clearCache() { }\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    clearCacheFor(type) { }\n    /**\n     * Returns the id for a given NgModule, if one is defined and known to the compiler.\n     * @param {?} moduleType\n     * @return {?}\n     */\n    getModuleId(moduleType) { return undefined; }\n}\nCompiler.decorators = [\n    { type: Injectable }\n];\n/** *\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n  @type {?} */\nconst COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nclass CompilerFactory {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a component created by a `ComponentFactory`.\n * Provides access to the component instance and related objects,\n * and provides the means of destroying the instance.\n *\n * @abstract\n * @template C\n */\nclass ComponentRef {\n}\n/**\n * @abstract\n * @template C\n */\nclass ComponentFactory {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    /** @type {?} */\n    const error = Error(`No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\n/** @type {?} */\nconst ERROR_COMPONENT = 'ngComponent';\nclass _NullComponentFactoryResolver {\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    resolveComponentFactory(component) {\n        throw noComponentFactoryError(component);\n    }\n}\n/**\n * @abstract\n */\nclass ComponentFactoryResolver {\n}\nComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\nclass CodegenComponentFactoryResolver {\n    /**\n     * @param {?} factories\n     * @param {?} _parent\n     * @param {?} _ngModule\n     */\n    constructor(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (let i = 0; i < factories.length; i++) {\n            /** @type {?} */\n            const factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    resolveComponentFactory(component) {\n        /** @type {?} */\n        let factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    }\n}\n/**\n * @template C\n */\nclass ComponentFactoryBoundToModule extends ComponentFactory {\n    /**\n     * @param {?} factory\n     * @param {?} ngModule\n     */\n    constructor(factory, ngModule) {\n        super();\n        this.factory = factory;\n        this.ngModule = ngModule;\n        this.selector = factory.selector;\n        this.componentType = factory.componentType;\n        this.ngContentSelectors = factory.ngContentSelectors;\n        this.inputs = factory.inputs;\n        this.outputs = factory.outputs;\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n *\n * @abstract\n * @template T\n */\nclass NgModuleRef {\n}\n/**\n * \\@experimental\n * @abstract\n * @template T\n */\nclass NgModuleFactory {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet trace;\n/** @type {?} */\nlet events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    /** @type {?} */\n    const wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags = null) {\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * True if WTF is enabled.\n  @type {?} */\nconst wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/** *\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n  @type {?} */\nconst wtfCreateScope = wtfEnabled ? createScope : (signature, flags) => noopScope;\n/** *\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n  @type {?} */\nconst wtfLeave = wtfEnabled ? leave : (s, r) => r;\n/** *\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n  @type {?} */\nconst wtfStartTimeRange = wtfEnabled ? startTimeRange : (rangeType, action) => null;\n/** *\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n  @type {?} */\nconst wtfEndTimeRange = wtfEnabled ? endTimeRange : (r) => null;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Use in directives and components to emit custom events synchronously\n * or asynchronously, and register handlers for those events by subscribing\n * to an instance.\n *\n * \\@usageNotes\n *\n * In the following example, a component defines two output properties\n * that create event emitters. When the title is clicked, the emitter\n * emits an open or close event to toggle the current visibility state.\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n * \\@Output() open: EventEmitter<any> = new EventEmitter();\n * \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * Access the event object with the `$event` argument passed to the output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * ### Notes\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n *\n * @template T\n */\nclass EventEmitter extends Subject {\n    /**\n     * Creates an instance of this class that can\n     * deliver events synchronously or asynchronously.\n     *\n     * @param {?=} isAsync When true, deliver events asynchronously.\n     *\n     */\n    constructor(isAsync = false) {\n        super();\n        this.__isAsync = isAsync;\n    }\n    /**\n     * Emits an event containing a given value.\n     * @param {?=} value The value to emit.\n     * @return {?}\n     */\n    emit(value) { super.next(value); }\n    /**\n     * Registers handlers for events emitted by this instance.\n     * @param {?=} generatorOrNext When supplied, a custom handler for emitted events.\n     * @param {?=} error When supplied, a custom handler for an error notification\n     * from this emitter.\n     * @param {?=} complete When supplied, a custom handler for a completion\n     * notification from this emitter.\n     * @return {?}\n     */\n    subscribe(generatorOrNext, error, complete) {\n        /** @type {?} */\n        let schedulerFn;\n        /** @type {?} */\n        let errorFn = (err) => null;\n        /** @type {?} */\n        let completeFn = () => null;\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? (value) => {\n                setTimeout(() => generatorOrNext.next(value));\n            } : (value) => { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? (err) => { setTimeout(() => generatorOrNext.error(err)); } :\n                    (err) => { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? () => { setTimeout(() => generatorOrNext.complete()); } :\n                    () => { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? (value) => { setTimeout(() => generatorOrNext(value)); } :\n                (value) => { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? (err) => { setTimeout(() => error(err)); } : (err) => { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? () => { setTimeout(() => complete()); } : () => { complete(); };\n            }\n        }\n        /** @type {?} */\n        const sink = super.subscribe(schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nclass NgZone {\n    /**\n     * @param {?} __0\n     */\n    constructor({ enableLongStackTrace = false }) {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(`In this configuration Angular requires Zone.js`);\n        }\n        Zone.assertZonePatched();\n        /** @type {?} */\n        const self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if ((/** @type {?} */ (Zone))['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new (/** @type {?} */ ((/** @type {?} */ (Zone))['TaskTrackingZoneSpec'])));\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    static isInAngularZone() { return Zone.current.get('isAngularZone') === true; }\n    /**\n     * @return {?}\n     */\n    static assertInAngularZone() {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    static assertNotInAngularZone() {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    }\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    run(fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    }\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    runTask(fn, applyThis, applyArgs, name) {\n        /** @type {?} */\n        const zone = (/** @type {?} */ ((this)))._inner;\n        /** @type {?} */\n        const task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    }\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    runGuarded(fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    }\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    runOutsideAngular(fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    }\n}\n/**\n * @return {?}\n */\nfunction noop() { }\n/** @type {?} */\nconst EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(() => zone.onStable.emit(null));\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: (delegate, current, target, task, applyThis, applyArgs) => {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: (delegate, current, target, callback, applyThis, applyArgs, source) => {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: (delegate, current, target, hasTaskState) => {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: (delegate, current, target, error) => {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(() => zone.onError.emit(error));\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nclass NoopNgZone {\n    constructor() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    run(fn) { return fn(); }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    runGuarded(fn) { return fn(); }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    runOutsideAngular(fn) { return fn(); }\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    runTask(fn) { return fn(); }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nclass Testability {\n    /**\n     * @param {?} _ngZone\n     */\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(() => { this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    /**\n     * @return {?}\n     */\n    _watchAngularEvents() {\n        this._ngZone.onUnstable.subscribe({\n            next: () => {\n                this._didWork = true;\n                this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.subscribe({\n                next: () => {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(() => {\n                        this._isZoneStable = true;\n                        this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     * @return {?}\n     */\n    increasePendingRequestCount() {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    }\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    decreasePendingRequestCount() {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    }\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    isStable() {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    }\n    /**\n     * @return {?}\n     */\n    _runCallbacksIfReady() {\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(() => {\n                while (this._callbacks.length !== 0) {\n                    /** @type {?} */\n                    let cb = /** @type {?} */ ((this._callbacks.pop()));\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(this._didWork);\n                }\n                this._didWork = false;\n            });\n        }\n        else {\n            /** @type {?} */\n            let pending = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter((cb) => {\n                if (cb.updateCb && cb.updateCb(pending)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getPendingTasks() {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map((t) => {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: /** @type {?} */ ((/** @type {?} */ (t)).creationLocation),\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: (/** @type {?} */ (t.data)).target\n            };\n        });\n    }\n    /**\n     * @param {?} cb\n     * @param {?=} timeout\n     * @param {?=} updateCb\n     * @return {?}\n     */\n    addCallback(cb, timeout, updateCb) {\n        /** @type {?} */\n        let timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(() => {\n                this._callbacks = this._callbacks.filter((cb) => cb.timeoutId !== timeoutId);\n                cb(this._didWork, this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push(/** @type {?} */ ({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb }));\n    }\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param {?} doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param {?=} timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param {?=} updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     * @return {?}\n     */\n    whenStable(doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(/** @type {?} */ (doneCb), timeout, /** @type {?} */ (updateCb));\n        this._runCallbacksIfReady();\n    }\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     * @return {?}\n     */\n    getPendingRequestCount() { return this._pendingCount; }\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    findProviders(using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    }\n}\nTestability.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nTestability.ctorParameters = () => [\n    { type: NgZone }\n];\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nclass TestabilityRegistry {\n    constructor() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    registerApplication(token, testability) {\n        this._applications.set(token, testability);\n    }\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    unregisterApplication(token) { this._applications.delete(token); }\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    unregisterAllApplications() { this._applications.clear(); }\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    getTestability(elem) { return this._applications.get(elem) || null; }\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    getAllTestabilities() { return Array.from(this._applications.values()); }\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    getAllRootElements() { return Array.from(this._applications.keys()); }\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    findTestabilityInTree(elem, findInAncestors = true) {\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    }\n}\nTestabilityRegistry.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nTestabilityRegistry.ctorParameters = () => [];\nclass _NoopGetTestability {\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    addToWindow(registry) { }\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        return null;\n    }\n}\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\n/** @type {?} */\nlet _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet _devMode = true;\n/** @type {?} */\nlet _runModeLocked = false;\n/** @type {?} */\nlet _platform;\n/** @type {?} */\nconst ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n *\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nclass NgProbeToken {\n    /**\n     * @param {?} name\n     * @param {?} token\n     */\n    constructor(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    /** @type {?} */\n    const inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach((init) => init());\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers = []) {\n    /** @type {?} */\n    const desc = `Platform: ${name}`;\n    /** @type {?} */\n    const marker = new InjectionToken(desc);\n    return (extraProviders = []) => {\n        /** @type {?} */\n        let platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                /** @type {?} */\n                const injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    /** @type {?} */\n    const platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n */\nclass PlatformRef {\n    /**\n     * \\@internal\n     * @param {?} _injector\n     */\n    constructor(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    bootstrapModuleFactory(moduleFactory, options) {\n        /** @type {?} */\n        const ngZoneOption = options ? options.ngZone : undefined;\n        /** @type {?} */\n        const ngZone = getNgZone(ngZoneOption);\n        /** @type {?} */\n        const providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(() => {\n            /** @type {?} */\n            const ngZoneInjector = Injector.create({ providers: providers, parent: this.injector, name: moduleFactory.moduleType.name });\n            /** @type {?} */\n            const moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            /** @type {?} */\n            const exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(() => remove(this._modules, moduleRef)); /** @type {?} */\n            ((ngZone)).runOutsideAngular(() => /** @type {?} */ ((ngZone)).onError.subscribe({ next: (error) => { exceptionHandler.handleError(error); } }));\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), () => {\n                /** @type {?} */\n                const initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(() => {\n                    this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    }\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * \\@usageNotes\n     * ### Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     *\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    bootstrapModule(moduleType, compilerOptions = []) {\n        /** @type {?} */\n        const compilerFactory = this.injector.get(CompilerFactory);\n        /** @type {?} */\n        const options = optionsReducer({}, compilerOptions);\n        /** @type {?} */\n        const compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then((moduleFactory) => this.bootstrapModuleFactory(moduleFactory, options));\n    }\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    _moduleDoBootstrap(moduleRef) {\n        /** @type {?} */\n        const appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(f => appRef.bootstrap(f));\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(`The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare \"@NgModule.bootstrap\" components nor a \"ngDoBootstrap\" method. ` +\n                `Please define one of these.`);\n        }\n        this._modules.push(moduleRef);\n    }\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { this._destroyListeners.push(callback); }\n    /**\n     * Retrieve the platform {\\@link Injector}, which is the parent injector for\n     * every Angular application on the page and provides singleton providers.\n     * @return {?}\n     */\n    get injector() { return this._injector; }\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    destroy() {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(module => module.destroy());\n        this._destroyListeners.forEach(listener => listener());\n        this._destroyed = true;\n    }\n    /**\n     * @return {?}\n     */\n    get destroyed() { return this._destroyed; }\n}\nPlatformRef.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nPlatformRef.ctorParameters = () => [\n    { type: Injector }\n];\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    /** @type {?} */\n    let ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        /** @type {?} */\n        const result = callback();\n        if (isPromise(result)) {\n            return result.catch((e) => {\n                ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(() => errorHandler.handleError(e));\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = Object.assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n */\nclass ApplicationRef {\n    /**\n     * \\@internal\n     * @param {?} _zone\n     * @param {?} _console\n     * @param {?} _injector\n     * @param {?} _exceptionHandler\n     * @param {?} _componentFactoryResolver\n     * @param {?} _initStatus\n     */\n    constructor(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: () => { this._zone.run(() => { this.tick(); }); } });\n        /** @type {?} */\n        const isCurrentlyStable = new Observable((observer) => {\n            this._stable = this._zone.isStable && !this._zone.hasPendingMacrotasks &&\n                !this._zone.hasPendingMicrotasks;\n            this._zone.runOutsideAngular(() => {\n                observer.next(this._stable);\n                observer.complete();\n            });\n        });\n        /** @type {?} */\n        const isStable = new Observable((observer) => {\n            /** @type {?} */\n            let stableSub;\n            this._zone.runOutsideAngular(() => {\n                stableSub = this._zone.onStable.subscribe(() => {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(() => {\n                        if (!this._stable && !this._zone.hasPendingMacrotasks &&\n                            !this._zone.hasPendingMicrotasks) {\n                            this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            /** @type {?} */\n            const unstableSub = this._zone.onUnstable.subscribe(() => {\n                NgZone.assertInAngularZone();\n                if (this._stable) {\n                    this._stable = false;\n                    this._zone.runOutsideAngular(() => { observer.next(false); });\n                }\n            });\n            return () => {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge(isCurrentlyStable, isStable.pipe(share()));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * \\@usageNotes\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the componentType's\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * componentType's selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    bootstrap(componentOrFactory, rootSelectorOrNode) {\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        /** @type {?} */\n        let componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        /** @type {?} */\n        const ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        /** @type {?} */\n        const selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        /** @type {?} */\n        const compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(() => { this._unloadComponent(compRef); });\n        /** @type {?} */\n        const testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(`Angular is running in the development mode. Call enableProdMode() to enable the production mode.`);\n        }\n        return compRef;\n    }\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    tick() {\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        /** @type {?} */\n        const scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach((view) => view.detectChanges());\n            if (this._enforceNoNewChanges) {\n                this._views.forEach((view) => view.checkNoChanges());\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(() => this._exceptionHandler.handleError(e));\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    }\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    attachView(viewRef) {\n        /** @type {?} */\n        const view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    }\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    detachView(viewRef) {\n        /** @type {?} */\n        const view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    }\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _loadComponent(componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        /** @type {?} */\n        const listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach((listener) => listener(componentRef));\n    }\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _unloadComponent(componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach((view) => view.destroy());\n    }\n    /**\n     * Returns the number of attached views.\n     * @return {?}\n     */\n    get viewCount() { return this._views.length; }\n}\n/**\n * \\@internal\n */\nApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\nApplicationRef.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nApplicationRef.ctorParameters = () => [\n    { type: NgZone },\n    { type: Console },\n    { type: Injector },\n    { type: ErrorHandler },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationInitStatus }\n];\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    /** @type {?} */\n    const index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nclass RenderComponentType {\n    /**\n     * @param {?} id\n     * @param {?} templateUrl\n     * @param {?} slotCount\n     * @param {?} encapsulation\n     * @param {?} styles\n     * @param {?} animations\n     */\n    constructor(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n}\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nclass RenderDebugInfo {\n}\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nclass Renderer {\n}\n/** @type {?} */\nconst Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nclass RootRenderer {\n}\n/**\n * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n *\n * \\@experimental\n * @abstract\n */\nclass RendererFactory2 {\n}\n/** @enum {number} */\nconst RendererStyleFlags2 = {\n    /**\n       * Marks a style as important.\n       */\n    Important: 1,\n    /**\n       * Marks a style as using dash case naming (this-is-dash-case).\n       */\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = 'Important';\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = 'DashCase';\n/**\n * Extend this base class to implement custom rendering. By default, Angular\n * renders a template into DOM. You can use custom rendering to intercept\n * rendering calls, or to render to something other than DOM.\n *\n * Create your custom renderer using `RendererFactory2`.\n *\n * Use a custom renderer to bypass Angular's templating and\n * make custom UI changes that can't be expressed declaratively.\n * For example if you need to set a property or an attribute whose name is\n * not statically known, use the `setProperty()` or\n * `setAttribute()` method.\n *\n * \\@experimental\n * @abstract\n */\nclass Renderer2 {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n *\n * @template T\n */\nclass ElementRef {\n    /**\n     * @param {?} nativeElement\n     */\n    constructor(nativeElement) { this.nativeElement = nativeElement; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n *\n * @abstract\n */\nclass NgModuleFactoryLoader {\n}\n/** @type {?} */\nlet moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    /** @type {?} */\n    const existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(`Duplicate module registered for ${id} - ${existing.moduleType.name} vs ${factory.moduleType.name}`);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    /** @type {?} */\n    const factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(`No module with ID ${id} loaded`);\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * \\@usageNotes\n * ### Example\n * ```typescript\n * \\@Component({...})\n * class Container {\n * \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * @template T\n */\nclass QueryList {\n    constructor() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    map(fn) { return this._results.map(fn); }\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    filter(fn) {\n        return this._results.filter(fn);\n    }\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    find(fn) {\n        return this._results.find(fn);\n    }\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    reduce(fn, init) {\n        return this._results.reduce(fn, init);\n    }\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) { this._results.forEach(fn); }\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    some(fn) {\n        return this._results.some(fn);\n    }\n    /**\n     * @return {?}\n     */\n    toArray() { return this._results.slice(); }\n    /**\n     * @return {?}\n     */\n    [getSymbolIterator()]() { return (/** @type {?} */ (this._results))[getSymbolIterator()](); }\n    /**\n     * @return {?}\n     */\n    toString() { return this._results.toString(); }\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    reset(res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n        (/** @type {?} */ (this)).length = this._results.length;\n        (/** @type {?} */ (this)).last = this._results[this.length - 1];\n        (/** @type {?} */ (this)).first = this._results[0];\n    }\n    /**\n     * @return {?}\n     */\n    notifyOnChanges() { (/** @type {?} */ (this.changes)).emit(this); }\n    /**\n     * internal\n     * @return {?}\n     */\n    setDirty() { (/** @type {?} */ (this)).dirty = true; }\n    /**\n     * internal\n     * @return {?}\n     */\n    destroy() {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    }\n}\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce((flat, item) => {\n        /** @type {?} */\n        const flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _SEPARATOR = '#';\n/** @type {?} */\nconst FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nclass SystemJsNgModuleLoaderConfig {\n}\n/** @type {?} */\nconst DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nclass SystemJsNgModuleLoader {\n    /**\n     * @param {?} _compiler\n     * @param {?=} config\n     */\n    constructor(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    load(path) {\n        /** @type {?} */\n        const offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    loadAndCompile(path) {\n        let [module, exportName] = path.split(_SEPARATOR);\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then((module) => module[exportName])\n            .then((type) => checkNotEmpty(type, module, exportName))\n            .then((type) => this._compiler.compileModuleAsync(type));\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    loadFactory(path) {\n        let [module, exportName] = path.split(_SEPARATOR);\n        /** @type {?} */\n        let factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then((module) => module[exportName + factoryClassSuffix])\n            .then((factory) => checkNotEmpty(factory, module, exportName));\n    }\n}\nSystemJsNgModuleLoader.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nSystemJsNgModuleLoader.ctorParameters = () => [\n    { type: Compiler },\n    { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional }] }\n];\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(`Cannot find '${exportName}' in '${modulePath}'`);\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an embedded template that can be used to instantiate embedded views.\n * To instantiate embedded views based on a template, use the `ViewContainerRef`\n * method `createEmbeddedView()`.\n *\n * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n * is injected into the constructor of the directive,\n * using the `TemplateRef` token.\n *\n * You can also use a `Query` to find a `TemplateRef` associated with\n * a component or a directive.\n *\n * @see `ViewContainerRef`\n * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n *\n * @abstract\n * @template C\n */\nclass TemplateRef {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more views can be attached to a component.\n *\n * Can contain *host views* (created by instantiating a\n * component with the `createComponent()` method), and *embedded views*\n * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n *\n * A view container instance can contain other view containers,\n * creating a [view hierarchy](guide/glossary#view-tree).\n *\n * @see `ComponentRef`\n * @see `EmbeddedViewRef`\n *\n * @abstract\n */\nclass ViewContainerRef {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for Angular Views, provides change detection functionality.\n * A change-detection tree collects all views that are to be checked for changes.\n * Use the methods to add and remove views from the tree, initiate change-detection,\n * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n *\n * \\@usageNotes\n *\n * The following examples demonstrate how to modify default change-detection behavior\n * to perform explicit detection when needed.\n *\n * ### Use `markForCheck()` with `CheckOnce` strategy\n *\n * The following example sets the `OnPush` change-detection strategy for a component\n * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n * region=\"mark-for-check\"></code-example>\n *\n * ### Detach change detector to limit how often check occurs\n *\n * The following example defines a component with a large list of read-only data\n * that is expected to change constantly, many times per second.\n * To improve performance, we want to check and update the list\n * less often than the changes actually occur. To do that, we detach\n * the component's change detector and perform an explicit local check every five seconds.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n *\n *\n * ### Reattaching a detached component\n *\n * The following example creates a component displaying live data.\n * The component detaches its change detector from the main change detector tree\n * when the `live` property is set to false, and reattaches it when the property\n * becomes true.\n *\n * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n *\n * @abstract\n */\nclass ChangeDetectorRef {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Represents an Angular [view](guide/glossary#view),\n * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n * Also serves as the base class\n * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n *\n * @see `EmbeddedViewRef`\n * @abstract\n */\nclass ViewRef extends ChangeDetectorRef {\n}\n/**\n * Represents an Angular [view](guide/glossary#view) in a view container.\n * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n * other than the hosting component whose template defines it, or it can be defined\n * independently by a `TemplateRef`.\n *\n * Properties of elements in a view can change, but the structure (number and order) of elements in\n * a view cannot. Change the structure of elements by inserting, moving, or\n * removing nested views in a view container.\n *\n * @see `ViewContainerRef`\n *\n * \\@usageNotes\n *\n * The following template breaks down into two separate `TemplateRef` instances,\n * an outer one and an inner one.\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * This is the outer `TemplateRef`:\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * This is the inner `TemplateRef`:\n *\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * The outer and inner `TemplateRef` instances are assembled into views as follows:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n * @template C\n */\nclass EmbeddedViewRef extends ViewRef {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass EventListener {\n    /**\n     * @param {?} name\n     * @param {?} callback\n     */\n    constructor(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nclass DebugNode {\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    constructor(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return this._debugContext.injector; }\n    /**\n     * @return {?}\n     */\n    get componentInstance() { return this._debugContext.component; }\n    /**\n     * @return {?}\n     */\n    get context() { return this._debugContext.context; }\n    /**\n     * @return {?}\n     */\n    get references() { return this._debugContext.references; }\n    /**\n     * @return {?}\n     */\n    get providerTokens() { return this._debugContext.providerTokens; }\n}\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nclass DebugElement extends DebugNode {\n    /**\n     * @param {?} nativeNode\n     * @param {?} parent\n     * @param {?} _debugContext\n     */\n    constructor(nativeNode, parent, _debugContext) {\n        super(nativeNode, parent, _debugContext);\n        this.properties = {};\n        this.attributes = {};\n        this.classes = {};\n        this.styles = {};\n        this.childNodes = [];\n        this.nativeElement = nativeNode;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    addChild(child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    removeChild(child) {\n        /** @type {?} */\n        const childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    }\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    insertChildrenAfter(child, newChildren) {\n        /** @type {?} */\n        const siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            this.childNodes.splice(siblingIndex + 1, 0, ...newChildren);\n            newChildren.forEach(c => {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = this;\n            });\n        }\n    }\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    insertBefore(refChild, newChild) {\n        /** @type {?} */\n        const refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    query(predicate) {\n        /** @type {?} */\n        const results = this.queryAll(predicate);\n        return results[0] || null;\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    queryAll(predicate) {\n        /** @type {?} */\n        const matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    }\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    queryAllNodes(predicate) {\n        /** @type {?} */\n        const matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    }\n    /**\n     * @return {?}\n     */\n    get children() {\n        return /** @type {?} */ (this.childNodes.filter((node) => node instanceof DebugElement));\n    }\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    triggerEventHandler(eventName, eventObj) {\n        this.listeners.forEach((listener) => {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    }\n}\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map((el) => el.nativeElement);\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(node => {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(node => {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n/** @type {?} */\nconst _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    /** @type {?} */\n    const isListLikeIterableA = isListLikeIterable(a);\n    /** @type {?} */\n    const isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        /** @type {?} */\n        const isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        /** @type {?} */\n        const isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n *\n */\nclass WrappedValue {\n    /**\n     * @param {?} value\n     */\n    constructor(value) { this.wrapped = value; }\n    /**\n     * Creates a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    static wrap(value) { return new WrappedValue(value); }\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     *\n     * @param {?} value\n     * @return {?}\n     */\n    static unwrap(value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; }\n    /**\n     * Returns true if `value` is a wrapped value.\n     * @param {?} value\n     * @return {?}\n     */\n    static isWrapped(value) { return value instanceof WrappedValue; }\n}\n/**\n * Represents a basic change from a previous to a new value.\n *\n */\nclass SimpleChange {\n    /**\n     * @param {?} previousValue\n     * @param {?} currentValue\n     * @param {?} firstChange\n     */\n    constructor(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    isFirstChange() { return this.firstChange; }\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    /** @type {?} */\n    const iterator1 = a[getSymbolIterator()]();\n    /** @type {?} */\n    const iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        /** @type {?} */\n        const item1 = iterator1.next();\n        /** @type {?} */\n        const item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (let i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        /** @type {?} */\n        const iterator = obj[getSymbolIterator()]();\n        /** @type {?} */\n        let item;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass DefaultIterableDifferFactory {\n    constructor() { }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    supports(obj) { return isListLikeIterable(obj); }\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    create(trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    }\n}\n/** @type {?} */\nconst trackByIdentity = (index, item) => item;\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n * @template V\n */\nclass DefaultIterableDiffer {\n    /**\n     * @param {?=} trackByFn\n     */\n    constructor(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachOperation(fn) {\n        /** @type {?} */\n        let nextIt = this._itHead;\n        /** @type {?} */\n        let nextRemove = this._removalsHead;\n        /** @type {?} */\n        let addRemoveOffset = 0;\n        /** @type {?} */\n        let moveOffsets = null;\n        while (nextIt || nextRemove) {\n            /** @type {?} */\n            const record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            /** @type {?} */\n            const adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            /** @type {?} */\n            const currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    /** @type {?} */\n                    const localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    /** @type {?} */\n                    const localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (let i = 0; i < localMovePreviousIndex; i++) {\n                            /** @type {?} */\n                            const offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            /** @type {?} */\n                            const index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        /** @type {?} */\n                        const previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachPreviousItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachAddedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachMovedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachRemovedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachIdentityChange(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    diff(collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(`Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onDestroy() { }\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    check(collection) {\n        this._reset();\n        /** @type {?} */\n        let record = this._itHead;\n        /** @type {?} */\n        let mayBeDirty = false;\n        /** @type {?} */\n        let index;\n        /** @type {?} */\n        let item;\n        /** @type {?} */\n        let itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (let index = 0; index < this.length; index++) {\n                item = collection[index];\n                itemTrackBy = this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, (item) => {\n                itemTrackBy = this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    }\n    /**\n     * @return {?}\n     */\n    get isDirty() {\n        return this._additionsHead !== null || this._movesHead !== null ||\n            this._removalsHead !== null || this._identityChangesHead !== null;\n    }\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    _reset() {\n        if (this.isDirty) {\n            /** @type {?} */\n            let record;\n            /** @type {?} */\n            let nextRecord;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // TODO(vicb): when assert gets supported\n            // assert(!this.isDirty);\n        }\n    }\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    _mismatch(record, item, itemTrackBy, index) {\n        /** @type {?} */\n        let previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    }\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    _verifyReinsertion(record, item, itemTrackBy, index) {\n        /** @type {?} */\n        let reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    }\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    _truncate(record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            /** @type {?} */\n            const nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _reinsertAfter(record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        /** @type {?} */\n        const prev = record._prevRemoved;\n        /** @type {?} */\n        const next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _moveAfter(record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _addAfter(record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // TODO(vicb):\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    _insertAfter(record, prevRecord, index) {\n        /** @type {?} */\n        const next = prevRecord === null ? this._itHead : prevRecord._next;\n        // TODO(vicb):\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    _remove(record) {\n        return this._addToRemovals(this._unlink(record));\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    _unlink(record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        /** @type {?} */\n        const prev = record._prev;\n        /** @type {?} */\n        const next = record._next;\n        // TODO(vicb):\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    _addToMoves(record, toIndex) {\n        // TODO(vicb):\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // TODO(vicb):\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _addToRemovals(record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // TODO(vicb):\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // TODO(vicb):\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    }\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    _addIdentityChange(record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    }\n}\n/**\n * @template V\n */\nclass IterableChangeRecord_ {\n    /**\n     * @param {?} item\n     * @param {?} trackById\n     */\n    constructor(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n}\n/**\n * @template V\n */\nclass _DuplicateItemRecordList {\n    constructor() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    add(record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // TODO(vicb):\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    }\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    get(trackById, atOrAfterIndex) {\n        /** @type {?} */\n        let record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    }\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    remove(record) {\n        /** @type {?} */\n        const prev = record._prevDup;\n        /** @type {?} */\n        const next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    }\n}\n/**\n * @template V\n */\nclass _DuplicateMap {\n    constructor() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    put(record) {\n        /** @type {?} */\n        const key = record.trackById;\n        /** @type {?} */\n        let duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    }\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    get(trackById, atOrAfterIndex) {\n        /** @type {?} */\n        const key = trackById;\n        /** @type {?} */\n        const recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    }\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    remove(record) {\n        /** @type {?} */\n        const key = record.trackById;\n        /** @type {?} */\n        const recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    }\n    /**\n     * @return {?}\n     */\n    get isEmpty() { return this.map.size === 0; }\n    /**\n     * @return {?}\n     */\n    clear() { this.map.clear(); }\n}\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    /** @type {?} */\n    const previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    /** @type {?} */\n    let moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template K, V\n */\nclass DefaultKeyValueDifferFactory {\n    constructor() { }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    supports(obj) { return obj instanceof Map || isJsObject(obj); }\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    create() { return new DefaultKeyValueDiffer(); }\n}\n/**\n * @template K, V\n */\nclass DefaultKeyValueDiffer {\n    constructor() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    /**\n     * @return {?}\n     */\n    get isDirty() {\n        return this._additionsHead !== null || this._changesHead !== null ||\n            this._removalsHead !== null;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachPreviousItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachChangedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachAddedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    forEachRemovedItem(fn) {\n        /** @type {?} */\n        let record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    }\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    diff(map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(`Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`);\n        }\n        return this.check(map) ? this : null;\n    }\n    /**\n     * @return {?}\n     */\n    onDestroy() { }\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    check(map) {\n        this._reset();\n        /** @type {?} */\n        let insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, (value, key) => {\n            if (insertBefore && insertBefore.key === key) {\n                this._maybeAddToChanges(insertBefore, value);\n                this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                /** @type {?} */\n                const record = this._getOrCreateRecordForKey(key, value);\n                insertBefore = this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (let record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    }\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    _insertBeforeOrAppend(before, record) {\n        if (before) {\n            /** @type {?} */\n            const prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    }\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    _getOrCreateRecordForKey(key, value) {\n        if (this._records.has(key)) {\n            /** @type {?} */\n            const record = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record, value);\n            /** @type {?} */\n            const prev = record._prev;\n            /** @type {?} */\n            const next = record._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record._next = null;\n            record._prev = null;\n            return record;\n        }\n        /** @type {?} */\n        const record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _reset() {\n        if (this.isDirty) {\n            /** @type {?} */\n            let record;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    }\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    _maybeAddToChanges(record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _addToAdditions(record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _addToChanges(record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    }\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    _forEach(obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(k => fn(obj[k], k));\n        }\n    }\n}\n/**\n * @template K, V\n */\nclass KeyValueChangeRecord_ {\n    /**\n     * @param {?} key\n     */\n    constructor(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n *\n */\nclass IterableDiffers {\n    /**\n     * @param {?} factories\n     */\n    constructor(factories) { this.factories = factories; }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    static create(factories, parent) {\n        if (parent != null) {\n            /** @type {?} */\n            const copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    }\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    static extend(factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: (parent) => {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    }\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    find(iterable) {\n        /** @type {?} */\n        const factory = this.factories.find(f => f.supports(iterable));\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(`Cannot find a differ supporting object '${iterable}' of type '${getTypeNameForDebugging(iterable)}'`);\n        }\n    }\n}\n/** @nocollapse */ IterableDiffers.ngInjectableDef = defineInjectable({\n    providedIn: 'root',\n    factory: () => new IterableDiffers([new DefaultIterableDifferFactory()])\n});\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n *\n */\nclass KeyValueDiffers {\n    /**\n     * @param {?} factories\n     */\n    constructor(factories) { this.factories = factories; }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    static create(factories, parent) {\n        if (parent) {\n            /** @type {?} */\n            const copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    }\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    static extend(factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: (parent) => {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    }\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    find(kv) {\n        /** @type {?} */\n        const factory = this.factories.find(f => f.supports(kv));\n        if (factory) {\n            return factory;\n        }\n        throw new Error(`Cannot find a differ supporting object '${kv}'`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Structural diffing for `Object`s and `Map`s.\n  @type {?} */\nconst keyValDiff = [new DefaultKeyValueDifferFactory()];\n/** *\n * Structural diffing for `Iterable` types such as `Array`s.\n  @type {?} */\nconst iterableDiff = [new DefaultIterableDifferFactory()];\n/** @type {?} */\nconst defaultIterableDiffers = new IterableDiffers(iterableDiff);\n/** @type {?} */\nconst defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/** *\n * This platform has to be included in any other platform\n *\n * \\@experimental\n  @type {?} */\nconst platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n  @type {?} */\nconst LOCALE_ID = new InjectionToken('LocaleId');\n/** *\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n  @type {?} */\nconst TRANSLATIONS = new InjectionToken('Translations');\n/** *\n * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the [i18n guide](guide/i18n#merge) for more information.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n  @type {?} */\nconst TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nconst MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = 'Error';\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = 'Warning';\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = 'Ignore';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/** *\n * A built-in [dependency injection token](guide/glossary#di-token)\n * that is used to configure the root injector for bootstrapping.\n  @type {?} */\nconst APPLICATION_MODULE_PROVIDERS = [\n    {\n        provide: ApplicationRef,\n        useClass: ApplicationRef,\n        deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n    },\n    {\n        provide: ApplicationInitStatus,\n        useClass: ApplicationInitStatus,\n        deps: [[new Optional(), APP_INITIALIZER]]\n    },\n    { provide: Compiler, useClass: Compiler, deps: [] },\n    APP_ID_RANDOM_PROVIDER,\n    { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n    { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n    {\n        provide: LOCALE_ID,\n        useFactory: _localeFactory,\n        deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n    },\n];\n/**\n * Configures the root injector for an app with\n * providers of `\\@angular/core` dependencies that `ApplicationRef` needs\n * to bootstrap components.\n *\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * \\@experimental\n */\nclass ApplicationModule {\n    /**\n     * @param {?} appRef\n     */\n    constructor(appRef) { }\n}\nApplicationModule.decorators = [\n    { type: NgModule, args: [{ providers: APPLICATION_MODULE_PROVIDERS },] }\n];\n/** @nocollapse */\nApplicationModule.ctorParameters = () => [\n    { type: ApplicationRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to resolve resource URLs on `\\@Component` when used with JIT compilation.\n *\n * Example:\n * ```\n * \\@Component({\n *   selector: 'my-comp',\n *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n * })\n * class MyComponnent{\n * }\n *\n * // Calling `renderComponent` will fail because `MyComponent`'s `\\@Compenent.templateUrl`\n * // needs to be resolved because `renderComponent` is synchronous process.\n * // renderComponent(MyComponent);\n *\n * // Calling `resolveComponentResources` will resolve `\\@Compenent.templateUrl` into\n * // `\\@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n * // Use browser's `fetch` function as the default resource resolution strategy.\n * resolveComponentResources(fetch).then(() => {\n *   // After resolution all URLs have been converted into strings.\n *   renderComponent(MyComponent);\n * });\n *\n * ```\n *\n * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n * to call this method outside JIT mode.\n *\n * @param {?} resourceResolver a function which is responsible to returning a `Promise` of the resolved\n * URL. Browser's `fetch` method is a good default implementation.\n * @return {?}\n */\nfunction resolveComponentResources(resourceResolver) {\n    /** @type {?} */\n    const urlFetches = [];\n    /** @type {?} */\n    const urlMap = new Map();\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    function cachedResourceResolve(url) {\n        /** @type {?} */\n        let promise = urlMap.get(url);\n        if (!promise) {\n            /** @type {?} */\n            const resp = resourceResolver(url);\n            urlMap.set(url, promise = resp.then(unwrapResponse));\n            urlFetches.push(promise);\n        }\n        return promise;\n    }\n    componentResourceResolutionQueue.forEach((component) => {\n        if (component.templateUrl) {\n            cachedResourceResolve(component.templateUrl).then((template) => {\n                component.template = template;\n                component.templateUrl = undefined;\n            });\n        }\n        /** @type {?} */\n        const styleUrls = component.styleUrls;\n        /** @type {?} */\n        const styles = component.styles || (component.styles = []);\n        /** @type {?} */\n        const styleOffset = component.styles.length;\n        styleUrls && styleUrls.forEach((styleUrl, index) => {\n            styles.push(''); // pre-allocate array.\n            cachedResourceResolve(styleUrl).then((style) => {\n                styles[styleOffset + index] = style;\n                styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                if (styleUrls.length == 0) {\n                    component.styleUrls = undefined;\n                }\n            });\n        });\n    });\n    componentResourceResolutionQueue.clear();\n    return Promise.all(urlFetches).then(() => null);\n}\n/** @type {?} */\nconst componentResourceResolutionQueue = new Set();\n/**\n * @param {?} response\n * @return {?}\n */\nfunction unwrapResponse(response) {\n    return typeof response == 'string' ? response : response.text();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nclass InertBodyHelper {\n    /**\n     * @param {?} defaultDoc\n     */\n    constructor(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            /** @type {?} */\n            const inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     * @param {?} html\n     * @return {?}\n     */\n    getInertBodyElement_XHR(html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        /** @type {?} */\n        const xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        /** @type {?} */\n        const body = xhr.response.body;\n        body.removeChild(/** @type {?} */ ((body.firstChild)));\n        return body;\n    }\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     * @param {?} html\n     * @return {?}\n     */\n    getInertBodyElement_DOMParser(html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            /** @type {?} */\n            const body = /** @type {?} */ (new (/** @type {?} */ (window))\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body);\n            body.removeChild(/** @type {?} */ ((body.firstChild)));\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    }\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     * @param {?} html\n     * @return {?}\n     */\n    getInertBodyElement_InertDocument(html) {\n        /** @type {?} */\n        const templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if ((/** @type {?} */ (this.defaultDoc)).documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    }\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     * @param {?} el\n     * @return {?}\n     */\n    stripCustomNsAttrs(el) {\n        /** @type {?} */\n        const elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (let i = elAttrs.length - 1; 0 < i; i--) {\n            /** @type {?} */\n            const attrib = elAttrs.item(i);\n            /** @type {?} */\n            const attrName = /** @type {?} */ ((attrib)).name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        /** @type {?} */\n        let childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(/** @type {?} */ (childNode));\n            childNode = childNode.nextSibling;\n        }\n    }\n}\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n * @return {?}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!(/** @type {?} */ (window)).DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n  @type {?} */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** *\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n  @type {?} */\nconst DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(`WARNING: sanitizing unsafe URL value ${url} (see http://g.co/ng/security#xss)`);\n    }\n    return 'unsafe:' + url;\n}\n/**\n * @param {?} srcset\n * @return {?}\n */\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map((srcset) => _sanitizeUrl(srcset.trim())).join(', ');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction tagSet(tags) {\n    /** @type {?} */\n    const res = {};\n    for (const t of tags.split(','))\n        res[t] = true;\n    return res;\n}\n/**\n * @param {...?} sets\n * @return {?}\n */\nfunction merge$1(...sets) {\n    /** @type {?} */\n    const res = {};\n    for (const s of sets) {\n        for (const v in s) {\n            if (s.hasOwnProperty(v))\n                res[v] = true;\n        }\n    }\n    return res;\n}\n/** @type {?} */\nconst VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n/** @type {?} */\nconst OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n/** @type {?} */\nconst OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n/** @type {?} */\nconst OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n/** @type {?} */\nconst BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n/** @type {?} */\nconst INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n/** @type {?} */\nconst VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n/** @type {?} */\nconst URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n/** @type {?} */\nconst SRCSET_ATTRS = tagSet('srcset');\n/** @type {?} */\nconst HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n/** @type {?} */\nconst VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nclass SanitizingHtmlSerializer {\n    constructor() {\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    sanitizeChildren(el) {\n        /** @type {?} */\n        let current = /** @type {?} */ ((el.firstChild));\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(/** @type {?} */ (current));\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars(/** @type {?} */ ((current.nodeValue)));\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = /** @type {?} */ ((current.firstChild));\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(/** @type {?} */ (current));\n                }\n                /** @type {?} */\n                let next = this.checkClobberedElement(current, /** @type {?} */ ((current.nextSibling)));\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, /** @type {?} */ ((current.parentNode)));\n            }\n        }\n        return this.buf.join('');\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    startElement(element) {\n        /** @type {?} */\n        const tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        /** @type {?} */\n        const elAttrs = element.attributes;\n        for (let i = 0; i < elAttrs.length; i++) {\n            /** @type {?} */\n            const elAttr = elAttrs.item(i);\n            /** @type {?} */\n            const attrName = /** @type {?} */ ((elAttr)).name;\n            /** @type {?} */\n            const lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            /** @type {?} */\n            let value = /** @type {?} */ ((elAttr)).value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    }\n    /**\n     * @param {?} current\n     * @return {?}\n     */\n    endElement(current) {\n        /** @type {?} */\n        const tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    }\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    chars(chars) { this.buf.push(encodeEntities(chars)); }\n    /**\n     * @param {?} node\n     * @param {?} nextNode\n     * @return {?}\n     */\n    checkClobberedElement(node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(`Failed to sanitize html because the element is clobbered: ${((/** @type {?} */ (node))).outerHTML}`);\n        }\n        return nextNode;\n    }\n}\n/** @type {?} */\nconst SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n/** @type {?} */\nconst NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param {?} value\n * @return {?}\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        /** @type {?} */\n        const hi = match.charCodeAt(0);\n        /** @type {?} */\n        const low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\n/** @type {?} */\nlet inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n * @param {?} defaultDoc\n * @param {?} unsafeHtmlInput\n * @return {?}\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    /** @type {?} */\n    let inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        /** @type {?} */\n        let unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        /** @type {?} */\n        let mXSSAttempts = 5;\n        /** @type {?} */\n        let parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = /** @type {?} */ ((inertBodyElement)).innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        /** @type {?} */\n        const sanitizer = new SanitizingHtmlSerializer();\n        /** @type {?} */\n        const safeHtml = sanitizer.sanitizeChildren(/** @type {?} */ (getTemplateContent(/** @type {?} */ ((inertBodyElement)))) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            /** @type {?} */\n            const parent = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent.firstChild) {\n                parent.removeChild(parent.firstChild);\n            }\n        }\n    }\n}\n/**\n * @param {?} el\n * @return {?}\n */\nfunction getTemplateContent(el) {\n    return 'content' in (/** @type {?} */ (el /** Microsoft/TypeScript#21517 */) /** Microsoft/TypeScript#21517 */) && isTemplateElement(el) ?\n        el.content :\n        null;\n}\n/**\n * @param {?} el\n * @return {?}\n */\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n  @type {?} */\nconst VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n/** @type {?} */\nconst TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n/** @type {?} */\nconst COLOR_FNS = '(?:rgb|hsl)a?';\n/** @type {?} */\nconst GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n/** @type {?} */\nconst CSS3_FNS = '(?:calc|attr)';\n/** @type {?} */\nconst FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n/** @type {?} */\nconst SAFE_STYLE_VALUE = new RegExp(`^(${VALUES}|` +\n    `(?:${TRANSFORMATION_FNS}|${COLOR_FNS}|${GRADIENTS}|${CSS3_FNS})` +\n    `${FN_ARGS})$`, 'g');\n/** *\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n  @type {?} */\nconst URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n * @param {?} value\n * @return {?}\n */\nfunction hasBalancedQuotes(value) {\n    /** @type {?} */\n    let outsideSingle = true;\n    /** @type {?} */\n    let outsideDouble = true;\n    for (let i = 0; i < value.length; i++) {\n        /** @type {?} */\n        const c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n * @param {?} value\n * @return {?}\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    /** @type {?} */\n    const urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(`WARNING: sanitizing unsafe style value ${value} (see http://g.co/ng/security#xss).`);\n    }\n    return 'unsafe';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = 'NONE';\nSecurityContext[SecurityContext.HTML] = 'HTML';\nSecurityContext[SecurityContext.STYLE] = 'STYLE';\nSecurityContext[SecurityContext.SCRIPT] = 'SCRIPT';\nSecurityContext[SecurityContext.URL] = 'URL';\nSecurityContext[SecurityContext.RESOURCE_URL] = 'RESOURCE_URL';\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n *\n * @abstract\n */\nclass Sanitizer {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nfunction shiftInitState(view, priorInitState, newInitState) {\n    /** @type {?} */\n    const state = view.state;\n    /** @type {?} */\n    const initState = state & 1792 /* InitState_Mask */;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @abstract\n */\nclass DebugContext {\n}\n/** *\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n  @type {?} */\nconst Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    /** @type {?} */\n    let msg = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n    if (isFirstCheck) {\n        msg +=\n            ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n                ` Has it been created in a change detection hook ?`;\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    /** @type {?} */\n    const err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(`ViewDestroyedError: Attempt to use a destroyed view: ${action}`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NOOP = () => { };\n/** @type {?} */\nconst _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    /** @type {?} */\n    let key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        /** @type {?} */\n        const globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        /** @type {?} */\n        const oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\n/** @type {?} */\nconst UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n/** @type {?} */\nconst EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\n/** @type {?} */\nlet _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        /** @type {?} */\n        const isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = `c${_renderCompCount++}`;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    /** @type {?} */\n    const oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    /** @type {?} */\n    const oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        /** @type {?} */\n        const bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), `${bindingName}: ${oldValue}`, `${bindingName}: ${value}`, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    /** @type {?} */\n    let currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    /** @type {?} */\n    let currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[nodeIndex];\n        /** @type {?} */\n        const startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        /** @type {?} */\n        const parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    /** @type {?} */\n    const parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? `${target}:${name}` : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    /** @type {?} */\n    const matchedQueries = {};\n    /** @type {?} */\n    let matchedQueryIds = 0;\n    /** @type {?} */\n    const references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(([queryId, valueType]) => {\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries, references, matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(value => {\n        /** @type {?} */\n        let token;\n        /** @type {?} */\n        let flags;\n        if (Array.isArray(value)) {\n            [flags, token] = value;\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags, token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    /** @type {?} */\n    let renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\n/** @type {?} */\nconst DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    /** @type {?} */\n    let value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(() => NOOP);\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    /** @type {?} */\n    const renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (let i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    /** @type {?} */\n    let compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    /** @type {?} */\n    const hostView = /** @type {?} */ ((compView)).parent;\n    /** @type {?} */\n    const hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    /** @type {?} */\n    const startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    /** @type {?} */\n    const endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (let i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        const nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        /** @type {?} */\n        const projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (let i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        /** @type {?} */\n        const rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                /** @type {?} */\n                const compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            /** @type {?} */\n            const embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (let k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    /** @type {?} */\n    const renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\n/** @type {?} */\nconst NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        /** @type {?} */\n        const match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    /** @type {?} */\n    let flags = 0;\n    for (let i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    /** @type {?} */\n    let result = '';\n    for (let i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(`Does not support more than 9 expressions`);\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\n/** @type {?} */\nconst EMPTY_ARRAY$2 = [];\n/** @type {?} */\nconst EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    /** @type {?} */\n    const template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs = [], bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    /** @type {?} */\n    let ns = /** @type {?} */ ((null));\n    /** @type {?} */\n    let name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        [ns, name] = splitNamespace(namespaceAndName);\n    }\n    bindings = bindings || [];\n    /** @type {?} */\n    const bindingDefs = new Array(bindings.length);\n    for (let i = 0; i < bindings.length; i++) {\n        const [bindingFlags, namespaceAndName, suffixOrSecurityContext] = bindings[i];\n        const [ns, name] = splitNamespace(namespaceAndName);\n        /** @type {?} */\n        let securityContext = /** @type {?} */ ((undefined));\n        /** @type {?} */\n        let suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns, name, nonMinifiedName: name, securityContext, suffix };\n    }\n    outputs = outputs || [];\n    /** @type {?} */\n    const outputDefs = new Array(outputs.length);\n    for (let i = 0; i < outputs.length; i++) {\n        const [target, eventName] = outputs[i];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    /** @type {?} */\n    const attrs = /** @type {?} */ (fixedAttrs.map(([namespaceAndName, value]) => {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries, matchedQueryIds, references, ngContentIndex, childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns,\n            name,\n            attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    /** @type {?} */\n    const elDef = /** @type {?} */ ((def.element));\n    /** @type {?} */\n    const rootSelectorOrNode = view.root.selectorOrNode;\n    /** @type {?} */\n    const renderer = view.renderer;\n    /** @type {?} */\n    let el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        /** @type {?} */\n        const parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (let i = 0; i < elDef.attrs.length; i++) {\n            const [ns, name, value] = elDef.attrs[i];\n            renderer.setAttribute(el, name, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (let i = 0; i < def.outputs.length; i++) {\n        /** @type {?} */\n        const output = def.outputs[i];\n        /** @type {?} */\n        const handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        /** @type {?} */\n        let listenTarget = output.target;\n        /** @type {?} */\n        let listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        /** @type {?} */\n        const disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return (event) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const bindLen = def.bindings.length;\n    /** @type {?} */\n    let changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    /** @type {?} */\n    let changed = false;\n    for (let i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    /** @type {?} */\n    const binding = def.bindings[bindingIdx];\n    /** @type {?} */\n    const elData = asElementData(view, def.nodeIndex);\n    /** @type {?} */\n    const renderNode$$1 = elData.renderElement;\n    /** @type {?} */\n    const name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            /** @type {?} */\n            const bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    /** @type {?} */\n    const securityContext = binding.securityContext;\n    /** @type {?} */\n    let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    /** @type {?} */\n    const renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    /** @type {?} */\n    const renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    /** @type {?} */\n    let renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        /** @type {?} */\n        const unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    /** @type {?} */\n    const renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    /** @type {?} */\n    const securityContext = binding.securityContext;\n    /** @type {?} */\n    let renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst UNDEFINED_VALUE = new Object();\n/** @type {?} */\nconst InjectorRefTokenKey = tokenKey(Injector);\n/** @type {?} */\nconst INJECTORRefTokenKey = tokenKey(INJECTOR);\n/** @type {?} */\nconst NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    /** @type {?} */\n    const depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags, token, value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    /** @type {?} */\n    const providersByKey = {};\n    /** @type {?} */\n    const modules = [];\n    /** @type {?} */\n    let isRoot = false;\n    for (let i = 0; i < providers.length; i++) {\n        /** @type {?} */\n        const provider = providers[i];\n        if (provider.token === APP_ROOT && provider.value === true) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey,\n        providers,\n        modules,\n        isRoot,\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    /** @type {?} */\n    const def = data._def;\n    /** @type {?} */\n    const providers = data._providers = new Array(def.providers.length);\n    for (let i = 0; i < def.providers.length; i++) {\n        /** @type {?} */\n        const provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            // Make sure the provider has not been already initialized outside this loop.\n            if (providers[i] === undefined) {\n                providers[i] = _createProviderInstance(data, provDef);\n            }\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    /** @type {?} */\n    const former = setCurrentInjector(data);\n    try {\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        if (depDef.flags & 1 /* SkipSelf */) {\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        /** @type {?} */\n        const tokenKey$$1 = depDef.tokenKey;\n        switch (tokenKey$$1) {\n            case InjectorRefTokenKey:\n            case INJECTORRefTokenKey:\n            case NgModuleRefTokenKey:\n                return data;\n        }\n        /** @type {?} */\n        const providerDef = data._def.providersByKey[tokenKey$$1];\n        if (providerDef) {\n            /** @type {?} */\n            let providerInstance = data._providers[providerDef.index];\n            if (providerInstance === undefined) {\n                providerInstance = data._providers[providerDef.index] =\n                    _createProviderInstance(data, providerDef);\n            }\n            return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n        }\n        else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n            /** @type {?} */\n            const injectableDef = /** @type {?} */ (depDef.token.ngInjectableDef);\n            /** @type {?} */\n            const index = data._providers.length;\n            data._def.providersByKey[depDef.tokenKey] = {\n                flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                value: injectableDef.factory,\n                deps: [], index,\n                token: depDef.token,\n            };\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        else if (depDef.flags & 4 /* Self */) {\n            return notFoundValue;\n        }\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    finally {\n        setCurrentInjector(former);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} scope\n * @return {?}\n */\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\n/**\n * @param {?} ngModule\n * @param {?} def\n * @return {?}\n */\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance(ngModule, providerDef) {\n    /** @type {?} */\n    let injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n    // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n    // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n    // set (ngOnDestroy was detected statically).\n    if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n        !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n        providerDef.flags |= 131072 /* OnDestroy */;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    /** @type {?} */\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            /** @type {?} */\n            const depValues = new Array(len);\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new ctor(...depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    /** @type {?} */\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            /** @type {?} */\n            const depValues = Array(len);\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory(...depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    /** @type {?} */\n    const def = ngModule._def;\n    /** @type {?} */\n    const destroyed = new Set();\n    for (let i = 0; i < def.providers.length; i++) {\n        /** @type {?} */\n        const provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            /** @type {?} */\n            const instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                /** @type {?} */\n                const onDestroy = instance.ngOnDestroy;\n                if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                    onDestroy.apply(instance);\n                    destroyed.add(instance);\n                }\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    /** @type {?} */\n    let embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    /** @type {?} */\n    const prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    /** @type {?} */\n    const dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    /** @type {?} */\n    let projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    /** @type {?} */\n    let parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    /** @type {?} */\n    const embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    /** @type {?} */\n    const view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    /** @type {?} */\n    const dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        /** @type {?} */\n        const projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    /** @type {?} */\n    const embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    /** @type {?} */\n    const view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    /** @type {?} */\n    const prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    /** @type {?} */\n    const prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    /** @type {?} */\n    const parentNode = view.renderer.parentNode(prevRenderNode);\n    /** @type {?} */\n    const nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nclass ComponentFactory_ extends ComponentFactory {\n    /**\n     * @param {?} selector\n     * @param {?} componentType\n     * @param {?} viewDefFactory\n     * @param {?} _inputs\n     * @param {?} _outputs\n     * @param {?} ngContentSelectors\n     */\n    constructor(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        super();\n        this.selector = selector;\n        this.componentType = componentType;\n        this._inputs = _inputs;\n        this._outputs = _outputs;\n        this.ngContentSelectors = ngContentSelectors;\n        this.viewDefFactory = viewDefFactory;\n    }\n    /**\n     * @return {?}\n     */\n    get inputs() {\n        /** @type {?} */\n        const inputsArr = [];\n        /** @type {?} */\n        const inputs = /** @type {?} */ ((this._inputs));\n        for (let propName in inputs) {\n            /** @type {?} */\n            const templateName = inputs[propName];\n            inputsArr.push({ propName, templateName });\n        }\n        return inputsArr;\n    }\n    /**\n     * @return {?}\n     */\n    get outputs() {\n        /** @type {?} */\n        const outputsArr = [];\n        for (let propName in this._outputs) {\n            /** @type {?} */\n            const templateName = this._outputs[propName];\n            outputsArr.push({ propName, templateName });\n        }\n        return outputsArr;\n    }\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        /** @type {?} */\n        const viewDef = resolveDefinition(this.viewDefFactory);\n        /** @type {?} */\n        const componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        /** @type {?} */\n        const view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        /** @type {?} */\n        const component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    }\n}\nclass ComponentRef_ extends ComponentRef {\n    /**\n     * @param {?} _view\n     * @param {?} _viewRef\n     * @param {?} _component\n     */\n    constructor(_view, _viewRef, _component) {\n        super();\n        this._view = _view;\n        this._viewRef = _viewRef;\n        this._component = _component;\n        this._elDef = this._view.def.nodes[0];\n        this.hostView = _viewRef;\n        this.changeDetectorRef = _viewRef;\n        this.instance = _component;\n    }\n    /**\n     * @return {?}\n     */\n    get location() {\n        return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return new Injector_(this._view, this._elDef); }\n    /**\n     * @return {?}\n     */\n    get componentType() { return /** @type {?} */ (this._component.constructor); }\n    /**\n     * @return {?}\n     */\n    destroy() { this._viewRef.destroy(); }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { this._viewRef.onDestroy(callback); }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nclass ViewContainerRef_ {\n    /**\n     * @param {?} _view\n     * @param {?} _elDef\n     * @param {?} _data\n     */\n    constructor(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    /**\n     * @return {?}\n     */\n    get element() { return new ElementRef(this._data.renderElement); }\n    /**\n     * @return {?}\n     */\n    get injector() { return new Injector_(this._view, this._elDef); }\n    /**\n     * @return {?}\n     */\n    get parentInjector() {\n        /** @type {?} */\n        let view = this._view;\n        /** @type {?} */\n        let elDef = this._elDef.parent;\n        while (!elDef && view) {\n            elDef = viewParentEl(view);\n            view = /** @type {?} */ ((view.parent));\n        }\n        return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        /** @type {?} */\n        const len = this._embeddedViews.length;\n        for (let i = len - 1; i >= 0; i--) {\n            /** @type {?} */\n            const view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    get(index) {\n        /** @type {?} */\n        const view = this._embeddedViews[index];\n        if (view) {\n            /** @type {?} */\n            const ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    get length() { return this._embeddedViews.length; }\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    createEmbeddedView(templateRef, context, index) {\n        /** @type {?} */\n        const viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    }\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        /** @type {?} */\n        const contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        /** @type {?} */\n        const componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    insert(viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        const viewRef_ = /** @type {?} */ (viewRef);\n        /** @type {?} */\n        const viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    move(viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        const previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    indexOf(viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    remove(index) {\n        /** @type {?} */\n        const viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    detach(index) {\n        /** @type {?} */\n        const view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nclass ViewRef_ {\n    /**\n     * @param {?} _view\n     */\n    constructor(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    /**\n     * @return {?}\n     */\n    get rootNodes() { return rootRenderNodes(this._view); }\n    /**\n     * @return {?}\n     */\n    get context() { return this._view.context; }\n    /**\n     * @return {?}\n     */\n    get destroyed() { return (this._view.state & 128 /* Destroyed */) !== 0; }\n    /**\n     * @return {?}\n     */\n    markForCheck() { markParentViewsForCheck(this._view); }\n    /**\n     * @return {?}\n     */\n    detach() { this._view.state &= ~4 /* Attached */; }\n    /**\n     * @return {?}\n     */\n    detectChanges() {\n        /** @type {?} */\n        const fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    checkNoChanges() { Services.checkNoChangesView(this._view); }\n    /**\n     * @return {?}\n     */\n    reattach() { this._view.state |= 4 /* Attached */; }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    }\n    /**\n     * @return {?}\n     */\n    detachFromAppRef() {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    }\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    attachToAppRef(appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    }\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    attachToViewContainerRef(vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nclass TemplateRef_ extends TemplateRef {\n    /**\n     * @param {?} _parentView\n     * @param {?} _def\n     */\n    constructor(_parentView, _def) {\n        super();\n        this._parentView = _parentView;\n        this._def = _def;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    createEmbeddedView(context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    }\n    /**\n     * @return {?}\n     */\n    get elementRef() {\n        return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nclass Injector_ {\n    /**\n     * @param {?} view\n     * @param {?} elDef\n     */\n    constructor(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n        /** @type {?} */\n        const allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token, tokenKey: tokenKey(token) }, notFoundValue);\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    /** @type {?} */\n    const def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        /** @type {?} */\n        const elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(`Illegal state: read nodeValue for node index ${index}`);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nclass RendererAdapter {\n    /**\n     * @param {?} delegate\n     */\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    selectRootElement(selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    createElement(parent, namespaceAndName) {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        /** @type {?} */\n        const el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    }\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    createViewRoot(hostElement) { return hostElement; }\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    createTemplateAnchor(parentElement) {\n        /** @type {?} */\n        const comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    }\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    createText(parentElement, value) {\n        /** @type {?} */\n        const node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    }\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    projectNodes(parentElement, nodes) {\n        for (let i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    }\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    attachViewAfter(node, viewRootNodes) {\n        /** @type {?} */\n        const parentElement = this.delegate.parentNode(node);\n        /** @type {?} */\n        const nextSibling = this.delegate.nextSibling(node);\n        for (let i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    }\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    detachView(viewRootNodes) {\n        for (let i = 0; i < viewRootNodes.length; i++) {\n            /** @type {?} */\n            const node = viewRootNodes[i];\n            /** @type {?} */\n            const parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    }\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    destroyView(hostElement, viewAllNodes) {\n        for (let i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    listen(renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    }\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    listenGlobal(target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    setElementProperty(renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    setElementAttribute(renderElement, namespaceAndName, attributeValue) {\n        const [ns, name] = splitNamespace(namespaceAndName);\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    setBindingDebugInfo(renderElement, propertyName, propertyValue) { }\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    setElementClass(renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    setElementStyle(renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    }\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    invokeElementMethod(renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    }\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    setText(renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); }\n    /**\n     * @return {?}\n     */\n    animate() { throw new Error('Renderer.animate is no longer supported!'); }\n}\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nclass NgModuleRef_ {\n    /**\n     * @param {?} _moduleType\n     * @param {?} _parent\n     * @param {?} _bootstrapComponents\n     * @param {?} _def\n     */\n    constructor(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @param {?=} injectFlags\n     * @return {?}\n     */\n    get(token, notFoundValue = Injector.THROW_IF_NOT_FOUND, injectFlags = 0 /* Default */) {\n        /** @type {?} */\n        let flags = 0 /* None */;\n        if (injectFlags & 4 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    }\n    /**\n     * @return {?}\n     */\n    get instance() { return this.get(this._moduleType); }\n    /**\n     * @return {?}\n     */\n    get componentFactoryResolver() { return this.get(ComponentFactoryResolver); }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        if (this._destroyed) {\n            throw new Error(`The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach((listener) => listener());\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { this._destroyListeners.push(callback); }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RendererV1TokenKey = tokenKey(Renderer);\n/** @type {?} */\nconst Renderer2TokenKey = tokenKey(Renderer2);\n/** @type {?} */\nconst ElementRefTokenKey = tokenKey(ElementRef);\n/** @type {?} */\nconst ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n/** @type {?} */\nconst TemplateRefTokenKey = tokenKey(TemplateRef);\n/** @type {?} */\nconst ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n/** @type {?} */\nconst InjectorRefTokenKey$1 = tokenKey(Injector);\n/** @type {?} */\nconst INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    /** @type {?} */\n    const bindings = [];\n    if (props) {\n        for (let prop in props) {\n            const [bindingIndex, nonMinifiedName] = props[prop];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    /** @type {?} */\n    const outputDefs = [];\n    if (outputs) {\n        for (let propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    const { matchedQueries, references, matchedQueryIds } = splitMatchedQueriesDsl(matchedQueriesDsl);\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    /** @type {?} */\n    const depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries, matchedQueryIds, references,\n        ngContentIndex: -1, childCount, bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs,\n        element: null,\n        provider: { token, value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance$1(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    /** @type {?} */\n    let compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    /** @type {?} */\n    const allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    /** @type {?} */\n    const allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    /** @type {?} */\n    const instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (let i = 0; i < def.outputs.length; i++) {\n            /** @type {?} */\n            const output = def.outputs[i];\n            /** @type {?} */\n            const subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return (event) => dispatchEvent(view, index, eventName, event);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const providerData = asProviderData(view, def.nodeIndex);\n    /** @type {?} */\n    const directive = providerData.instance;\n    /** @type {?} */\n    let changed = false;\n    /** @type {?} */\n    let changes = /** @type {?} */ ((undefined));\n    /** @type {?} */\n    const bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    /** @type {?} */\n    const providerData = asProviderData(view, def.nodeIndex);\n    /** @type {?} */\n    const directive = providerData.instance;\n    /** @type {?} */\n    let changed = false;\n    /** @type {?} */\n    let changes = /** @type {?} */ ((undefined));\n    for (let i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance$1(view, def) {\n    /** @type {?} */\n    const allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    /** @type {?} */\n    const providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    /** @type {?} */\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            /** @type {?} */\n            const depValues = new Array(len);\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new ctor(...depValues);\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    /** @type {?} */\n    const len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            /** @type {?} */\n            const depValues = Array(len);\n            for (let i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory(...depValues);\n    }\n}\n/** @type {?} */\nconst NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue = Injector.THROW_IF_NOT_FOUND) {\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    /** @type {?} */\n    const startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    /** @type {?} */\n    const tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    /** @type {?} */\n    let searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    /** @type {?} */\n                    const compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    /** @type {?} */\n                    const compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    /** @type {?} */\n                    let cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey$1:\n                case INJECTORRefTokenKey$1:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    /** @type {?} */\n                    const providerDef = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef) {\n                        /** @type {?} */\n                        let providerData = asProviderData(searchView, providerDef.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance$1(searchView, providerDef) };\n                            searchView.nodes[providerDef.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = /** @type {?} */ ((viewParentEl(searchView)));\n        searchView = /** @type {?} */ ((searchView.parent));\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    /** @type {?} */\n    const value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    /** @type {?} */\n    let compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        /** @type {?} */\n        const compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    /** @type {?} */\n    const binding = def.bindings[bindingIdx];\n    /** @type {?} */\n    const propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        /** @type {?} */\n        const oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        /** @type {?} */\n        const binding = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    /** @type {?} */\n    const nodes = view.def.nodes;\n    /** @type {?} */\n    let initIndex = 0;\n    for (let i = 0; i < nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = nodes[i];\n        /** @type {?} */\n        let parent = nodeDef.parent;\n        if (!parent && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent && (parent.flags & 1 /* TypeElement */) &&\n            i === parent.nodeIndex + parent.childCount) {\n            // last child of an element\n            if (parent.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent, lifecycles, initIndex);\n            }\n            parent = parent.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (let i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    /** @type {?} */\n    const providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    /** @type {?} */\n    const provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    /** @type {?} */\n    let bindingDefs = [];\n    for (let propName in bindings) {\n        /** @type {?} */\n        const bindingType = bindings[propName];\n        bindingDefs.push({ propName, bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    /** @type {?} */\n    const queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        /** @type {?} */\n        let tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        /** @type {?} */\n        const end = tplDef.nodeIndex + tplDef.childCount;\n        for (let i = 0; i <= end; i++) {\n            /** @type {?} */\n            const nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (let i = 0; i < view.def.nodes.length; i++) {\n            /** @type {?} */\n            const nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    /** @type {?} */\n    const queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    /** @type {?} */\n    let directiveInstance;\n    /** @type {?} */\n    let newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        /** @type {?} */\n        const elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    /** @type {?} */\n    const bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    /** @type {?} */\n    let notify = false;\n    for (let i = 0; i < bindings.length; i++) {\n        /** @type {?} */\n        const binding = bindings[i];\n        /** @type {?} */\n        let boundValue;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (let i = startIndex; i <= endIndex; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        /** @type {?} */\n        const valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            /** @type {?} */\n            const elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                /** @type {?} */\n                const embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (let k = 0; k < embeddedViews.length; k++) {\n                    /** @type {?} */\n                    const embeddedView = embeddedViews[k];\n                    /** @type {?} */\n                    const dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            /** @type {?} */\n            const projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (let k = 0; k < projectedViews.length; k++) {\n                    /** @type {?} */\n                    const projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    /** @type {?} */\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    /** @type {?} */\n    const ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n    /** @type {?} */\n    const keys = Object.keys(propToIndex);\n    /** @type {?} */\n    const nbKeys = keys.length;\n    /** @type {?} */\n    const propertyNames = new Array(nbKeys);\n    for (let i = 0; i < nbKeys; i++) {\n        /** @type {?} */\n        const key = keys[i];\n        /** @type {?} */\n        const index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    /** @type {?} */\n    const bindings = new Array(propertyNames.length);\n    for (let i = 0; i < propertyNames.length; i++) {\n        /** @type {?} */\n        const prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const bindings = def.bindings;\n    /** @type {?} */\n    let changed = false;\n    /** @type {?} */\n    const bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        /** @type {?} */\n        const data = asPureExpressionData(view, def.nodeIndex);\n        /** @type {?} */\n        let value;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                /** @type {?} */\n                const pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    /** @type {?} */\n    const bindings = def.bindings;\n    /** @type {?} */\n    let changed = false;\n    for (let i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        /** @type {?} */\n        const data = asPureExpressionData(view, def.nodeIndex);\n        /** @type {?} */\n        let value;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (let i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                /** @type {?} */\n                const pipe = values[0];\n                /** @type {?} */\n                const params = values.slice(1);\n                value = (/** @type {?} */ (pipe.transform))(...params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    /** @type {?} */\n    const bindings = new Array(staticText.length - 1);\n    for (let i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex,\n        childCount: 0, bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    /** @type {?} */\n    let renderNode$$1;\n    /** @type {?} */\n    const renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    /** @type {?} */\n    const parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    let changed = false;\n    /** @type {?} */\n    const bindings = def.bindings;\n    /** @type {?} */\n    const bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        /** @type {?} */\n        let value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        /** @type {?} */\n        const renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    /** @type {?} */\n    const bindings = def.bindings;\n    /** @type {?} */\n    let changed = false;\n    for (let i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        /** @type {?} */\n        let value = '';\n        for (let i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        /** @type {?} */\n        const renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    /** @type {?} */\n    const valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    /** @type {?} */\n    let viewBindingCount = 0;\n    /** @type {?} */\n    let viewDisposableCount = 0;\n    /** @type {?} */\n    let viewNodeFlags = 0;\n    /** @type {?} */\n    let viewRootNodeFlags = 0;\n    /** @type {?} */\n    let viewMatchedQueries = 0;\n    /** @type {?} */\n    let currentParent = null;\n    /** @type {?} */\n    let currentRenderParent = null;\n    /** @type {?} */\n    let currentElementHasPublicProviders = false;\n    /** @type {?} */\n    let currentElementHasPrivateProviders = false;\n    /** @type {?} */\n    let lastRenderRootNode = null;\n    for (let i = 0; i < nodes.length; i++) {\n        /** @type {?} */\n        const node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            /** @type {?} */\n            const elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            /** @type {?} */\n            const isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            /** @type {?} */\n            const isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                /** @type {?} */\n                const newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    /** @type {?} */\n    const handleEvent = (view, nodeIndex, eventName, event) => /** @type {?} */ ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event);\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    /** @type {?} */\n    const template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(`Illegal State: Embedded templates without nodes are not allowed!`);\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(`Illegal State: Last root node of a template can't have embedded views, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        /** @type {?} */\n        const parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(`Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(`Illegal State: Content Query nodes need to be children of directives, at index ${node.nodeIndex}!`);\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(`Illegal State: View Query nodes have to be top level nodes, at index ${node.nodeIndex}!`);\n        }\n    }\n    if (node.childCount) {\n        /** @type {?} */\n        const parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(`Illegal State: childCount of node leads outside of parent, at index ${node.nodeIndex}!`);\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    /** @type {?} */\n    const view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    /** @type {?} */\n    const view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    /** @type {?} */\n    const rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    /** @type {?} */\n    let compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    /** @type {?} */\n    const nodes = new Array(def.nodes.length);\n    /** @type {?} */\n    const disposables = def.outputCount ? new Array(def.outputCount) : null;\n    /** @type {?} */\n    const view = {\n        def,\n        parent,\n        viewContainerParent: null, parentNodeDef,\n        context: null,\n        component: null, nodes,\n        state: 13 /* CatInit */, root, renderer,\n        oldValues: new Array(def.bindingCount), disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    /** @type {?} */\n    let renderHost;\n    if (isComponentView(view)) {\n        /** @type {?} */\n        const hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    /** @type {?} */\n    const def = view.def;\n    /** @type {?} */\n    const nodes = view.nodes;\n    for (let i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        /** @type {?} */\n        let nodeData;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                /** @type {?} */\n                const el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                /** @type {?} */\n                let componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    /** @type {?} */\n                    const compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    /** @type {?} */\n                    const instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                /** @type {?} */\n                const instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    /** @type {?} */\n                    const instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    /** @type {?} */\n                    const compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    /** @type {?} */\n    let callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    /** @type {?} */\n    const def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (let i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            /** @type {?} */\n            const projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (let i = 0; i < projectedViews.length; i++) {\n                    /** @type {?} */\n                    const projectedView = projectedViews[i];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (let i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    /** @type {?} */\n    const queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), `Query ${(/** @type {?} */ ((nodeDef.query))).id} not dirty`, `Query ${(/** @type {?} */ ((nodeDef.query))).id} dirty`, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (let i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    /** @type {?} */\n    const len = view.def.nodes.length;\n    for (let i = 0; i < len; i++) {\n        /** @type {?} */\n        const def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nconst ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = 'CreateViewNodes';\nViewAction[ViewAction.CheckNoChanges] = 'CheckNoChanges';\nViewAction[ViewAction.CheckNoChangesProjectedViews] = 'CheckNoChangesProjectedViews';\nViewAction[ViewAction.CheckAndUpdate] = 'CheckAndUpdate';\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = 'CheckAndUpdateProjectedViews';\nViewAction[ViewAction.Destroy] = 'Destroy';\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    /** @type {?} */\n    const def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (let i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    /** @type {?} */\n    const def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (let i = 0; i < def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            /** @type {?} */\n            const embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (let k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    /** @type {?} */\n    const viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    /** @type {?} */\n    const nodeCount = view.def.nodes.length;\n    for (let i = 0; i < nodeCount; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    /** @type {?} */\n    const services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: () => { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n        handleEvent: (view, nodeIndex, eventName, event) => view.def.handleEvent(view, nodeIndex, eventName, event),\n        updateDirectives: (view, checkType) => view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view),\n        updateRenderer: (view, checkType) => view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n            prodCheckNoChangesNode, view),\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: (view, nodeIndex) => new DebugContext_(view, nodeIndex),\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    /** @type {?} */\n    const rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    /** @type {?} */\n    const rendererFactory = ngModule.injector.get(RendererFactory2);\n    /** @type {?} */\n    const root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    /** @type {?} */\n    const defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    /** @type {?} */\n    const sanitizer = ngModule.injector.get(Sanitizer);\n    /** @type {?} */\n    const errorHandler = ngModule.injector.get(ErrorHandler);\n    /** @type {?} */\n    const renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule,\n        injector: elInjector, projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer, rendererFactory, renderer, errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    /** @type {?} */\n    const defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    /** @type {?} */\n    const overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    /** @type {?} */\n    const defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\n/** @type {?} */\nconst providerOverrides = new Map();\n/** @type {?} */\nconst providerOverridesWithScope = new Map();\n/** @type {?} */\nconst viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(/** @type {?} */ (override.token), override);\n    }\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    /** @type {?} */\n    const hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    /** @type {?} */\n    const compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    /** @type {?} */\n    const elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(() => NOOP);\n    for (let i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        /** @type {?} */\n        const elIndicesWithOverwrittenProviders = [];\n        /** @type {?} */\n        let lastElementDef = null;\n        for (let i = 0; i < def.nodes.length; i++) {\n            /** @type {?} */\n            const nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (let i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            /** @type {?} */\n            const nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                /** @type {?} */\n                const provider = /** @type {?} */ ((nodeDef.provider));\n                /** @type {?} */\n                const override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    const { hasOverrides, hasDeprecatedOverrides } = calcHasOverrides(def);\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(() => NOOP);\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        /** @type {?} */\n        let hasOverrides = false;\n        /** @type {?} */\n        let hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides, hasDeprecatedOverrides };\n        }\n        def.providers.forEach(node => {\n            /** @type {?} */\n            const override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(module => {\n            providerOverridesWithScope.forEach((override, token) => {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides, hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (let i = 0; i < def.providers.length; i++) {\n            /** @type {?} */\n            const provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            /** @type {?} */\n            const override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            /** @type {?} */\n            let moduleSet = new Set(def.modules);\n            providerOverridesWithScope.forEach((override, token) => {\n                if (moduleSet.has(token.ngInjectableDef.providedIn)) {\n                    /** @type {?} */\n                    let provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    /** @type {?} */\n    const nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nconst DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = 'create';\nDebugAction[DebugAction.detectChanges] = 'detectChanges';\nDebugAction[DebugAction.checkNoChanges] = 'checkNoChanges';\nDebugAction[DebugAction.destroy] = 'destroy';\nDebugAction[DebugAction.handleEvent] = 'handleEvent';\n/** @type {?} */\nlet _currentAction;\n/** @type {?} */\nlet _currentView;\n/** @type {?} */\nlet _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle, ...values) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle, ...values) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    /** @type {?} */\n    const changed = (/** @type {?} */ (checkAndUpdateNode))(view, nodeDef, argStyle, ...givenValues);\n    if (changed) {\n        /** @type {?} */\n        const values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            /** @type {?} */\n            const bindingValues = {};\n            for (let i = 0; i < nodeDef.bindings.length; i++) {\n                /** @type {?} */\n                const binding = nodeDef.bindings[i];\n                /** @type {?} */\n                const value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            /** @type {?} */\n            const elDef = /** @type {?} */ ((nodeDef.parent));\n            /** @type {?} */\n            const el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, `bindings=${JSON.stringify(bindingValues, null, 2)}`);\n            }\n            else {\n                // a regular element.\n                for (let attr in bindingValues) {\n                    /** @type {?} */\n                    const value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode))(view, nodeDef, argStyle, ...values);\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return `ng-reflect-${name}`;\n}\n/** @type {?} */\nconst CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, (...m) => '-' + m[1].toLowerCase());\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (let i = nodeIndex; i < view.def.nodes.length; i++) {\n        /** @type {?} */\n        const nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nclass DebugContext_ {\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     */\n    constructor(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        /** @type {?} */\n        let elDef = this.nodeDef;\n        /** @type {?} */\n        let elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    /**\n     * @return {?}\n     */\n    get elOrCompView() {\n        // Has to be done lazily as we use the DebugContext also during creation of elements...\n        return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n    }\n    /**\n     * @return {?}\n     */\n    get injector() { return createInjector$1(this.elView, this.elDef); }\n    /**\n     * @return {?}\n     */\n    get component() { return this.elOrCompView.component; }\n    /**\n     * @return {?}\n     */\n    get context() { return this.elOrCompView.context; }\n    /**\n     * @return {?}\n     */\n    get providerTokens() {\n        /** @type {?} */\n        const tokens = [];\n        if (this.elDef) {\n            for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                /** @type {?} */\n                const childDef = this.elView.def.nodes[i];\n                if (childDef.flags & 20224 /* CatProvider */) {\n                    tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                }\n                i += childDef.childCount;\n            }\n        }\n        return tokens;\n    }\n    /**\n     * @return {?}\n     */\n    get references() {\n        /** @type {?} */\n        const references = {};\n        if (this.elDef) {\n            collectReferences(this.elView, this.elDef, references);\n            for (let i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                /** @type {?} */\n                const childDef = this.elView.def.nodes[i];\n                if (childDef.flags & 20224 /* CatProvider */) {\n                    collectReferences(this.elView, childDef, references);\n                }\n                i += childDef.childCount;\n            }\n        }\n        return references;\n    }\n    /**\n     * @return {?}\n     */\n    get componentRenderElement() {\n        /** @type {?} */\n        const elData = findHostElement(this.elOrCompView);\n        return elData ? elData.renderElement : undefined;\n    }\n    /**\n     * @return {?}\n     */\n    get renderNode() {\n        return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n            renderNode(this.elView, this.elDef);\n    }\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    logError(console, ...values) {\n        /** @type {?} */\n        let logViewDef;\n        /** @type {?} */\n        let logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        /** @type {?} */\n        const renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        /** @type {?} */\n        let currRenderNodeIndex = -1;\n        /** @type {?} */\n        let nodeLogger = () => {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return console.error.bind(console, ...values);\n            }\n            else {\n                return NOOP;\n            }\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            (/** @type {?} */ (console.error))(...values);\n        }\n    }\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    /** @type {?} */\n    let renderNodeIndex = -1;\n    for (let i = 0; i <= nodeIndex; i++) {\n        /** @type {?} */\n        const nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (let refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    /** @type {?} */\n    const oldAction = _currentAction;\n    /** @type {?} */\n    const oldView = _currentView;\n    /** @type {?} */\n    const oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        /** @type {?} */\n        const result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nclass DebugRendererFactory2 {\n    /**\n     * @param {?} delegate\n     */\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    createRenderer(element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    }\n    /**\n     * @return {?}\n     */\n    begin() {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    end() {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    whenRenderingDone() {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    }\n}\nclass DebugRenderer2 {\n    /**\n     * @param {?} delegate\n     */\n    constructor(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    destroyNode(node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    destroy() { this.delegate.destroy(); }\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    createElement(name, namespace) {\n        /** @type {?} */\n        const el = this.delegate.createElement(name, namespace);\n        /** @type {?} */\n        const debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            /** @type {?} */\n            const debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    createComment(value) {\n        /** @type {?} */\n        const comment = this.delegate.createComment(value);\n        /** @type {?} */\n        const debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    createText(value) {\n        /** @type {?} */\n        const text = this.delegate.createText(value);\n        /** @type {?} */\n        const debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    appendChild(parent, newChild) {\n        /** @type {?} */\n        const debugEl = getDebugNode(parent);\n        /** @type {?} */\n        const debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    insertBefore(parent, newChild, refChild) {\n        /** @type {?} */\n        const debugEl = getDebugNode(parent);\n        /** @type {?} */\n        const debugChildEl = getDebugNode(newChild);\n        /** @type {?} */\n        const debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    removeChild(parent, oldChild) {\n        /** @type {?} */\n        const debugEl = getDebugNode(parent);\n        /** @type {?} */\n        const debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    selectRootElement(selectorOrNode) {\n        /** @type {?} */\n        const el = this.delegate.selectRootElement(selectorOrNode);\n        /** @type {?} */\n        const debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    setAttribute(el, name, value, namespace) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            /** @type {?} */\n            const fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    removeAttribute(el, name, namespace) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            /** @type {?} */\n            const fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    addClass(el, name) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    removeClass(el, name) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    setStyle(el, style, value, flags) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    removeStyle(el, style, flags) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setProperty(el, name, value) {\n        /** @type {?} */\n        const debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    }\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    listen(target, eventName, callback) {\n        if (typeof target !== 'string') {\n            /** @type {?} */\n            const debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    parentNode(node) { return this.delegate.parentNode(node); }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    nextSibling(node) { return this.delegate.nextSibling(node); }\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(node, value) { return this.delegate.setValue(node, value); }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction cloneNgModuleDefinition(def) {\n    /** @type {?} */\n    const providers = Array.from(def.providers);\n    /** @type {?} */\n    const modules = Array.from(def.modules);\n    /** @type {?} */\n    const providersByKey = {};\n    for (const key in def.providersByKey) {\n        providersByKey[key] = def.providersByKey[key];\n    }\n    return {\n        factory: def.factory,\n        isRoot: def.isRoot, providers, modules, providersByKey,\n    };\n}\nclass NgModuleFactory_ extends NgModuleFactory {\n    /**\n     * @param {?} moduleType\n     * @param {?} _bootstrapComponents\n     * @param {?} _ngModuleDefFactory\n     */\n    constructor(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        super();\n        this.moduleType = moduleType;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._ngModuleDefFactory = _ngModuleDefFactory;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    create(parentInjector) {\n        initServicesIfNeeded();\n        /** @type {?} */\n        const def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} expected\n * @param {?} msg\n * @return {?}\n */\nfunction assertGreaterThan(actual, expected, msg) {\n    if (actual <= expected) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nfunction assertNotDefined(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\n/**\n * @template T\n * @param {?} actual\n * @param {?} msg\n * @return {?}\n */\nfunction assertDefined(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\n/**\n * @param {?} actual\n * @param {?=} msg\n * @return {?}\n */\nfunction assertComponentType(actual, msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.') {\n    if (!actual.ngComponentDef) {\n        debugger;\n        throwError(msg);\n    }\n}\n/**\n * @param {?} msg\n * @return {?}\n */\nfunction throwError(msg) {\n    debugger; // Left intentionally for better debugger experience.\n    throw new Error(`ASSERTION ERROR: ${msg}`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * Size of LViewData's header. Necessary to adjust for it when setting slots.\n  @type {?} */\nconst HEADER_OFFSET = 16;\n/** @type {?} */\nconst TVIEW = 0;\n/** @type {?} */\nconst PARENT = 1;\n/** @type {?} */\nconst NEXT = 2;\n/** @type {?} */\nconst QUERIES = 3;\n/** @type {?} */\nconst FLAGS = 4;\n/** @type {?} */\nconst HOST_NODE = 5;\n/** @type {?} */\nconst BINDING_INDEX = 6;\n/** @type {?} */\nconst DIRECTIVES = 7;\n/** @type {?} */\nconst CLEANUP = 8;\n/** @type {?} */\nconst CONTEXT = 9;\n/** @type {?} */\nconst INJECTOR$1 = 10;\n/** @type {?} */\nconst RENDERER = 11;\n/** @type {?} */\nconst SANITIZER = 12;\n/** @type {?} */\nconst TAIL = 13;\n/** @type {?} */\nconst CONTAINER_INDEX = 14;\n/** @type {?} */\nconst CONTENT_QUERIES = 15;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param {?} index The index of the directive in LViewData[DIRECTIVES]\n * @param {?} onInit\n * @param {?} doCheck\n * @param {?} tView The current TView\n * @return {?}\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n * @param {?} flags\n * @param {?} tView\n * @return {?}\n */\nfunction queueLifecycleHooks(flags, tView) {\n    if (tView.firstTemplatePass) {\n        /** @type {?} */\n        const start = flags >> 14 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        const count = flags & 4095 /* DirectiveCountMask */;\n        /** @type {?} */\n        const end = start + count;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (let i = start; i < end; i++) {\n            /** @type {?} */\n            const def = /** @type {?} */ ((tView.directives))[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/**\n * Queues afterContentInit and afterContentChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/**\n * Queues afterViewInit and afterViewChecked hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/**\n * Queues onDestroy hooks on TView\n * @param {?} def\n * @param {?} tView\n * @param {?} i\n * @return {?}\n */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param {?} currentView The current view\n * @param {?} tView\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView[FLAGS] & 16 /* RunInit */) {\n        executeHooks(/** @type {?} */ ((currentView[DIRECTIVES])), tView.initHooks, tView.checkHooks, creationMode);\n        currentView[FLAGS] &= ~16 /* RunInit */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param {?} data\n * @param {?} allHooks\n * @param {?} checkHooks\n * @param {?} creationMode\n * @return {?}\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    /** @type {?} */\n    const hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param {?} data\n * @param {?} arr The array in which the hooks are found\n * @return {?}\n */\nfunction callHooks(data, arr) {\n    for (let i = 0; i < arr.length; i += 2) {\n        (/** @type {?} */ (arr[i + 1])).call(data[/** @type {?} */ (arr[i])]);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction ngDevModeResetPerfCounters() {\n    /** @type {?} */\n    const newCounters = {\n        firstTemplatePass: 0,\n        tNode: 0,\n        tView: 0,\n        rendererCreateTextNode: 0,\n        rendererSetText: 0,\n        rendererCreateElement: 0,\n        rendererAddEventListener: 0,\n        rendererSetAttribute: 0,\n        rendererRemoveAttribute: 0,\n        rendererSetProperty: 0,\n        rendererSetClassName: 0,\n        rendererAddClass: 0,\n        rendererRemoveClass: 0,\n        rendererSetStyle: 0,\n        rendererRemoveStyle: 0,\n        rendererDestroy: 0,\n        rendererDestroyNode: 0,\n        rendererMoveNode: 0,\n        rendererRemoveNode: 0,\n    };\n    // NOTE: Under Ivy we may have both window & global defined in the Node\n    //    environment since ensureDocument() in render3.ts sets global.window.\n    if (typeof window != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        (/** @type {?} */ (window))['ngDevMode'] = newCounters;\n    }\n    if (typeof global != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        (/** @type {?} */ (global))['ngDevMode'] = newCounters;\n    }\n    if (typeof self != 'undefined') {\n        // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n        (/** @type {?} */ (self))['ngDevMode'] = newCounters;\n    }\n    return newCounters;\n}\n/**\n * This checks to see if the `ngDevMode` has been set. If yes,\n * than we honor it, otherwise we default to dev mode with additional checks.\n *\n * The idea is that unless we are doing production build where we explicitly\n * set `ngDevMode == false` we should be helping the developer by providing\n * as much early warning and errors as possible.\n */\nif (typeof ngDevMode === 'undefined' || ngDevMode) {\n    ngDevModeResetPerfCounters();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Called when directives inject each other (creating a circular dependency)\n * @param {?} token\n * @return {?}\n */\nfunction throwCyclicDependencyError(token) {\n    throw new Error(`Cannot instantiate cyclic dependency! ${token}`);\n}\n/**\n * Called when there are multiple component selectors that match a given node\n * @param {?} tNode\n * @return {?}\n */\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(`Multiple components match node with tagname ${tNode.tagName}`);\n}\n/**\n * Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on.\n * @param {?} creationMode\n * @param {?} checkNoChangesMode\n * @param {?} oldValue\n * @param {?} currValue\n * @return {?}\n */\nfunction throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, oldValue, currValue) {\n    if (checkNoChangesMode) {\n        /** @type {?} */\n        let msg = `ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '${oldValue}'. Current value: '${currValue}'.`;\n        if (creationMode) {\n            msg +=\n                ` It seems like the view has been created after its parent and its children have been dirty checked.` +\n                    ` Has it been created in a change detection hook ?`;\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Below are constants for LContainer indices to help us look up LContainer members\n * without having to remember the specific indices.\n * Uglify will inline these when minifying so there shouldn't be a cost.\n  @type {?} */\nconst ACTIVE_INDEX = 0;\n/** @type {?} */\nconst VIEWS = 4;\n/** @type {?} */\nconst RENDER_PARENT = 5;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RendererStyleFlags3 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags3[RendererStyleFlags3.Important] = 'Important';\nRendererStyleFlags3[RendererStyleFlags3.DashCase] = 'DashCase';\n/**\n * Returns whether the `renderer` is a `ProceduralRenderer3`\n * @param {?} renderer\n * @return {?}\n */\nfunction isProceduralRenderer(renderer) {\n    return !!((/** @type {?} */ (renderer)).listen);\n}\n/** @type {?} */\nconst domRendererFactory3 = {\n    createRenderer: (hostElement, rendererType) => { return document; }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @param {?} type\n * @return {?}\n */\nfunction assertNodeType(node, type) {\n    assertDefined(node, 'should be called with a node');\n    assertEqual(node.tNode.type, type, `should be a ${typeName(type)}`);\n}\n/**\n * @param {?} node\n * @param {...?} types\n * @return {?}\n */\nfunction assertNodeOfPossibleTypes(node, ...types) {\n    assertDefined(node, 'should be called with a node');\n    /** @type {?} */\n    const found = types.some(type => node.tNode.type === type);\n    assertEqual(found, true, `Should be one of ${types.map(typeName).join(', ')}`);\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Must use this method for CD (instead of === ) since NaN !== NaN\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    /** @type {?} */\n    const result = [];\n    /** @type {?} */\n    let i = 0;\n    while (i < list.length) {\n        /** @type {?} */\n        const item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n/**\n * Retrieves a value from any `LViewData`.\n * @template T\n * @param {?} index\n * @param {?} arr\n * @return {?}\n */\nfunction loadInternal(index, arr) {\n    ngDevMode && assertDataInRangeInternal(index + HEADER_OFFSET, arr);\n    return arr[index + HEADER_OFFSET];\n}\n/**\n * @param {?} index\n * @param {?} arr\n * @return {?}\n */\nfunction assertDataInRangeInternal(index, arr) {\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\n/**\n * Retrieves an element value from the provided `viewData`.\n *\n * Elements that are read may be wrapped in a style context,\n * therefore reading the value may involve unwrapping that.\n * @param {?} index\n * @param {?} arr\n * @return {?}\n */\nfunction loadElementInternal(index, arr) {\n    /** @type {?} */\n    const value = loadInternal(index, arr);\n    return readElementValue(value);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction readElementValue(value) {\n    return /** @type {?} */ ((Array.isArray(value) ? (/** @type {?} */ ((value)))[0] : value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Retrieves the sibling node for the given node.\n * @param {?} node\n * @return {?}\n */\nfunction getNextLNode(node) {\n    // View nodes don't have TNodes, so their next must be retrieved through their LView.\n    if (node.tNode.type === 2 /* View */) {\n        /** @type {?} */\n        const viewData = /** @type {?} */ (node.data);\n        return viewData[NEXT] ? (/** @type {?} */ (viewData[NEXT]))[HOST_NODE] : null;\n    }\n    return node.tNode.next ? node.view[node.tNode.next.index] : null;\n}\n/**\n * Retrieves the first child of a given node\n * @param {?} node\n * @return {?}\n */\nfunction getChildLNode(node) {\n    if (node.tNode.child) {\n        /** @type {?} */\n        const viewData = node.tNode.type === 2 /* View */ ? /** @type {?} */ (node.data) : node.view;\n        return readElementValue(viewData[node.tNode.child.index]);\n    }\n    return null;\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction getParentLNode(node) {\n    if (node.tNode.index === -1 && node.tNode.type === 2 /* View */) {\n        /** @type {?} */\n        const containerHostIndex = (/** @type {?} */ (node.data))[CONTAINER_INDEX];\n        return containerHostIndex === -1 ? null : node.view[containerHostIndex].dynamicLContainerNode;\n    }\n    /** @type {?} */\n    const parent = node.tNode.parent;\n    return readElementValue(parent ? node.view[parent.index] : node.view[HOST_NODE]);\n}\n/** *\n * Stack used to keep track of projection nodes in walkLNodeTree.\n *\n * This is deliberately created outside of walkLNodeTree to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n  @type {?} */\nconst projectionNodeStack = [];\n/**\n * Walks a tree of LNodes, applying a transformation on the LElement nodes, either only on the first\n * one found, or on all of them.\n *\n * @param {?} startingNode the node from which the walk is started.\n * @param {?} rootNode the root node considered. This prevents walking past that node.\n * @param {?} action identifies the action to be performed on the LElement nodes.\n * @param {?} renderer the current renderer.\n * @param {?=} renderParentNode Optional the render parent node to be set in all LContainerNodes found,\n * required for action modes Insert and Destroy.\n * @param {?=} beforeNode Optional the node before which elements should be added, required for action\n * Insert.\n * @return {?}\n */\nfunction walkLNodeTree(startingNode, rootNode, action, renderer, renderParentNode, beforeNode) {\n    /** @type {?} */\n    let node = startingNode;\n    /** @type {?} */\n    let projectionNodeIndex = -1;\n    while (node) {\n        /** @type {?} */\n        let nextNode = null;\n        /** @type {?} */\n        const parent = renderParentNode ? renderParentNode.native : null;\n        /** @type {?} */\n        const nodeType = node.tNode.type;\n        if (nodeType === 3 /* Element */) {\n            // Execute the action\n            executeNodeAction(action, renderer, parent, /** @type {?} */ ((node.native)), beforeNode);\n            if (node.dynamicLContainerNode) {\n                executeNodeAction(action, renderer, parent, /** @type {?} */ ((node.dynamicLContainerNode.native)), beforeNode);\n            }\n        }\n        else if (nodeType === 0 /* Container */) {\n            executeNodeAction(action, renderer, parent, /** @type {?} */ ((node.native)), beforeNode);\n            /** @type {?} */\n            const lContainerNode = (/** @type {?} */ (node));\n            /** @type {?} */\n            const childContainerData = lContainerNode.dynamicLContainerNode ?\n                lContainerNode.dynamicLContainerNode.data :\n                lContainerNode.data;\n            if (renderParentNode) {\n                childContainerData[RENDER_PARENT] = renderParentNode;\n            }\n            nextNode =\n                childContainerData[VIEWS].length ? getChildLNode(childContainerData[VIEWS][0]) : null;\n            if (nextNode) {\n                // When the walker enters a container, then the beforeNode has to become the local native\n                // comment node.\n                beforeNode = lContainerNode.dynamicLContainerNode ?\n                    lContainerNode.dynamicLContainerNode.native :\n                    lContainerNode.native;\n            }\n        }\n        else if (nodeType === 1 /* Projection */) {\n            /** @type {?} */\n            const componentHost = findComponentHost(node.view);\n            /** @type {?} */\n            const head = (/** @type {?} */ (componentHost.tNode.projection))[/** @type {?} */ (node.tNode.projection)];\n            projectionNodeStack[++projectionNodeIndex] = /** @type {?} */ (node);\n            nextNode = head ? /** @type {?} */ (((/** @type {?} */ (componentHost.data))[PARENT]))[head.index] : null;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = getChildLNode(/** @type {?} */ (node));\n        }\n        if (nextNode === null) {\n            nextNode = getNextLNode(node);\n            // this last node was projected, we need to get back down to its projection node\n            if (nextNode === null && (node.tNode.flags & 8192 /* isProjected */)) {\n                nextNode = getNextLNode(/** @type {?} */ (projectionNodeStack[projectionNodeIndex--]));\n            }\n            /**\n                   * Find the next node in the LNode tree, taking into account the place where a node is\n                   * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                   *\n                   * If there is no sibling node, then it goes to the next sibling of the parent node...\n                   * until it reaches rootNode (at which point null is returned).\n                   */\n            while (node && !nextNode) {\n                node = getParentLNode(node);\n                if (node === null || node === rootNode)\n                    return null;\n                // When exiting a container, the beforeNode must be restored to the previous value\n                if (!node.tNode.next && nodeType === 0 /* Container */) {\n                    beforeNode = node.native;\n                }\n                nextNode = getNextLNode(node);\n            }\n        }\n        node = nextNode;\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param {?} lViewData LViewData for which we want a host element node\n * @return {?} The host node\n */\nfunction findComponentHost(lViewData) {\n    /** @type {?} */\n    let viewRootLNode = lViewData[HOST_NODE];\n    while (viewRootLNode.tNode.type === 2 /* View */) {\n        ngDevMode && assertDefined(lViewData[PARENT], 'lViewData.parent');\n        lViewData = /** @type {?} */ ((lViewData[PARENT]));\n        viewRootLNode = lViewData[HOST_NODE];\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertDefined(viewRootLNode.data, 'node.data');\n    return /** @type {?} */ (viewRootLNode);\n}\n/**\n * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n * being passed as an argument.\n * @param {?} action\n * @param {?} renderer\n * @param {?} parent\n * @param {?} node\n * @param {?=} beforeNode\n * @return {?}\n */\nfunction executeNodeAction(action, renderer, parent, node, beforeNode) {\n    if (action === 0 /* Insert */) {\n        isProceduralRenderer(/** @type {?} */ ((renderer))) ?\n            (/** @type {?} */ (renderer)).insertBefore(/** @type {?} */ ((parent)), node, /** @type {?} */ (beforeNode)) : /** @type {?} */ ((parent)).insertBefore(node, /** @type {?} */ (beforeNode), true);\n    }\n    else if (action === 1 /* Detach */) {\n        isProceduralRenderer(/** @type {?} */ ((renderer))) ?\n            (/** @type {?} */ (renderer)).removeChild(/** @type {?} */ ((parent)), node) : /** @type {?} */ ((parent)).removeChild(node);\n    }\n    else if (action === 2 /* Destroy */) {\n        ngDevMode && ngDevMode.rendererDestroyNode++; /** @type {?} */\n        (((/** @type {?} */ (renderer)).destroyNode))(node);\n    }\n}\n/**\n * @param {?} value\n * @param {?} renderer\n * @return {?}\n */\nfunction createTextNode(value, renderer) {\n    return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n        renderer.createTextNode(stringify$1(value));\n}\n/**\n * @param {?} container\n * @param {?} rootNode\n * @param {?} insertMode\n * @param {?=} beforeNode\n * @return {?}\n */\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    /** @type {?} */\n    const parentNode = container.data[RENDER_PARENT];\n    /** @type {?} */\n    const parent = parentNode ? parentNode.native : null;\n    if (parent) {\n        /** @type {?} */\n        let node = getChildLNode(rootNode);\n        /** @type {?} */\n        const renderer = container.view[RENDERER];\n        walkLNodeTree(node, rootNode, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, parentNode, beforeNode);\n    }\n}\n/**\n * Traverses down and up the tree of views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n * @param {?} rootView The view to destroy\n * @return {?}\n */\nfunction destroyViewTree(rootView) {\n    // If the view has no children, we can clean it up and return early.\n    if (rootView[TVIEW].childIndex === -1) {\n        return cleanUpView(rootView);\n    }\n    /** @type {?} */\n    let viewOrContainer = getLViewChild(rootView);\n    while (viewOrContainer) {\n        /** @type {?} */\n        let next = null;\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            /** @type {?} */\n            const view = /** @type {?} */ (viewOrContainer);\n            if (view[TVIEW].childIndex > -1)\n                next = getLViewChild(view);\n        }\n        else {\n            /** @type {?} */\n            const container = /** @type {?} */ (viewOrContainer);\n            if (container[VIEWS].length)\n                next = container[VIEWS][0].data;\n        }\n        if (next == null) {\n            // Only clean up view when moving to the side or up, as destroy hooks\n            // should be called in order from the bottom up.\n            while (viewOrContainer && !/** @type {?} */ ((viewOrContainer))[NEXT] && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && /** @type {?} */ ((viewOrContainer))[NEXT];\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param {?} container The container into which the view should be inserted\n * @param {?} viewNode The view to insert\n * @param {?} index The index at which to insert the view\n * @return {?} The inserted view\n */\nfunction insertView(container, viewNode, index) {\n    /** @type {?} */\n    const state = container.data;\n    /** @type {?} */\n    const views = state[VIEWS];\n    /** @type {?} */\n    const lView = /** @type {?} */ (viewNode.data);\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        views[index - 1].data[NEXT] = lView;\n    }\n    if (index < views.length) {\n        lView[NEXT] = views[index].data;\n        views.splice(index, 0, viewNode);\n    }\n    else {\n        views.push(viewNode);\n        lView[NEXT] = null;\n    }\n    // Dynamically inserted views need a reference to their parent container'S host so it's\n    // possible to jump from a view to its container's next when walking the node tree.\n    if (viewNode.tNode.index === -1) {\n        lView[CONTAINER_INDEX] = /** @type {?} */ ((container.tNode.parent)).index;\n        (/** @type {?} */ (viewNode)).view = container.view;\n    }\n    // Notify query that a new view has been added\n    if (lView[QUERIES]) {\n        /** @type {?} */ ((lView[QUERIES])).insertView(index);\n    }\n    // Sets the attached flag\n    lView[FLAGS] |= 8 /* Attached */;\n    return viewNode;\n}\n/**\n * Detaches a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM.\n *\n * @param {?} container The container from which to detach a view\n * @param {?} removeIndex The index of the view to detach\n * @return {?} The detached view\n */\nfunction detachView(container, removeIndex) {\n    /** @type {?} */\n    const views = container.data[VIEWS];\n    /** @type {?} */\n    const viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        views[removeIndex - 1].data[NEXT] = /** @type {?} */ (viewNode.data[NEXT]);\n    }\n    views.splice(removeIndex, 1);\n    if (!container.tNode.detached) {\n        addRemoveViewFromContainer(container, viewNode, false);\n    }\n    /** @type {?} */\n    const removedLView = viewNode.data;\n    if (removedLView[QUERIES]) {\n        /** @type {?} */ ((removedLView[QUERIES])).removeView();\n    }\n    removedLView[CONTAINER_INDEX] = -1;\n    (/** @type {?} */ (viewNode)).view = null;\n    // Unsets the attached flag\n    viewNode.data[FLAGS] &= ~8 /* Attached */;\n    return viewNode;\n}\n/**\n * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n *\n * @param {?} container The container from which to remove a view\n * @param {?} removeIndex The index of the view to remove\n * @return {?} The removed view\n */\nfunction removeView(container, removeIndex) {\n    /** @type {?} */\n    const viewNode = container.data[VIEWS][removeIndex];\n    detachView(container, removeIndex);\n    destroyLView(viewNode.data);\n    return viewNode;\n}\n/**\n * Gets the child of the given LViewData\n * @param {?} viewData\n * @return {?}\n */\nfunction getLViewChild(viewData) {\n    if (viewData[TVIEW].childIndex === -1)\n        return null;\n    /** @type {?} */\n    const hostNode = viewData[viewData[TVIEW].childIndex];\n    return hostNode.data ? hostNode.data : (/** @type {?} */ (hostNode.dynamicLContainerNode)).data;\n}\n/**\n * A standalone function which destroys an LView,\n * conducting cleanup (e.g. removing listeners, calling onDestroys).\n *\n * @param {?} view The view to be destroyed.\n * @return {?}\n */\nfunction destroyLView(view) {\n    /** @type {?} */\n    const renderer = view[RENDERER];\n    if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n        walkLNodeTree(view[HOST_NODE], view[HOST_NODE], 2 /* Destroy */, renderer);\n    }\n    destroyViewTree(view);\n    // Sets the destroyed flag\n    view[FLAGS] |= 32 /* Destroyed */;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param {?} state The LViewOrLContainer for which we need a parent state\n * @param {?} rootView The rootView, so we don't propagate too far up the view tree\n * @return {?} The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    /** @type {?} */\n    let node;\n    if ((node = /** @type {?} */ (((/** @type {?} */ (state))))[HOST_NODE]) && node.tNode.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return /** @type {?} */ (((getParentLNode(node))).data);\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state[PARENT] === rootView ? null : state[PARENT];\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param {?} viewOrContainer\n * @return {?}\n */\nfunction cleanUpView(viewOrContainer) {\n    if ((/** @type {?} */ (viewOrContainer))[TVIEW]) {\n        /** @type {?} */\n        const view = /** @type {?} */ (viewOrContainer);\n        removeListeners(view);\n        executeOnDestroys(view);\n        executePipeOnDestroys(view);\n        // For component views only, the local renderer is destroyed as clean up time.\n        if (view[TVIEW].id === -1 && isProceduralRenderer(view[RENDERER])) {\n            ngDevMode && ngDevMode.rendererDestroy++;\n            (/** @type {?} */ (view[RENDERER])).destroy();\n        }\n    }\n}\n/**\n * Removes listeners and unsubscribes from output subscriptions\n * @param {?} viewData\n * @return {?}\n */\nfunction removeListeners(viewData) {\n    /** @type {?} */\n    const cleanup = /** @type {?} */ ((viewData[TVIEW].cleanup));\n    if (cleanup != null) {\n        for (let i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                /** @type {?} */\n                const native = readElementValue(viewData[cleanup[i + 1]]).native;\n                /** @type {?} */\n                const listener = /** @type {?} */ ((viewData[CLEANUP]))[cleanup[i + 2]];\n                native.removeEventListener(cleanup[i], listener, cleanup[i + 3]);\n                i += 2;\n            }\n            else if (typeof cleanup[i] === 'number') {\n                /** @type {?} */\n                const cleanupFn = /** @type {?} */ ((viewData[CLEANUP]))[cleanup[i]];\n                cleanupFn();\n            }\n            else {\n                /** @type {?} */\n                const context = /** @type {?} */ ((viewData[CLEANUP]))[cleanup[i + 1]];\n                cleanup[i].call(context);\n            }\n        }\n        viewData[CLEANUP] = null;\n    }\n}\n/**\n * Calls onDestroy hooks for this view\n * @param {?} view\n * @return {?}\n */\nfunction executeOnDestroys(view) {\n    /** @type {?} */\n    const tView = view[TVIEW];\n    /** @type {?} */\n    let destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks(/** @type {?} */ ((view[DIRECTIVES])), destroyHooks);\n    }\n}\n/**\n * Calls pipe destroy hooks for this view\n * @param {?} viewData\n * @return {?}\n */\nfunction executePipeOnDestroys(viewData) {\n    /** @type {?} */\n    const pipeDestroyHooks = viewData[TVIEW] && viewData[TVIEW].pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks(/** @type {?} */ ((viewData)), pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element can be inserted into the given parent.\n *\n * There are two reasons why we may not be able to insert a element immediately.\n * - Projection: When creating a child content element of a component, we have to skip the\n *   insertion because the content of a component will be projected.\n *   `<component><content>delayed due to projection</content></component>`\n * - Parent container is disconnected: This can happen when we are inserting a view into\n *   parent container, which itself is disconnected. For example the parent container is part\n *   of a View which has not be inserted or is mare for projection but has not been inserted\n *   into destination.\n *\n *\n * @param {?} parent The parent where the child will be inserted into.\n * @param {?} currentView Current LView being processed.\n * @return {?} boolean Whether the child should be inserted now (or delayed until later).\n */\nfunction canInsertNativeNode(parent, currentView) {\n    // We can only insert into a Component or View. Any other type should be an Error.\n    ngDevMode && assertNodeOfPossibleTypes(parent, 3 /* Element */, 2 /* View */);\n    if (parent.tNode.type === 3 /* Element */) {\n        // Parent is an element.\n        if (parent.view !== currentView) {\n            // If the Parent view is not the same as current view than we are inserting across\n            // Views. This happens when we insert a root element of the component view into\n            // the component host element and it should always be eager.\n            return true;\n        }\n        // Parent elements can be a component which may have projection.\n        if (parent.data === null) {\n            // Parent is a regular non-component element. We should eagerly insert into it\n            // since we know that this relationship will never be broken.\n            return true;\n        }\n        else {\n            // Parent is a Component. Component's content nodes are not inserted immediately\n            // because they will be projected, and so doing insert at this point would be wasteful.\n            // Since the projection would than move it to its final destination.\n            return false;\n        }\n    }\n    else {\n        // Parent is a View.\n        ngDevMode && assertNodeType(parent, 2 /* View */);\n        /** @type {?} */\n        const grandParentContainer = /** @type {?} */ (getParentLNode(parent));\n        if (grandParentContainer == null) {\n            // The `View` is not inserted into a `Container` we have to delay insertion.\n            return false;\n        }\n        ngDevMode && assertNodeType(grandParentContainer, 0 /* Container */);\n        if (grandParentContainer.data[RENDER_PARENT] == null) {\n            // The parent `Container` itself is disconnected. So we have to delay.\n            return false;\n        }\n        else {\n            // The parent `Container` is in inserted state, so we can eagerly insert into\n            // this location.\n            return true;\n        }\n    }\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {\\@link canInsertNativeNode}.\n *\n * @param {?} parent The parent to which to append the child\n * @param {?} child The child that should be appended\n * @param {?} currentView The current LView\n * @return {?} Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        /** @type {?} */\n        const renderer = currentView[RENDERER];\n        if (parent.tNode.type === 2 /* View */) {\n            /** @type {?} */\n            const container = /** @type {?} */ (getParentLNode(parent));\n            /** @type {?} */\n            const renderParent = container.data[RENDER_PARENT];\n            /** @type {?} */\n            const views = container.data[VIEWS];\n            /** @type {?} */\n            const index = views.indexOf(/** @type {?} */ (parent));\n            /** @type {?} */\n            const beforeNode = index + 1 < views.length ? (/** @type {?} */ ((getChildLNode(views[index + 1])))).native : container.native;\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(/** @type {?} */ ((renderParent)).native, child, beforeNode) : /** @type {?} */ ((renderParent)).native.insertBefore(child, beforeNode, true);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.appendChild(/** @type {?} */ (((parent.native))), child) : /** @type {?} */ ((parent.native)).appendChild(child);\n        }\n        return true;\n    }\n    return false;\n}\n/**\n * Removes the `child` element of the `parent` from the DOM.\n *\n * @param {?} parent The parent from which to remove the child\n * @param {?} child The child that should be removed\n * @param {?} currentView The current LView\n * @return {?} Whether or not the child was removed\n */\nfunction removeChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        /** @type {?} */\n        const renderer = currentView[RENDERER];\n        isProceduralRenderer(renderer) ? renderer.removeChild(/** @type {?} */ (parent.native), child) : /** @type {?} */ ((parent.native)).removeChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param {?} node The node to process\n * @param {?} currentParent The last parent element to be processed\n * @param {?} currentView Current LView\n * @param {?} renderParent\n * @return {?}\n */\nfunction appendProjectedNode(node, currentParent, currentView, renderParent) {\n    appendChild(currentParent, node.native, currentView);\n    if (node.tNode.type === 0 /* Container */) {\n        /** @type {?} */\n        const lContainer = (/** @type {?} */ (node)).data;\n        lContainer[RENDER_PARENT] = renderParent;\n        /** @type {?} */\n        const views = lContainer[VIEWS];\n        for (let i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(/** @type {?} */ (node), views[i], true, node.native);\n        }\n    }\n    if (node.dynamicLContainerNode) {\n        node.dynamicLContainerNode.data[RENDER_PARENT] = renderParent;\n        appendChild(currentParent, node.dynamicLContainerNode.native, currentView);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} nodeClassAttrVal\n * @param {?} cssClassToMatch\n * @return {?}\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    /** @type {?} */\n    const nodeClassesLen = nodeClassAttrVal.length;\n    /** @type {?} */\n    const matchIndex = /** @type {?} */ ((nodeClassAttrVal)).indexOf(cssClassToMatch);\n    /** @type {?} */\n    const matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && /** @type {?} */ ((nodeClassAttrVal))[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && /** @type {?} */ ((nodeClassAttrVal))[matchEndIdx] !== ' ')) // no space after\n     {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param {?} tNode\n * @param {?} selector\n * @return {?} true if node matches the selector.\n */\nfunction isNodeMatchingSelector(tNode, selector) {\n    ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n    /** @type {?} */\n    let mode = 4 /* ELEMENT */;\n    /** @type {?} */\n    const nodeAttrs = /** @type {?} */ ((tNode.attrs));\n    /** @type {?} */\n    const selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(1 /* SelectOnly */) : -1;\n    /** @type {?} */\n    let skipToNextSelector = false;\n    for (let i = 0; i < selector.length; i++) {\n        /** @type {?} */\n        const current = selector[i];\n        if (typeof current === 'number') {\n            // If we finish processing a :not selector and it hasn't failed, return false\n            if (!skipToNextSelector && !isPositive(mode) && !isPositive(/** @type {?} */ (current))) {\n                return false;\n            }\n            // If we are skipping to the next :not() and this mode flag is positive,\n            // it's a part of the current :not() selector, and we should keep skipping\n            if (skipToNextSelector && isPositive(current))\n                continue;\n            skipToNextSelector = false;\n            mode = (/** @type {?} */ (current)) | (mode & 1 /* NOT */);\n            continue;\n        }\n        if (skipToNextSelector)\n            continue;\n        if (mode & 4 /* ELEMENT */) {\n            mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n            if (current !== '' && current !== tNode.tagName) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n            }\n        }\n        else {\n            /** @type {?} */\n            const attrName = mode & 8 /* CLASS */ ? 'class' : current;\n            /** @type {?} */\n            const attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n            if (attrIndexInNode === -1) {\n                if (isPositive(mode))\n                    return false;\n                skipToNextSelector = true;\n                continue;\n            }\n            /** @type {?} */\n            const selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n            if (selectorAttrValue !== '') {\n                /** @type {?} */\n                let nodeAttrValue;\n                /** @type {?} */\n                const maybeAttrName = nodeAttrs[attrIndexInNode];\n                if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                    nodeAttrValue = '';\n                }\n                else {\n                    ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                    nodeAttrValue = /** @type {?} */ (nodeAttrs[attrIndexInNode + 1]);\n                }\n                if (mode & 8 /* CLASS */ &&\n                    !isCssClassMatching(/** @type {?} */ (nodeAttrValue), /** @type {?} */ (selectorAttrValue)) ||\n                    mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n        }\n    }\n    return isPositive(mode) || skipToNextSelector;\n}\n/**\n * @param {?} mode\n * @return {?}\n */\nfunction isPositive(mode) {\n    return (mode & 1 /* NOT */) === 0;\n}\n/**\n * Examines an attributes definition array from a node to find the index of the\n * attribute with the specified name.\n *\n * NOTE: Will not find namespaced attributes.\n *\n * @param {?} name the name of the attribute to find\n * @param {?} attrs the attribute array to examine\n * @return {?}\n */\nfunction findAttrIndexInNode(name, attrs) {\n    if (attrs === null)\n        return -1;\n    /** @type {?} */\n    let selectOnlyMode = false;\n    /** @type {?} */\n    let i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        const maybeAttrName = attrs[i];\n        if (maybeAttrName === name) {\n            return i;\n        }\n        else if (maybeAttrName === 0 /* NamespaceURI */) {\n            // NOTE(benlesh): will not find namespaced attributes. This is by design.\n            i += 4;\n        }\n        else {\n            if (maybeAttrName === 1 /* SelectOnly */) {\n                selectOnlyMode = true;\n            }\n            i += selectOnlyMode ? 1 : 2;\n        }\n    }\n    return -1;\n}\n/**\n * @param {?} tNode\n * @param {?} selector\n * @return {?}\n */\nfunction isNodeMatchingSelectorList(tNode, selector) {\n    for (let i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelector(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction getProjectAsAttrValue(tNode) {\n    /** @type {?} */\n    const nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        /** @type {?} */\n        const ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return /** @type {?} */ (nodeAttrs[ngProjectAsAttrIdx + 1]);\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n * @param {?} tNode\n * @param {?} selectors\n * @param {?} textSelectors\n * @return {?}\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    /** @type {?} */\n    const ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (let i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelectorList(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Used clone a copy of a pre-computed template of a styling context.\n *\n * A pre-computed template is designed to be computed once for a given element\n * (instructions.ts has logic for caching this).\n * @param {?} lElement\n * @param {?} templateStyleContext\n * @return {?}\n */\nfunction allocStylingContext(lElement, templateStyleContext) {\n    /** @type {?} */\n    const context = /** @type {?} */ ((templateStyleContext.slice()));\n    context[0 /* ElementPosition */] = lElement;\n    return context;\n}\n/**\n * Creates a styling context template where styling information is stored.\n * Any styles that are later referenced using `updateStyleProp` must be\n * passed in within this function. Initial values for those styles are to\n * be declared after all initial style properties are declared (this change in\n * mode between declarations and initial styles is made possible using a special\n * enum value found in `definition.ts`).\n *\n * @param {?=} initialClassDeclarations a list of class declarations and initial class values\n *    that are used later within the styling context.\n *\n *    -> ['foo', 'bar', SPECIAL_ENUM_VAL, 'foo', true]\n *       This implies that `foo` and `bar` will be later styled and that the `foo`\n *       class will be applied to the element as an initial class since it's true\n * @param {?=} initialStyleDeclarations a list of style declarations and initial style values\n *    that are used later within the styling context.\n *\n *    -> ['width', 'height', SPECIAL_ENUM_VAL, 'width', '100px']\n *       This implies that `width` and `height` will be later styled and that the `width`\n *       property has an initial value of `100px`.\n *\n * @param {?=} styleSanitizer\n * @return {?}\n */\nfunction createStylingContextTemplate(initialClassDeclarations, initialStyleDeclarations, styleSanitizer) {\n    /** @type {?} */\n    const initialStylingValues = [null];\n    /** @type {?} */\n    const context = [null, styleSanitizer || null, initialStylingValues, 0, 0, null];\n    /** @type {?} */\n    const stylesLookup = {};\n    /** @type {?} */\n    const classesLookup = {};\n    /** @type {?} */\n    let totalStyleDeclarations = 0;\n    if (initialStyleDeclarations) {\n        /** @type {?} */\n        let hasPassedDeclarations = false;\n        for (let i = 0; i < initialStyleDeclarations.length; i++) {\n            /** @type {?} */\n            const v = /** @type {?} */ (initialStyleDeclarations[i]);\n            // this flag value marks where the declarations end the initial values begin\n            if (v === 1 /* VALUES_MODE */) {\n                hasPassedDeclarations = true;\n            }\n            else {\n                /** @type {?} */\n                const prop = /** @type {?} */ (v);\n                if (hasPassedDeclarations) {\n                    /** @type {?} */\n                    const value = /** @type {?} */ (initialStyleDeclarations[++i]);\n                    initialStylingValues.push(value);\n                    stylesLookup[prop] = initialStylingValues.length - 1;\n                }\n                else {\n                    totalStyleDeclarations++;\n                    stylesLookup[prop] = 0;\n                }\n            }\n        }\n    }\n    // make where the class offsets begin\n    context[4 /* ClassOffsetPosition */] = totalStyleDeclarations;\n    if (initialClassDeclarations) {\n        /** @type {?} */\n        let hasPassedDeclarations = false;\n        for (let i = 0; i < initialClassDeclarations.length; i++) {\n            /** @type {?} */\n            const v = /** @type {?} */ (initialClassDeclarations[i]);\n            // this flag value marks where the declarations end the initial values begin\n            if (v === 1 /* VALUES_MODE */) {\n                hasPassedDeclarations = true;\n            }\n            else {\n                /** @type {?} */\n                const className = /** @type {?} */ (v);\n                if (hasPassedDeclarations) {\n                    /** @type {?} */\n                    const value = /** @type {?} */ (initialClassDeclarations[++i]);\n                    initialStylingValues.push(value);\n                    classesLookup[className] = initialStylingValues.length - 1;\n                }\n                else {\n                    classesLookup[className] = 0;\n                }\n            }\n        }\n    }\n    /** @type {?} */\n    const styleProps = Object.keys(stylesLookup);\n    /** @type {?} */\n    const classNames = Object.keys(classesLookup);\n    /** @type {?} */\n    const classNamesIndexStart = styleProps.length;\n    /** @type {?} */\n    const totalProps = styleProps.length + classNames.length;\n    /** @type {?} */\n    const maxLength = totalProps * 3 /* Size */ * 2 + 6 /* SingleStylesStartPosition */;\n    // we need to fill the array from the start so that we can access\n    // both the multi and the single array positions in the same loop block\n    for (let i = 6 /* SingleStylesStartPosition */; i < maxLength; i++) {\n        context.push(null);\n    }\n    /** @type {?} */\n    const singleStart = 6 /* SingleStylesStartPosition */;\n    /** @type {?} */\n    const multiStart = totalProps * 3 /* Size */ + 6 /* SingleStylesStartPosition */;\n    // fill single and multi-level styles\n    for (let i = 0; i < totalProps; i++) {\n        /** @type {?} */\n        const isClassBased = i >= classNamesIndexStart;\n        /** @type {?} */\n        const prop = isClassBased ? classNames[i - classNamesIndexStart] : styleProps[i];\n        /** @type {?} */\n        const indexForInitial = isClassBased ? classesLookup[prop] : stylesLookup[prop];\n        /** @type {?} */\n        const initialValue = initialStylingValues[indexForInitial];\n        /** @type {?} */\n        const indexForMulti = i * 3 /* Size */ + multiStart;\n        /** @type {?} */\n        const indexForSingle = i * 3 /* Size */ + singleStart;\n        /** @type {?} */\n        const initialFlag = prepareInitialFlag(prop, isClassBased, styleSanitizer || null);\n        setFlag(context, indexForSingle, pointers(initialFlag, indexForInitial, indexForMulti));\n        setProp(context, indexForSingle, prop);\n        setValue(context, indexForSingle, null);\n        /** @type {?} */\n        const flagForMulti = initialFlag | (initialValue !== null ? 1 /* Dirty */ : 0 /* None */);\n        setFlag(context, indexForMulti, pointers(flagForMulti, indexForInitial, indexForSingle));\n        setProp(context, indexForMulti, prop);\n        setValue(context, indexForMulti, null);\n    }\n    // there is no initial value flag for the master index since it doesn't\n    // reference an initial style value\n    setFlag(context, 3 /* MasterFlagPosition */, pointers(0, 0, multiStart));\n    setContextDirty(context, initialStylingValues.length > 1);\n    return context;\n}\n/** @type {?} */\nconst EMPTY_ARR = [];\n/** @type {?} */\nconst EMPTY_OBJ = {};\n/**\n * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n * applied to the element once `renderStyling` is called.\n *\n * All missing styles/class (any values that are not provided in the new `styles`\n * or `classes` params) will resolve to `null` within their respective positions\n * in the context.\n *\n * @param {?} context The styling context that will be updated with the\n *    newly provided style values.\n * @param {?} classes The key/value map of CSS class names that will be used for the update.\n * @param {?=} styles The key/value map of CSS styles that will be used for the update.\n * @return {?}\n */\nfunction updateStylingMap(context, classes, styles) {\n    /** @type {?} */\n    let classNames = EMPTY_ARR;\n    /** @type {?} */\n    let applyAllClasses = false;\n    /** @type {?} */\n    let ignoreAllClassUpdates = false;\n    // each time a string-based value pops up then it shouldn't require a deep\n    // check of what's changed.\n    if (typeof classes == 'string') {\n        /** @type {?} */\n        const cachedClassString = /** @type {?} */ (context[5 /* CachedCssClassString */]);\n        if (cachedClassString && cachedClassString === classes) {\n            ignoreAllClassUpdates = true;\n        }\n        else {\n            context[5 /* CachedCssClassString */] = classes;\n            classNames = classes.split(/\\s+/);\n            // this boolean is used to avoid having to create a key/value map of `true` values\n            // since a classname string implies that all those classes are added\n            applyAllClasses = true;\n        }\n    }\n    else {\n        classNames = classes ? Object.keys(classes) : EMPTY_ARR;\n        context[5 /* CachedCssClassString */] = null;\n    }\n    classes = /** @type {?} */ ((classes || EMPTY_OBJ));\n    /** @type {?} */\n    const styleProps = styles ? Object.keys(styles) : EMPTY_ARR;\n    styles = styles || EMPTY_OBJ;\n    /** @type {?} */\n    const classesStartIndex = styleProps.length;\n    /** @type {?} */\n    const multiStartIndex = getMultiStartIndex(context);\n    /** @type {?} */\n    let dirty = false;\n    /** @type {?} */\n    let ctxIndex = multiStartIndex;\n    /** @type {?} */\n    let propIndex = 0;\n    /** @type {?} */\n    const propLimit = styleProps.length + classNames.length;\n    // the main loop here will try and figure out how the shape of the provided\n    // styles differ with respect to the context. Later if the context/styles/classes\n    // are off-balance then they will be dealt in another loop after this one\n    while (ctxIndex < context.length && propIndex < propLimit) {\n        /** @type {?} */\n        const isClassBased = propIndex >= classesStartIndex;\n        // when there is a cache-hit for a string-based class then we should\n        // avoid doing any work diffing any of the changes\n        if (!ignoreAllClassUpdates || !isClassBased) {\n            /** @type {?} */\n            const adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n            /** @type {?} */\n            const newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n            /** @type {?} */\n            const newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n            /** @type {?} */\n            const prop = getProp(context, ctxIndex);\n            if (prop === newProp) {\n                /** @type {?} */\n                const value = getValue(context, ctxIndex);\n                /** @type {?} */\n                const flag = getPointers(context, ctxIndex);\n                if (hasValueChanged(flag, value, newValue)) {\n                    setValue(context, ctxIndex, newValue);\n                    /** @type {?} */\n                    const initialValue = getInitialValue(context, flag);\n                    // there is no point in setting this to dirty if the previously\n                    // rendered value was being referenced by the initial style (or null)\n                    if (initialValue !== newValue) {\n                        setDirty(context, ctxIndex, true);\n                        dirty = true;\n                    }\n                }\n            }\n            else {\n                /** @type {?} */\n                const indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                if (indexOfEntry > 0) {\n                    /** @type {?} */\n                    const valueToCompare = getValue(context, indexOfEntry);\n                    /** @type {?} */\n                    const flagToCompare = getPointers(context, indexOfEntry);\n                    swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                    if (valueToCompare !== newValue) {\n                        /** @type {?} */\n                        const initialValue = getInitialValue(context, flagToCompare);\n                        setValue(context, ctxIndex, newValue);\n                        if (initialValue !== newValue) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    /** @type {?} */\n                    const newFlag = prepareInitialFlag(newProp, isClassBased, getStyleSanitizer(context));\n                    insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue);\n                    dirty = true;\n                }\n            }\n        }\n        ctxIndex += 3 /* Size */;\n        propIndex++;\n    }\n    // this means that there are left-over values in the context that\n    // were not included in the provided styles/classes and in this\n    // case the  goal is to \"remove\" them from the context (by nullifying)\n    while (ctxIndex < context.length) {\n        /** @type {?} */\n        const flag = getPointers(context, ctxIndex);\n        /** @type {?} */\n        const isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n        if (ignoreAllClassUpdates && isClassBased)\n            break;\n        /** @type {?} */\n        const value = getValue(context, ctxIndex);\n        /** @type {?} */\n        const doRemoveValue = valueExists(value, isClassBased);\n        if (doRemoveValue) {\n            setDirty(context, ctxIndex, true);\n            setValue(context, ctxIndex, null);\n            dirty = true;\n        }\n        ctxIndex += 3 /* Size */;\n    }\n    /** @type {?} */\n    const sanitizer = getStyleSanitizer(context);\n    while (propIndex < propLimit) {\n        /** @type {?} */\n        const isClassBased = propIndex >= classesStartIndex;\n        if (ignoreAllClassUpdates && isClassBased)\n            break;\n        /** @type {?} */\n        const adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n        /** @type {?} */\n        const prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n        /** @type {?} */\n        const value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n        /** @type {?} */\n        const flag = prepareInitialFlag(prop, isClassBased, sanitizer) | 1 /* Dirty */;\n        context.push(flag, prop, value);\n        propIndex++;\n        dirty = true;\n    }\n    if (dirty) {\n        setContextDirty(context, true);\n    }\n}\n/**\n * Sets and resolves a single styling property/value on the provided `StylingContext` so\n * that they can be applied to the element once `renderStyling` is called.\n *\n * Note that prop-level styling values are considered higher priority than any styling that\n * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n * then any styles/classes that have been applied using this function will be considered first\n * (then multi values second and then initial values as a backup).\n *\n * @param {?} context The styling context that will be updated with the\n *    newly provided style value.\n * @param {?} index The index of the property which is being updated.\n * @param {?} value The CSS style value that will be assigned\n * @return {?}\n */\nfunction updateStyleProp(context, index, value) {\n    /** @type {?} */\n    const singleIndex = 6 /* SingleStylesStartPosition */ + index * 3 /* Size */;\n    /** @type {?} */\n    const currValue = getValue(context, singleIndex);\n    /** @type {?} */\n    const currFlag = getPointers(context, singleIndex);\n    // didn't change ... nothing to make a note of\n    if (hasValueChanged(currFlag, currValue, value)) {\n        // the value will always get updated (even if the dirty flag is skipped)\n        setValue(context, singleIndex, value);\n        /** @type {?} */\n        const indexForMulti = getMultiOrSingleIndex(currFlag);\n        /** @type {?} */\n        const valueForMulti = getValue(context, indexForMulti);\n        if (!valueForMulti || valueForMulti !== value) {\n            /** @type {?} */\n            let multiDirty = false;\n            /** @type {?} */\n            let singleDirty = true;\n            /** @type {?} */\n            const isClassBased = (currFlag & 2 /* Class */) === 2 /* Class */;\n            // only when the value is set to `null` should the multi-value get flagged\n            if (!valueExists(value, isClassBased) && valueExists(valueForMulti, isClassBased)) {\n                multiDirty = true;\n                singleDirty = false;\n            }\n            setDirty(context, indexForMulti, multiDirty);\n            setDirty(context, singleIndex, singleDirty);\n            setContextDirty(context, true);\n        }\n    }\n}\n/**\n * This method will toggle the referenced CSS class (by the provided index)\n * within the given context.\n *\n * @param {?} context The styling context that will be updated with the\n *    newly provided class value.\n * @param {?} index The index of the CSS class which is being updated.\n * @param {?} addOrRemove Whether or not to add or remove the CSS class\n * @return {?}\n */\nfunction updateClassProp(context, index, addOrRemove) {\n    /** @type {?} */\n    const adjustedIndex = index + context[4 /* ClassOffsetPosition */];\n    updateStyleProp(context, adjustedIndex, addOrRemove);\n}\n/**\n * Renders all queued styling using a renderer onto the given element.\n *\n * This function works by rendering any styles (that have been applied\n * using `updateStylingMap`) and any classes (that have been applied using\n * `updateStyleProp`) onto the provided element using the provided renderer.\n * Just before the styles/classes are rendered a final key/value style map\n * will be assembled (if `styleStore` or `classStore` are provided).\n *\n * @param {?} context The styling context that will be used to determine\n *      what styles will be rendered\n * @param {?} renderer the renderer that will be used to apply the styling\n * @param {?=} styleStore if provided, the updated style values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @param {?=} classStore if provided, the updated class values will be applied\n *    to this key/value map instead of being renderered via the renderer.\n * @return {?}\n */\nfunction renderStyling(context, renderer, styleStore, classStore) {\n    if (isContextDirty(context)) {\n        /** @type {?} */\n        const native = /** @type {?} */ ((context[0 /* ElementPosition */])).native;\n        /** @type {?} */\n        const multiStartIndex = getMultiStartIndex(context);\n        /** @type {?} */\n        const styleSanitizer = getStyleSanitizer(context);\n        for (let i = 6 /* SingleStylesStartPosition */; i < context.length; i += 3 /* Size */) {\n            // there is no point in rendering styles that have not changed on screen\n            if (isDirty(context, i)) {\n                /** @type {?} */\n                const prop = getProp(context, i);\n                /** @type {?} */\n                const value = getValue(context, i);\n                /** @type {?} */\n                const flag = getPointers(context, i);\n                /** @type {?} */\n                const isClassBased = flag & 2 /* Class */ ? true : false;\n                /** @type {?} */\n                const isInSingleRegion = i < multiStartIndex;\n                /** @type {?} */\n                let valueToApply = value;\n                // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                // this check implies that a single value was removed and we\n                // should now defer to a multi value and use that (if set).\n                if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                    /** @type {?} */\n                    const multiIndex = getMultiOrSingleIndex(flag);\n                    valueToApply = getValue(context, multiIndex);\n                }\n                // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                // the initial value will always be a string or null,\n                // therefore we can safely adopt it incase there's nothing else\n                // note that this should always be a falsy check since `false` is used\n                // for both class and style comparisons (styles can't be false and false\n                // classes are turned off and should therefore defer to their initial values)\n                if (!valueExists(valueToApply, isClassBased)) {\n                    valueToApply = getInitialValue(context, flag);\n                }\n                if (isClassBased) {\n                    setClass(native, prop, valueToApply ? true : false, renderer, classStore);\n                }\n                else {\n                    /** @type {?} */\n                    const sanitizer = (flag & 4 /* Sanitize */) ? styleSanitizer : null;\n                    setStyle(native, prop, /** @type {?} */ (valueToApply), renderer, sanitizer, styleStore);\n                }\n                setDirty(context, i, false);\n            }\n        }\n        setContextDirty(context, false);\n    }\n}\n/**\n * This function renders a given CSS prop/value entry using the\n * provided renderer. If a `store` value is provided then\n * that will be used a render context instead of the provided\n * renderer.\n *\n * @param {?} native the DOM Element\n * @param {?} prop the CSS style property that will be rendered\n * @param {?} value the CSS style value that will be rendered\n * @param {?} renderer\n * @param {?} sanitizer\n * @param {?=} store an optional key/value map that will be used as a context to render styles on\n * @return {?}\n */\nfunction setStyle(native, prop, value, renderer, sanitizer, store) {\n    value = sanitizer && value ? sanitizer(prop, value) : value;\n    if (store) {\n        store[prop] = value;\n    }\n    else if (value) {\n        ngDevMode && ngDevMode.rendererSetStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n            native['style'].setProperty(prop, value);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveStyle++;\n        isProceduralRenderer(renderer) ?\n            renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n            native['style'].removeProperty(prop);\n    }\n}\n/**\n * This function renders a given CSS class value using the provided\n * renderer (by adding or removing it from the provided element).\n * If a `store` value is provided then that will be used a render\n * context instead of the provided renderer.\n *\n * @param {?} native the DOM Element\n * @param {?} className\n * @param {?} add\n * @param {?} renderer\n * @param {?=} store an optional key/value map that will be used as a context to render styles on\n * @return {?}\n */\nfunction setClass(native, className, add, renderer, store) {\n    if (store) {\n        store[className] = add;\n    }\n    else if (add) {\n        ngDevMode && ngDevMode.rendererAddClass++;\n        isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n            native['classList'].add(className);\n    }\n    else {\n        ngDevMode && ngDevMode.rendererRemoveClass++;\n        isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n            native['classList'].remove(className);\n    }\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} isDirtyYes\n * @return {?}\n */\nfunction setDirty(context, index, isDirtyYes) {\n    /** @type {?} */\n    const adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    if (isDirtyYes) {\n        (/** @type {?} */ (context[adjustedIndex])) |= 1 /* Dirty */;\n    }\n    else {\n        (/** @type {?} */ (context[adjustedIndex])) &= ~1 /* Dirty */;\n    }\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction isDirty(context, index) {\n    /** @type {?} */\n    const adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return ((/** @type {?} */ (context[adjustedIndex])) & 1 /* Dirty */) == 1 /* Dirty */;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction isClassBased(context, index) {\n    /** @type {?} */\n    const adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return ((/** @type {?} */ (context[adjustedIndex])) & 2 /* Class */) == 2 /* Class */;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction isSanitizable(context, index) {\n    /** @type {?} */\n    const adjustedIndex = index >= 6 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n    return ((/** @type {?} */ (context[adjustedIndex])) & 4 /* Sanitize */) == 4 /* Sanitize */;\n}\n/**\n * @param {?} configFlag\n * @param {?} staticIndex\n * @param {?} dynamicIndex\n * @return {?}\n */\nfunction pointers(configFlag, staticIndex, dynamicIndex) {\n    return (configFlag & 7 /* BitMask */) | (staticIndex << 3 /* BitCountSize */) |\n        (dynamicIndex << (14 /* BitCountSize */ + 3 /* BitCountSize */));\n}\n/**\n * @param {?} context\n * @param {?} flag\n * @return {?}\n */\nfunction getInitialValue(context, flag) {\n    /** @type {?} */\n    const index = getInitialIndex(flag);\n    return /** @type {?} */ (context[2 /* InitialStylesPosition */][index]);\n}\n/**\n * @param {?} flag\n * @return {?}\n */\nfunction getInitialIndex(flag) {\n    return (flag >> 3 /* BitCountSize */) & 16383 /* BitMask */;\n}\n/**\n * @param {?} flag\n * @return {?}\n */\nfunction getMultiOrSingleIndex(flag) {\n    /** @type {?} */\n    const index = (flag >> (14 /* BitCountSize */ + 3 /* BitCountSize */)) & 16383 /* BitMask */;\n    return index >= 6 /* SingleStylesStartPosition */ ? index : -1;\n}\n/**\n * @param {?} context\n * @return {?}\n */\nfunction getMultiStartIndex(context) {\n    return /** @type {?} */ (getMultiOrSingleIndex(context[3 /* MasterFlagPosition */]));\n}\n/**\n * @param {?} context\n * @return {?}\n */\nfunction getStyleSanitizer(context) {\n    return context[1 /* StyleSanitizerPosition */];\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} prop\n * @return {?}\n */\nfunction setProp(context, index, prop) {\n    context[index + 1 /* PropertyOffset */] = prop;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction setValue(context, index, value) {\n    context[index + 2 /* ValueOffset */] = value;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} flag\n * @return {?}\n */\nfunction setFlag(context, index, flag) {\n    /** @type {?} */\n    const adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    context[adjustedIndex] = flag;\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getPointers(context, index) {\n    /** @type {?} */\n    const adjustedIndex = index === 3 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n    return /** @type {?} */ (context[adjustedIndex]);\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getValue(context, index) {\n    return /** @type {?} */ (context[index + 2 /* ValueOffset */]);\n}\n/**\n * @param {?} context\n * @param {?} index\n * @return {?}\n */\nfunction getProp(context, index) {\n    return /** @type {?} */ (context[index + 1 /* PropertyOffset */]);\n}\n/**\n * @param {?} context\n * @return {?}\n */\nfunction isContextDirty(context) {\n    return isDirty(context, 3 /* MasterFlagPosition */);\n}\n/**\n * @param {?} context\n * @param {?} isDirtyYes\n * @return {?}\n */\nfunction setContextDirty(context, isDirtyYes) {\n    setDirty(context, 3 /* MasterFlagPosition */, isDirtyYes);\n}\n/**\n * @param {?} context\n * @param {?} prop\n * @param {?=} startIndex\n * @return {?}\n */\nfunction findEntryPositionByProp(context, prop, startIndex) {\n    for (let i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 3 /* Size */) {\n        /** @type {?} */\n        const thisProp = context[i];\n        if (thisProp == prop) {\n            return i - 1 /* PropertyOffset */;\n        }\n    }\n    return -1;\n}\n/**\n * @param {?} context\n * @param {?} indexA\n * @param {?} indexB\n * @return {?}\n */\nfunction swapMultiContextEntries(context, indexA, indexB) {\n    /** @type {?} */\n    const tmpValue = getValue(context, indexA);\n    /** @type {?} */\n    const tmpProp = getProp(context, indexA);\n    /** @type {?} */\n    const tmpFlag = getPointers(context, indexA);\n    /** @type {?} */\n    let flagA = tmpFlag;\n    /** @type {?} */\n    let flagB = getPointers(context, indexB);\n    /** @type {?} */\n    const singleIndexA = getMultiOrSingleIndex(flagA);\n    if (singleIndexA >= 0) {\n        /** @type {?} */\n        const _flag = getPointers(context, singleIndexA);\n        /** @type {?} */\n        const _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n    }\n    /** @type {?} */\n    const singleIndexB = getMultiOrSingleIndex(flagB);\n    if (singleIndexB >= 0) {\n        /** @type {?} */\n        const _flag = getPointers(context, singleIndexB);\n        /** @type {?} */\n        const _initial = getInitialIndex(_flag);\n        setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n    }\n    setValue(context, indexA, getValue(context, indexB));\n    setProp(context, indexA, getProp(context, indexB));\n    setFlag(context, indexA, getPointers(context, indexB));\n    setValue(context, indexB, tmpValue);\n    setProp(context, indexB, tmpProp);\n    setFlag(context, indexB, tmpFlag);\n}\n/**\n * @param {?} context\n * @param {?} indexStartPosition\n * @return {?}\n */\nfunction updateSinglePointerValues(context, indexStartPosition) {\n    for (let i = indexStartPosition; i < context.length; i += 3 /* Size */) {\n        /** @type {?} */\n        const multiFlag = getPointers(context, i);\n        /** @type {?} */\n        const singleIndex = getMultiOrSingleIndex(multiFlag);\n        if (singleIndex > 0) {\n            /** @type {?} */\n            const singleFlag = getPointers(context, singleIndex);\n            /** @type {?} */\n            const initialIndexForSingle = getInitialIndex(singleFlag);\n            /** @type {?} */\n            const flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                (isClassBased(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n            /** @type {?} */\n            const updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n            setFlag(context, singleIndex, updatedFlag);\n        }\n    }\n}\n/**\n * @param {?} context\n * @param {?} index\n * @param {?} classBased\n * @param {?} name\n * @param {?} flag\n * @param {?} value\n * @return {?}\n */\nfunction insertNewMultiProperty(context, index, classBased, name, flag, value) {\n    /** @type {?} */\n    const doShift = index < context.length;\n    // prop does not exist in the list, add it in\n    context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value);\n    if (doShift) {\n        // because the value was inserted midway into the array then we\n        // need to update all the shifted multi values' single value\n        // pointers to point to the newly shifted location\n        updateSinglePointerValues(context, index + 3 /* Size */);\n    }\n}\n/**\n * @param {?} value\n * @param {?=} isClassBased\n * @return {?}\n */\nfunction valueExists(value, isClassBased) {\n    if (isClassBased) {\n        return value ? true : false;\n    }\n    return value !== null;\n}\n/**\n * @param {?} name\n * @param {?} isClassBased\n * @param {?=} sanitizer\n * @return {?}\n */\nfunction prepareInitialFlag(name, isClassBased, sanitizer) {\n    if (isClassBased) {\n        return 2 /* Class */;\n    }\n    else if (sanitizer && sanitizer(name)) {\n        return 4 /* Sanitize */;\n    }\n    return 0 /* None */;\n}\n/**\n * @param {?} flag\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction hasValueChanged(flag, a, b) {\n    /** @type {?} */\n    const isClassBased = flag & 2 /* Class */;\n    /** @type {?} */\n    const hasValues = a && b;\n    /** @type {?} */\n    const usesSanitizer = flag & 4 /* Sanitize */;\n    // the toString() comparison ensures that a value is checked\n    // ... otherwise (during sanitization bypassing) the === comparsion\n    // would fail since a new String() instance is created\n    if (!isClassBased && hasValues && usesSanitizer) {\n        // we know for sure we're dealing with strings at this point\n        return (/** @type {?} */ (a)).toString() !== (/** @type {?} */ (b)).toString();\n    }\n    // everything else is safe to check with a normal equality check\n    return a !== b;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n  @type {?} */\nconst NG_HOST_SYMBOL = '__ngHostLNode__';\n/** *\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n  @type {?} */\nconst _CLEAN_PROMISE = Promise.resolve(null);\n/** *\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n *\n * Note: Element is not actually stored at index 0 because of the LViewData\n * header, but the host bindings function expects an index that is NOT adjusted\n * because it will ultimately be fed to instructions like elementProperty.\n  @type {?} */\nconst _ROOT_DIRECTIVE_INDICES = [0, 0];\n/** *\n * TView.data needs to fill the same number of slots as the LViewData header\n * so the indices of nodes are consistent between LViewData and TView.data.\n *\n * It's much faster to keep a blueprint of the pre-filled array and slice it\n * than it is to create a new array and fill it each time a TView is created.\n  @type {?} */\nconst HEADER_FILLER = new Array(HEADER_OFFSET).fill(null);\n/** *\n * Token set in currentMatches while dependencies are being resolved.\n *\n * If we visit a directive that has a value set to CIRCULAR, we know we've\n * already seen it, and thus have a circular dependency.\n  @type {?} */\nconst CIRCULAR$2 = '__CIRCULAR__';\n/** *\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n  @type {?} */\nlet renderer;\n/** @type {?} */\nlet rendererFactory;\n/** @type {?} */\nlet currentElementNode = null;\n/**\n * @return {?}\n */\nfunction getRenderer() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return renderer;\n}\n/**\n * @return {?}\n */\nfunction getCurrentSanitizer() {\n    return viewData && viewData[SANITIZER];\n}\n/**\n * @return {?}\n */\nfunction getViewData() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return viewData;\n}\n/** *\n * Used to set the parent property when nodes are created.\n  @type {?} */\nlet previousOrParentNode;\n/**\n * @return {?}\n */\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/** *\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n  @type {?} */\nlet isParent;\n/** @type {?} */\nlet tView;\n/** @type {?} */\nlet currentQueries;\n/**\n * Query instructions can ask for \"current queries\" in 2 different cases:\n * - when creating view queries (at the root of a component view, before any node is created - in\n * this case currentQueries points to view queries)\n * - when creating content queries (inb this previousOrParentNode points to a node on which we\n * create content queries).\n * @param {?} QueryType\n * @return {?}\n */\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return currentQueries ||\n        (currentQueries =\n            (previousOrParentNode.queries && previousOrParentNode.queries.clone() ||\n                new QueryType()));\n}\n/** *\n * This property gets set before entering a template.\n  @type {?} */\nlet creationMode;\n/**\n * @return {?}\n */\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return creationMode;\n}\n/** *\n * State of the current view being processed.\n *\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n  @type {?} */\nlet viewData;\n/** *\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n  @type {?} */\nlet directives;\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getCleanup(view) {\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    return view[CLEANUP] || (view[CLEANUP] = []);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction getTViewCleanup(view) {\n    return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n}\n/** *\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n  @type {?} */\nlet checkNoChangesMode = false;\n/** *\n * Whether or not this is the first time the current view has been processed.\n  @type {?} */\nlet firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param {?} newView New state to become active\n * @param {?} host Element to which the View is a child of\n * @return {?} the previous state;\n */\nfunction enterView(newView, host) {\n    /** @type {?} */\n    const oldView = viewData;\n    directives = newView && newView[DIRECTIVES];\n    tView = newView && newView[TVIEW];\n    creationMode = newView && (newView[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && tView.firstTemplatePass;\n    renderer = newView && newView[RENDERER];\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    viewData = newView;\n    currentQueries = newView && newView[QUERIES];\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n *\n * @param {?} newView New state to become active\n * @param {?=} creationOnly An optional boolean to indicate that the view was processed in creation mode\n * only, i.e. the first update will be done later. Only possible for dynamically created views.\n * @return {?}\n */\nfunction leaveView(newView, creationOnly) {\n    if (!creationOnly) {\n        if (!checkNoChangesMode) {\n            executeHooks(/** @type {?} */ ((directives)), tView.viewHooks, tView.viewCheckHooks, creationMode);\n        }\n        // Views are clean and in update mode after being checked, so these bits are cleared\n        viewData[FLAGS] &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    }\n    viewData[FLAGS] |= 16 /* RunInit */;\n    viewData[BINDING_INDEX] = -1;\n    enterView(newView, null);\n}\n/**\n * Refreshes the view, executing the following steps in that order:\n * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n * bindings,\n * refreshes child components.\n * Note: view hooks are triggered later when leaving the view.\n * @return {?}\n */\nfunction refreshView() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n    }\n    refreshDynamicEmbeddedViews(viewData);\n    if (!checkNoChangesMode) {\n        executeHooks(/** @type {?} */ ((directives)), tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshContentQueries(tView);\n    refreshChildComponents(tView.components);\n}\n/**\n * Sets the host bindings for the current view.\n * @param {?} bindings\n * @return {?}\n */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        /** @type {?} */\n        const defs = /** @type {?} */ ((tView.directives));\n        for (let i = 0; i < bindings.length; i += 2) {\n            /** @type {?} */\n            const dirIndex = bindings[i];\n            /** @type {?} */\n            const def = /** @type {?} */ (defs[dirIndex]);\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i + 1]);\n        }\n    }\n}\n/**\n * Refreshes content queries for all directives in the given view.\n * @param {?} tView\n * @return {?}\n */\nfunction refreshContentQueries(tView) {\n    if (tView.contentQueries != null) {\n        for (let i = 0; i < tView.contentQueries.length; i += 2) {\n            /** @type {?} */\n            const directiveDefIdx = tView.contentQueries[i];\n            /** @type {?} */\n            const directiveDef = /** @type {?} */ ((tView.directives))[directiveDefIdx]; /** @type {?} */\n            ((directiveDef.contentQueriesRefresh))(directiveDefIdx, tView.contentQueries[i + 1]);\n        }\n    }\n}\n/**\n * Refreshes child components in the current view.\n * @param {?} components\n * @return {?}\n */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (let i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i + 1]);\n        }\n    }\n}\n/**\n * @return {?}\n */\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        executeInitHooks(viewData, tView, creationMode);\n        executeHooks(/** @type {?} */ ((directives)), tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\n/**\n * @template T\n * @param {?} renderer\n * @param {?} tView\n * @param {?} context\n * @param {?} flags\n * @param {?=} sanitizer\n * @return {?}\n */\nfunction createLViewData(renderer, tView, context, flags, sanitizer) {\n    return [\n        tView,\n        viewData,\n        null,\n        null,\n        // queries\n        flags | 1 /* CreationMode */ | 8 /* Attached */ | 16 /* RunInit */,\n        /** @type {?} */ ((null)),\n        // hostNode\n        -1,\n        null,\n        null,\n        context,\n        // context\n        viewData && viewData[INJECTOR$1],\n        renderer,\n        // renderer\n        sanitizer || null,\n        null,\n        // tail\n        -1,\n        null,\n    ];\n}\n/**\n * Creation of LNode object is extracted to a separate function so we always create LNode object\n * with the same shape\n * (same properties assigned in the same order).\n * @param {?} type\n * @param {?} currentView\n * @param {?} parent\n * @param {?} native\n * @param {?} state\n * @param {?} queries\n * @return {?}\n */\nfunction createLNodeObject(type, currentView, parent, native, state, queries) {\n    return {\n        native: /** @type {?} */ (native),\n        view: currentView,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: state,\n        queries: queries,\n        tNode: /** @type {?} */ ((null)),\n        dynamicLContainerNode: null\n    };\n}\n/**\n * @param {?} index\n * @param {?} type\n * @param {?} native\n * @param {?} name\n * @param {?} attrs\n * @param {?=} state\n * @return {?}\n */\nfunction createLNode(index, type, native, name, attrs, state) {\n    /** @type {?} */\n    const parent = isParent ? previousOrParentNode :\n        previousOrParentNode && /** @type {?} */ (((getParentLNode(previousOrParentNode))));\n    /** @type {?} */\n    const tParent = parent && parent.view === viewData ? /** @type {?} */ (parent.tNode) : null;\n    /** @type {?} */\n    let queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    /** @type {?} */\n    const isState = state != null;\n    /** @type {?} */\n    const node = createLNodeObject(type, viewData, parent, native, isState ? /** @type {?} */ (state) : null, queries);\n    if (index === -1 || type === 2 /* View */) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in TView.node.\n        node.tNode = (state ? (/** @type {?} */ (state))[TVIEW].node : null) ||\n            createTNode(type, index, null, null, tParent, null);\n    }\n    else {\n        /** @type {?} */\n        const adjustedIndex = index + HEADER_OFFSET;\n        // This is an element or container or projection node\n        ngDevMode && assertDataNext(adjustedIndex);\n        /** @type {?} */\n        const tData = tView.data;\n        viewData[adjustedIndex] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (adjustedIndex >= tData.length) {\n            /** @type {?} */\n            const tNode = tData[adjustedIndex] =\n                createTNode(type, adjustedIndex, name, attrs, tParent, null);\n            if (!isParent && previousOrParentNode) {\n                /** @type {?} */\n                const previousTNode = previousOrParentNode.tNode;\n                previousTNode.next = tNode;\n                if (previousTNode.dynamicContainerNode)\n                    previousTNode.dynamicContainerNode.next = tNode;\n            }\n        }\n        node.tNode = /** @type {?} */ (tData[adjustedIndex]);\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.tNode.child == null && previousOrParentNode.view === viewData ||\n                previousOrParentNode.tNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                previousOrParentNode.tNode.child = node.tNode;\n            }\n        }\n    }\n    // View nodes and host elements need to set their host node (components set host nodes later)\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        /** @type {?} */\n        const lViewData = /** @type {?} */ (state);\n        ngDevMode && assertNotDefined(lViewData[HOST_NODE], 'lViewData[HOST_NODE] should not have been initialized');\n        lViewData[HOST_NODE] = node;\n        if (firstTemplatePass)\n            lViewData[TVIEW].node = node.tNode;\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n/**\n * Resets the application state.\n * @return {?}\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ ((null));\n}\n/**\n * Used for creating the LViewNode of a dynamic embedded view,\n * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n * @template T\n * @param {?} tView\n * @param {?} context\n * @param {?} renderer\n * @param {?=} queries\n * @return {?}\n */\nfunction createEmbeddedViewNode(tView, context, renderer, queries) {\n    /** @type {?} */\n    const _isParent = isParent;\n    /** @type {?} */\n    const _previousOrParentNode = previousOrParentNode;\n    isParent = true;\n    previousOrParentNode = /** @type {?} */ ((null));\n    /** @type {?} */\n    const lView = createLViewData(renderer, tView, context, 2 /* CheckAlways */, getCurrentSanitizer());\n    if (queries) {\n        lView[QUERIES] = queries.createView();\n    }\n    /** @type {?} */\n    const viewNode = createLNode(-1, 2 /* View */, null, null, null, lView);\n    isParent = _isParent;\n    previousOrParentNode = _previousOrParentNode;\n    return viewNode;\n}\n/**\n * Used for rendering embedded views (e.g. dynamically created views)\n *\n * Dynamically created views must store/retrieve their TViews differently from component views\n * because their template functions are nested in the template functions of their hosts, creating\n * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n * TView for dynamically created views on their host TNode, which only has one instance.\n * @template T\n * @param {?} viewNode\n * @param {?} tView\n * @param {?} context\n * @param {?} rf\n * @return {?}\n */\nfunction renderEmbeddedTemplate(viewNode, tView, context, rf) {\n    /** @type {?} */\n    const _isParent = isParent;\n    /** @type {?} */\n    const _previousOrParentNode = previousOrParentNode;\n    /** @type {?} */\n    let oldView;\n    if (/** @type {?} */ ((viewNode.data))[PARENT] == null && /** @type {?} */ ((viewNode.data))[CONTEXT] && !tView.template) {\n        // This is a root view inside the view tree\n        tickRootContext(/** @type {?} */ (((viewNode.data))[CONTEXT]));\n    }\n    else {\n        try {\n            isParent = true;\n            previousOrParentNode = /** @type {?} */ ((null));\n            oldView = enterView(/** @type {?} */ ((viewNode.data)), viewNode);\n            namespaceHTML(); /** @type {?} */\n            ((tView.template))(rf, context);\n            if (rf & 2 /* Update */) {\n                refreshView();\n            }\n            else {\n                /** @type {?} */ ((viewNode.data))[TVIEW].firstTemplatePass = firstTemplatePass = false;\n            }\n        }\n        finally {\n            /** @type {?} */\n            const isCreationOnly = (rf & 1 /* Create */) === 1 /* Create */;\n            leaveView(/** @type {?} */ ((oldView)), isCreationOnly);\n            isParent = _isParent;\n            previousOrParentNode = _previousOrParentNode;\n        }\n    }\n    return viewNode;\n}\n/**\n * @template T\n * @param {?} node\n * @param {?} hostView\n * @param {?} componentOrContext\n * @param {?=} template\n * @return {?}\n */\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    /** @type {?} */\n    const oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            namespaceHTML();\n            template(getRenderFlags(hostView), /** @type {?} */ ((componentOrContext)));\n            refreshView();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, HEADER_OFFSET);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * This function returns the default configuration of rendering flags depending on when the\n * template is in creation mode or update mode. By default, the update block is run with the\n * creation block when the view is in creation mode. Otherwise, the update block is run\n * alone.\n *\n * Dynamically created views do NOT use this configuration (update block and create block are\n * always run separately).\n * @param {?} view\n * @return {?}\n */\nfunction getRenderFlags(view) {\n    return view[FLAGS] & 1 /* CreationMode */ ? 1 /* Create */ | 2 /* Update */ :\n        2 /* Update */;\n}\n/** @type {?} */\nlet _currentNamespace = null;\n/**\n * @return {?}\n */\nfunction namespaceSVG() {\n    _currentNamespace = 'http://www.w3.org/2000/svg/';\n}\n/**\n * @return {?}\n */\nfunction namespaceMathML() {\n    _currentNamespace = 'http://www.w3.org/1998/MathML/';\n}\n/**\n * @return {?}\n */\nfunction namespaceHTML() {\n    _currentNamespace = null;\n}\n/**\n * Creates an empty element using {\\@link elementStart} and {\\@link elementEnd}\n *\n * @param {?} index Index of the element in the data array\n * @param {?} name Name of the DOM Node\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @return {?}\n */\nfunction element(index, name, attrs, localRefs) {\n    elementStart(index, name, attrs, localRefs);\n    elementEnd();\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param {?} index Index of the element in the LViewData array\n * @param {?} name Name of the DOM Node\n * @param {?=} attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param {?=} localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n * @return {?}\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'elements should be created before any bindings');\n    ngDevMode && ngDevMode.rendererCreateElement++;\n    /** @type {?} */\n    const native = elementCreate(name);\n    ngDevMode && assertDataInRange(index - 1);\n    /** @type {?} */\n    const node = createLNode(index, 3 /* Element */, /** @type {?} */ ((native)), name, attrs || null, null);\n    currentElementNode = node;\n    if (attrs) {\n        setUpAttributes(native, attrs);\n    }\n    appendChild(getParentLNode(node), native, viewData);\n    createDirectivesAndLocals(localRefs);\n    return native;\n}\n/**\n * Creates a native element from a tag name, using a renderer.\n * @param {?} name the tag name\n * @param {?=} overriddenRenderer Optional A renderer to override the default one\n * @return {?} the element created\n */\nfunction elementCreate(name, overriddenRenderer) {\n    /** @type {?} */\n    let native;\n    /** @type {?} */\n    const rendererToUse = overriddenRenderer || renderer;\n    if (isProceduralRenderer(rendererToUse)) {\n        native = rendererToUse.createElement(name, _currentNamespace);\n    }\n    else {\n        if (_currentNamespace === null) {\n            native = rendererToUse.createElement(name);\n        }\n        else {\n            native = rendererToUse.createElementNS(_currentNamespace, name);\n        }\n    }\n    return native;\n}\n/**\n * Creates directive instances and populates local refs.\n *\n * @param {?=} localRefs Local refs of the current node\n * @return {?}\n */\nfunction createDirectivesAndLocals(localRefs) {\n    /** @type {?} */\n    const node = previousOrParentNode;\n    if (firstTemplatePass) {\n        ngDevMode && ngDevMode.firstTemplatePass++;\n        cacheMatchingDirectivesForNode(node.tNode, tView, localRefs || null);\n    }\n    else {\n        instantiateDirectivesDirectly();\n    }\n    saveResolvedLocalsInData();\n}\n/**\n * On first template pass, we match each node against available directive selectors and save\n * the resulting defs in the correct instantiation order for subsequent change detection runs\n * (so dependencies are always created before the directives that inject them).\n * @param {?} tNode\n * @param {?} tView\n * @param {?} localRefs\n * @return {?}\n */\nfunction cacheMatchingDirectivesForNode(tNode, tView, localRefs) {\n    /** @type {?} */\n    const exportsMap = localRefs ? { '': -1 } : null;\n    /** @type {?} */\n    const matches = tView.currentMatches = findDirectiveMatches(tNode);\n    if (matches) {\n        for (let i = 0; i < matches.length; i += 2) {\n            /** @type {?} */\n            const def = /** @type {?} */ (matches[i]);\n            /** @type {?} */\n            const valueIndex = i + 1;\n            resolveDirective(def, valueIndex, matches, tView);\n            saveNameToExportMap(/** @type {?} */ (matches[valueIndex]), def, exportsMap);\n        }\n    }\n    if (exportsMap)\n        cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n}\n/**\n * Matches the current node against all available selectors.\n * @param {?} tNode\n * @return {?}\n */\nfunction findDirectiveMatches(tNode) {\n    /** @type {?} */\n    const registry = tView.directiveRegistry;\n    /** @type {?} */\n    let matches = null;\n    if (registry) {\n        for (let i = 0; i < registry.length; i++) {\n            /** @type {?} */\n            const def = registry[i];\n            if (isNodeMatchingSelectorList(tNode, /** @type {?} */ ((def.selectors)))) {\n                if ((/** @type {?} */ (def)).template) {\n                    if (tNode.flags & 4096 /* isComponent */)\n                        throwMultipleComponentError(tNode);\n                    tNode.flags = 4096 /* isComponent */;\n                }\n                if (def.diPublic)\n                    def.diPublic(def);\n                (matches || (matches = [])).push(def, null);\n            }\n        }\n    }\n    return /** @type {?} */ (matches);\n}\n/**\n * @param {?} def\n * @param {?} valueIndex\n * @param {?} matches\n * @param {?} tView\n * @return {?}\n */\nfunction resolveDirective(def, valueIndex, matches, tView) {\n    if (matches[valueIndex] === null) {\n        matches[valueIndex] = CIRCULAR$2;\n        /** @type {?} */\n        const instance = def.factory();\n        (tView.directives || (tView.directives = [])).push(def);\n        return directiveCreate(matches[valueIndex] = /** @type {?} */ ((tView.directives)).length - 1, instance, def);\n    }\n    else if (matches[valueIndex] === CIRCULAR$2) {\n        // If we revisit this directive before it's resolved, we know it's circular\n        throwCyclicDependencyError(def.type);\n    }\n    return null;\n}\n/**\n * Stores index of component's host element so it will be queued for view refresh during CD.\n * @param {?} dirIndex\n * @return {?}\n */\nfunction queueComponentIndexForCheck(dirIndex) {\n    if (firstTemplatePass) {\n        (tView.components || (tView.components = [])).push(dirIndex, viewData.length - 1);\n    }\n}\n/**\n * Stores index of directive and host element so it will be queued for binding refresh during CD.\n * @param {?} dirIndex\n * @return {?}\n */\nfunction queueHostBindingForCheck(dirIndex) {\n    // Must subtract the header offset because hostBindings functions are generated with\n    // instructions that expect element indices that are NOT adjusted (e.g. elementProperty).\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (tView.hostBindings || (tView.hostBindings = [])).push(dirIndex, viewData.length - 1 - HEADER_OFFSET);\n}\n/**\n * Sets the context for a ChangeDetectorRef to the given instance.\n * @param {?} injector\n * @param {?} instance\n * @param {?} view\n * @return {?}\n */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        (/** @type {?} */ (injector.changeDetectorRef))._setComponentContext(view, instance);\n    }\n}\n/**\n * @param {?} tNode\n * @return {?}\n */\nfunction isComponent(tNode) {\n    return (tNode.flags & 4096 /* isComponent */) === 4096 /* isComponent */;\n}\n/**\n * This function instantiates the given directives.\n * @return {?}\n */\nfunction instantiateDirectivesDirectly() {\n    /** @type {?} */\n    const tNode = previousOrParentNode.tNode;\n    /** @type {?} */\n    const count = tNode.flags & 4095 /* DirectiveCountMask */;\n    if (count > 0) {\n        /** @type {?} */\n        const start = tNode.flags >> 14 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        const end = start + count;\n        /** @type {?} */\n        const tDirectives = /** @type {?} */ ((tView.directives));\n        for (let i = start; i < end; i++) {\n            /** @type {?} */\n            const def = tDirectives[i];\n            directiveCreate(i, def.factory(), def);\n        }\n    }\n}\n/**\n * Caches local names and their matching directive indices for query and template lookups.\n * @param {?} tNode\n * @param {?} localRefs\n * @param {?} exportsMap\n * @return {?}\n */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        /** @type {?} */\n        const localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (let i = 0; i < localRefs.length; i += 2) {\n            /** @type {?} */\n            const index = exportsMap[localRefs[i + 1]];\n            if (index == null)\n                throw new Error(`Export of name '${localRefs[i + 1]}' not found!`);\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n * @param {?} index\n * @param {?} def\n * @param {?} exportsMap\n * @return {?}\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if ((/** @type {?} */ (def)).template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to LViewData in the same order as they are loaded in the template with load().\n * @return {?}\n */\nfunction saveResolvedLocalsInData() {\n    /** @type {?} */\n    const localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (let i = 0; i < localNames.length; i += 2) {\n            /** @type {?} */\n            const index = /** @type {?} */ (localNames[i + 1]);\n            /** @type {?} */\n            const value = index === -1 ? previousOrParentNode.native : /** @type {?} */ ((directives))[index];\n            viewData.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param {?} template The template from which to get static data\n * @param {?} directives Directive defs that should be saved on TView\n * @param {?} pipes Pipe defs that should be saved on TView\n * @param {?} viewQuery\n * @return {?} TView\n */\nfunction getOrCreateTView(template, directives, pipes, viewQuery) {\n    // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n    // 1. It is a megamorphic call on each invocation.\n    // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n    //    outer template invocation, which means that no such property will exist\n    // Correct solution is to only put `ngPrivateData` on the Component template\n    // and not on embedded templates.\n    return template.ngPrivateData ||\n        (template.ngPrivateData = /** @type {?} */ (createTView(-1, template, directives, pipes, viewQuery)));\n}\n/**\n * Creates a TView instance\n *\n * @param {?} viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n * @param {?} template\n * @param {?} directives Registry of directives for this view\n * @param {?} pipes Registry of pipes for this view\n * @param {?} viewQuery\n * @return {?}\n */\nfunction createTView(viewIndex, template, directives, pipes, viewQuery) {\n    ngDevMode && ngDevMode.tView++;\n    return {\n        id: viewIndex,\n        template: template,\n        viewQuery: viewQuery,\n        node: /** @type {?} */ ((null)),\n        data: HEADER_FILLER.slice(),\n        // Fill in to match HEADER_OFFSET in LViewData\n        childIndex: -1,\n        // Children set in addToViewTree(), if any\n        bindingStartIndex: -1,\n        // Set in initBindings()\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        cleanup: null,\n        hostBindings: null,\n        contentQueries: null,\n        components: null,\n        directiveRegistry: typeof directives === 'function' ? directives() : directives,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n        currentMatches: null\n    };\n}\n/**\n * @param {?} native\n * @param {?} attrs\n * @return {?}\n */\nfunction setUpAttributes(native, attrs) {\n    /** @type {?} */\n    const isProc = isProceduralRenderer(renderer);\n    /** @type {?} */\n    let i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        const attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === NG_PROJECT_AS_ATTR_NAME) {\n            i += 2;\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            if (attrName === 0 /* NamespaceURI */) {\n                /** @type {?} */\n                const namespaceURI = /** @type {?} */ (attrs[i + 1]);\n                /** @type {?} */\n                const attrName = /** @type {?} */ (attrs[i + 2]);\n                /** @type {?} */\n                const attrVal = /** @type {?} */ (attrs[i + 3]);\n                isProc ?\n                    (/** @type {?} */ (renderer))\n                        .setAttribute(native, attrName, attrVal, namespaceURI) :\n                    native.setAttributeNS(namespaceURI, attrName, attrVal);\n                i += 4;\n            }\n            else {\n                /** @type {?} */\n                const attrVal = attrs[i + 1];\n                isProc ?\n                    (/** @type {?} */ (renderer))\n                        .setAttribute(native, /** @type {?} */ (attrName), /** @type {?} */ (attrVal)) :\n                    native.setAttribute(/** @type {?} */ (attrName), /** @type {?} */ (attrVal));\n                i += 2;\n            }\n        }\n    }\n}\n/**\n * @param {?} text\n * @param {?} token\n * @return {?}\n */\nfunction createError(text, token) {\n    return new Error(`Renderer: ${text} [${stringify$1(token)}]`);\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param {?} factory\n * @param {?} elementOrSelector Render element or CSS selector to locate the element.\n * @return {?}\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    /** @type {?} */\n    const defaultRenderer = factory.createRenderer(null, null);\n    /** @type {?} */\n    const rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param {?} tag\n * @param {?} rNode Render host element.\n * @param {?} def ComponentDef\n *\n * @param {?=} sanitizer\n * @return {?} LElementNode created\n */\nfunction hostElement(tag, rNode, def, sanitizer) {\n    resetApplicationState();\n    /** @type {?} */\n    const node = createLNode(0, 3 /* Element */, rNode, null, null, createLViewData(renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, sanitizer));\n    if (firstTemplatePass) {\n        node.tNode.flags = 4096 /* isComponent */;\n        if (def.diPublic)\n            def.diPublic(def);\n        tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param {?} eventName Name of the event\n * @param {?} listenerFn The function to be called when event emits\n * @param {?=} useCapture Whether or not to use capture in event listener.\n * @return {?}\n */\nfunction listener(eventName, listenerFn, useCapture = false) {\n    ngDevMode && assertPreviousIsParent();\n    /** @type {?} */\n    const node = previousOrParentNode;\n    /** @type {?} */\n    const native = /** @type {?} */ (node.native);\n    ngDevMode && ngDevMode.rendererAddEventListener++;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    if (isProceduralRenderer(renderer)) {\n        /** @type {?} */\n        const wrappedListener = wrapListenerWithDirtyLogic(viewData, listenerFn);\n        /** @type {?} */\n        const cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        storeCleanupFn(viewData, cleanupFn);\n    }\n    else {\n        /** @type {?} */\n        const wrappedListener = wrapListenerWithDirtyAndDefault(viewData, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        /** @type {?} */\n        const cleanupInstances = getCleanup(viewData);\n        cleanupInstances.push(wrappedListener);\n        if (firstTemplatePass) {\n            getTViewCleanup(viewData).push(eventName, node.tNode.index, /** @type {?} */ ((cleanupInstances)).length - 1, useCapture);\n        }\n    }\n    /** @type {?} */\n    let tNode = node.tNode;\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    /** @type {?} */\n    const outputs = tNode.outputs;\n    /** @type {?} */\n    let outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n * @param {?} outputs\n * @param {?} listener\n * @return {?}\n */\nfunction createOutput(outputs, listener) {\n    for (let i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (outputs[i]), /** @type {?} */ ((directives)));\n        /** @type {?} */\n        const subscription = /** @type {?} */ ((directives))[/** @type {?} */ (outputs[i])][outputs[i + 1]].subscribe(listener);\n        storeCleanupWithContext(viewData, subscription, subscription.unsubscribe);\n    }\n}\n/**\n * Saves context for this cleanup function in LView.cleanupInstances.\n *\n * On the first template pass, saves in TView:\n * - Cleanup function\n * - Index of context we just saved in LView.cleanupInstances\n * @param {?} view\n * @param {?} context\n * @param {?} cleanupFn\n * @return {?}\n */\nfunction storeCleanupWithContext(view, context, cleanupFn) {\n    if (!view)\n        view = viewData;\n    getCleanup(view).push(context);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(cleanupFn, /** @type {?} */ ((view[CLEANUP])).length - 1);\n    }\n}\n/**\n * Saves the cleanup function itself in LView.cleanupInstances.\n *\n * This is necessary for functions that are wrapped with their contexts, like in renderer2\n * listeners.\n *\n * On the first template pass, the index of the cleanup function is saved in TView.\n * @param {?} view\n * @param {?} cleanupFn\n * @return {?}\n */\nfunction storeCleanupFn(view, cleanupFn) {\n    getCleanup(view).push(cleanupFn);\n    if (view[TVIEW].firstTemplatePass) {\n        getTViewCleanup(view).push(/** @type {?} */ ((view[CLEANUP])).length - 1, null);\n    }\n}\n/**\n * Mark the end of the element.\n * @return {?}\n */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ (getParentLNode(previousOrParentNode));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    /** @type {?} */\n    const queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, tView);\n    currentElementNode = null;\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param {?} index\n * @param {?} name name The name of the attribute.\n * @param {?} value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        /** @type {?} */\n        const element = loadElement(index);\n        if (value == null) {\n            ngDevMode && ngDevMode.rendererRemoveAttribute++;\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element.native, name) :\n                element.native.removeAttribute(name);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererSetAttribute++;\n            /** @type {?} */\n            const strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element.native, name, strValue) :\n                element.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new \\@Inputs don't have to be re-compiled.\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param {?} value New value to write.\n * @param {?=} sanitizer An optional function used to sanitize the value.\n * @return {?}\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    /** @type {?} */\n    const node = /** @type {?} */ (loadElement(index));\n    /** @type {?} */\n    const tNode = node.tNode;\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    /** @type {?} */\n    const inputData = tNode && tNode.inputs;\n    /** @type {?} */\n    let dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? (/** @type {?} */ (sanitizer(value))) : value;\n        /** @type {?} */\n        const native = node.native;\n        ngDevMode && ngDevMode.rendererSetProperty++;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                (/** @type {?} */ (native))[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param {?} type The type of the node\n * @param {?} adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n * @param {?} tagName The tag name of the node\n * @param {?} attrs The attributes defined on this node\n * @param {?} parent The parent of this node\n * @param {?} tViews Any TViews attached to this node\n * @return {?} the TNode object\n */\nfunction createTNode(type, adjustedIndex, tagName, attrs, parent, tViews) {\n    ngDevMode && ngDevMode.tNode++;\n    return {\n        type: type,\n        index: adjustedIndex,\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        tViews: tViews,\n        next: null,\n        child: null,\n        parent: parent,\n        dynamicContainerNode: null,\n        detached: null,\n        stylingTemplate: null,\n        projection: null\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n * @param {?} inputs\n * @param {?} value\n * @return {?}\n */\nfunction setInputsForProperty(inputs, value) {\n    for (let i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(/** @type {?} */ (inputs[i]), /** @type {?} */ ((directives))); /** @type {?} */\n        ((directives))[/** @type {?} */ (inputs[i])][inputs[i + 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param {?} tNodeFlags\n * @param {?} direction\n * @return {?} PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    /** @type {?} */\n    const count = tNodeFlags & 4095 /* DirectiveCountMask */;\n    /** @type {?} */\n    let propStore = null;\n    if (count > 0) {\n        /** @type {?} */\n        const start = tNodeFlags >> 14 /* DirectiveStartingIndexShift */;\n        /** @type {?} */\n        const end = start + count;\n        /** @type {?} */\n        const isInput = direction === 0 /* Input */;\n        /** @type {?} */\n        const defs = /** @type {?} */ ((tView.directives));\n        for (let i = start; i < end; i++) {\n            /** @type {?} */\n            const directiveDef = /** @type {?} */ (defs[i]);\n            /** @type {?} */\n            const propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (let publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    /** @type {?} */\n                    const internalName = propertyAliasMap[publicName];\n                    /** @type {?} */\n                    const hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @template T\n * @param {?} index The index of the element to update in the data array\n * @param {?} stylingIndex\n * @param {?} value A value indicating if a given class should be added or removed.\n * @return {?}\n */\nfunction elementClassProp(index, stylingIndex, value) {\n    updateClassProp(getStylingContext(index), stylingIndex, value ? true : false);\n}\n/**\n * Assign any inline style values to the element during creation mode.\n *\n * This instruction is meant to be called during creation mode to apply all styling\n * (e.g. `style=\"...\"`) values to the element. This is also where the provided index\n * value is allocated for the styling details for its corresponding element (the element\n * index is the previous index value from this one).\n *\n * (Note this function calls `elementStylingApply` immediately when called.)\n *\n *\n * @template T\n * @param {?=} classDeclarations A key/value array of CSS classes that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any classes placed on the element by multiple (`[class]`) or singular (`[class.named]`)\n *   bindings. If a class binding changes its value to a falsy value then the matching initial\n *   class value that are passed in here will be applied to the element (if matched).\n * @param {?=} styleDeclarations A key/value array of CSS styles that will be registered on the element.\n *   Each individual style will be used on the element as long as it is not overridden\n *   by any styles placed on the element by multiple (`[style]`) or singular (`[style.prop]`)\n *   bindings. If a style binding changes its value to null then the initial styling\n *   values that are passed in here will be applied to the element (if matched).\n * @param {?=} styleSanitizer An optional sanitizer function that will be used (if provided)\n *   to sanitize the any CSS property values that are applied to the element (during rendering).\n * @return {?}\n */\nfunction elementStyling(classDeclarations, styleDeclarations, styleSanitizer) {\n    /** @type {?} */\n    const lElement = /** @type {?} */ ((currentElementNode));\n    /** @type {?} */\n    const tNode = lElement.tNode;\n    if (!tNode.stylingTemplate) {\n        // initialize the styling template.\n        tNode.stylingTemplate =\n            createStylingContextTemplate(classDeclarations, styleDeclarations, styleSanitizer);\n    }\n    if (styleDeclarations && styleDeclarations.length ||\n        classDeclarations && classDeclarations.length) {\n        elementStylingApply(tNode.index - HEADER_OFFSET);\n    }\n}\n/**\n * Retrieve the `StylingContext` at a given index.\n *\n * This method lazily creates the `StylingContext`. This is because in most cases\n * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n * which would create unnecessary memory pressure.\n *\n * @param {?} index Index of the style allocation. See: `elementStyling`.\n * @return {?}\n */\nfunction getStylingContext(index) {\n    /** @type {?} */\n    let stylingContext = load(index);\n    if (!Array.isArray(stylingContext)) {\n        /** @type {?} */\n        const lElement = /** @type {?} */ ((stylingContext));\n        /** @type {?} */\n        const tNode = lElement.tNode;\n        ngDevMode &&\n            assertDefined(tNode.stylingTemplate, 'getStylingContext() called before elementStyling()');\n        stylingContext = viewData[index + HEADER_OFFSET] =\n            allocStylingContext(lElement, /** @type {?} */ ((tNode.stylingTemplate)));\n    }\n    return stylingContext;\n}\n/**\n * Apply all styling values to the element which have been queued by any styling instructions.\n *\n * This instruction is meant to be run once one or more `elementStyle` and/or `elementStyleProp`\n * have been issued against the element. This function will also determine if any styles have\n * changed and will then skip the operation if there is nothing new to render.\n *\n * Once called then all queued styles will be flushed.\n *\n * @template T\n * @param {?} index Index of the element's styling storage that will be rendered.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @return {?}\n */\nfunction elementStylingApply(index) {\n    renderStyling(getStylingContext(index), renderer);\n}\n/**\n * Queue a given style to be rendered on an Element.\n *\n * If the style value is `null` then it will be removed from the element\n * (or assigned a different value depending if there are any styles placed\n * on the element with `elementStyle` or any styles that are present\n * from when the element was created (with `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @template T\n * @param {?} index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param {?} styleIndex Index of the style property on this element. (Monotonically increasing.)\n * @param {?} value New value to write (null to remove).\n * @param {?=} suffix Optional suffix. Used with scalar values to add unit such as `px`.\n *        Note that when a suffix is provided then the underlying sanitizer will\n *        be ignored.\n * @return {?}\n */\nfunction elementStyleProp(index, styleIndex, value, suffix) {\n    /** @type {?} */\n    let valueToAdd = null;\n    if (value) {\n        if (suffix) {\n            // when a suffix is applied then it will bypass\n            // sanitization entirely (b/c a new string is created)\n            valueToAdd = stringify$1(value) + suffix;\n        }\n        else {\n            // sanitization happens by dealing with a String value\n            // this means that the string value will be passed through\n            // into the style rendering later (which is where the value\n            // will be sanitized before it is applied)\n            valueToAdd = /** @type {?} */ ((value));\n        }\n    }\n    updateStyleProp(getStylingContext(index), styleIndex, valueToAdd);\n}\n/**\n * Queue a key/value map of styles to be rendered on an Element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage. When styles are applied to\n * the Element they will then be placed with respect to any styles set with `elementStyleProp`.\n * If any styles are set to `null` then they will be removed from the element (unless the same\n * style properties have been assigned to the element during creation using `elementStyling`).\n *\n * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n *\n * @template T\n * @param {?} index Index of the element's styling storage to change in the data array.\n *        (Note that this is not the element index, but rather an index value allocated\n *        specifically for element styling--the index must be the next index after the element\n *        index.)\n * @param {?} classes A key/value style map of CSS classes that will be added to the given element.\n *        Any missing classes (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's list of CSS classes.\n * @param {?=} styles A key/value style map of the styles that will be applied to the given element.\n *        Any missing styles (that have already been applied to the element beforehand) will be\n *        removed (unset) from the element's styling.\n * @return {?}\n */\nfunction elementStylingMap(index, classes, styles) {\n    updateStylingMap(getStylingContext(index), classes, styles);\n}\n/**\n * Create static text node\n *\n * @param {?} index Index of the node in the data array\n * @param {?=} value Value to write. This value will be stringified.\n * @return {?}\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'text nodes should be created before bindings');\n    ngDevMode && ngDevMode.rendererCreateTextNode++;\n    /** @type {?} */\n    const textNode = createTextNode(value, renderer);\n    /** @type {?} */\n    const node = createLNode(index, 3 /* Element */, textNode, null, null);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild(getParentLNode(node), textNode, viewData);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper interpolation(1-8) method\n *\n * @template T\n * @param {?} index Index of the node in the data array.\n * @param {?} value Stringified value to write.\n * @return {?}\n */\nfunction textBinding(index, value) {\n    if (value !== NO_CHANGE) {\n        ngDevMode && assertDataInRange(index + HEADER_OFFSET);\n        /** @type {?} */\n        const existingNode = /** @type {?} */ ((loadElement(index)));\n        ngDevMode && assertDefined(existingNode, 'LNode should exist');\n        ngDevMode && assertDefined(existingNode.native, 'native element should exist');\n        ngDevMode && ngDevMode.rendererSetText++;\n        isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n            existingNode.native.textContent = stringify$1(value);\n    }\n}\n/**\n * Create a directive and their associated content queries.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @template T\n * @param {?} directiveDefIdx\n * @param {?} directive The directive instance.\n * @param {?} directiveDef DirectiveDef object which contains information about the template.\n * @return {?}\n */\nfunction directiveCreate(directiveDefIdx, directive, directiveDef) {\n    /** @type {?} */\n    const instance = baseDirectiveCreate(directiveDefIdx, directive, directiveDef);\n    ngDevMode && assertDefined(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    /** @type {?} */\n    const tNode = previousOrParentNode.tNode;\n    /** @type {?} */\n    const isComponent = (/** @type {?} */ (directiveDef)).template;\n    if (isComponent) {\n        addComponentLogic(directiveDefIdx, directive, /** @type {?} */ (directiveDef));\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(directiveDefIdx, directiveDef.onInit, directiveDef.doCheck, tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(directiveDefIdx);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(directiveDefIdx, instance, directiveDef.inputs, tNode);\n    }\n    if (directiveDef.contentQueries) {\n        directiveDef.contentQueries();\n    }\n    return instance;\n}\n/**\n * @template T\n * @param {?} directiveIndex\n * @param {?} instance\n * @param {?} def\n * @return {?}\n */\nfunction addComponentLogic(directiveIndex, instance, def) {\n    /** @type {?} */\n    const tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs, def.viewQuery);\n    /** @type {?} */\n    const componentView = addToViewTree(viewData, /** @type {?} */ (previousOrParentNode.tNode.index), createLViewData(rendererFactory.createRenderer(/** @type {?} */ (previousOrParentNode.native), def.rendererType), tView, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */, getCurrentSanitizer()));\n    // We need to set the host node/data here because when the component LNode was created,\n    // we didn't yet know it was a component (just an element).\n    (/** @type {?} */ (previousOrParentNode)).data = componentView;\n    (/** @type {?} */ (componentView))[HOST_NODE] = /** @type {?} */ (previousOrParentNode);\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, componentView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(directiveIndex);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n * @template T\n * @param {?} index\n * @param {?} directive\n * @param {?} directiveDef\n * @return {?}\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        viewData[DIRECTIVES] = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    if (firstTemplatePass) {\n        /** @type {?} */\n        const flags = previousOrParentNode.tNode.flags;\n        if ((flags & 4095 /* DirectiveCountMask */) === 0) {\n            // When the first directive is created:\n            // - save the index,\n            // - set the number of directives to 1\n            previousOrParentNode.tNode.flags =\n                index << 14 /* DirectiveStartingIndexShift */ | flags & 4096 /* isComponent */ | 1;\n        }\n        else {\n            // Only need to bump the size when subsequent directives are created\n            ngDevMode && assertNotEqual(flags & 4095 /* DirectiveCountMask */, 4095 /* DirectiveCountMask */, 'Reached the max number of directives');\n            previousOrParentNode.tNode.flags++;\n        }\n    }\n    else {\n        /** @type {?} */\n        const diPublic = /** @type {?} */ ((directiveDef)).diPublic;\n        if (diPublic)\n            diPublic(/** @type {?} */ ((directiveDef)));\n    }\n    if (/** @type {?} */ ((directiveDef)).attributes != null && previousOrParentNode.tNode.type == 3 /* Element */) {\n        setUpAttributes((/** @type {?} */ (previousOrParentNode)).native, /** @type {?} */ (((directiveDef)).attributes));\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @template T\n * @param {?} directiveIndex Index of the directive in directives array\n * @param {?} instance Instance of the directive on which to set the initial inputs\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data for this node\n * @return {?}\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    /** @type {?} */\n    let initialInputData = /** @type {?} */ (tNode.initialInputs);\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    /** @type {?} */\n    const initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (let i = 0; i < initialInputs.length; i += 2) {\n            (/** @type {?} */ (instance))[initialInputs[i]] = initialInputs[i + 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an \\@Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` \\@Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param {?} directiveIndex Index to store the initial input data\n * @param {?} inputs The list of inputs from the directive def\n * @param {?} tNode The static data on this node\n * @return {?}\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    /** @type {?} */\n    const initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    /** @type {?} */\n    const attrs = /** @type {?} */ ((tNode.attrs));\n    /** @type {?} */\n    let i = 0;\n    while (i < attrs.length) {\n        /** @type {?} */\n        const attrName = attrs[i];\n        if (attrName === 1 /* SelectOnly */)\n            break;\n        if (attrName === 0 /* NamespaceURI */) {\n            // We do not allow inputs on namespaced attributes.\n            i += 4;\n            continue;\n        }\n        /** @type {?} */\n        const minifiedInputName = inputs[attrName];\n        /** @type {?} */\n        const attrValue = attrs[i + 1];\n        if (minifiedInputName !== undefined) {\n            /** @type {?} */\n            const inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, /** @type {?} */ (attrValue));\n        }\n        i += 2;\n    }\n    return initialInputData;\n}\n/**\n * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n *\n * @param {?} parentLNode the LNode in which the container's content will be rendered\n * @param {?} currentView The parent view of the LContainer\n * @param {?=} isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n * @return {?} LContainer\n */\nfunction createLContainer(parentLNode, currentView, isForViewContainerRef) {\n    ngDevMode && assertDefined(parentLNode, 'containers should have a parent');\n    /** @type {?} */\n    let renderParent = canInsertNativeNode(parentLNode, currentView) ? /** @type {?} */ (parentLNode) :\n        null;\n    if (renderParent && renderParent.tNode.type === 2 /* View */) {\n        renderParent = /** @type {?} */ ((getParentLNode(/** @type {?} */ (renderParent)))).data[RENDER_PARENT];\n    }\n    return [\n        isForViewContainerRef ? null : 0,\n        currentView,\n        null,\n        null,\n        // queries\n        [],\n        /** @type {?} */ (renderParent)\n    ];\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param {?} index The index of the container in the data array\n * @param {?=} template Optional inline template\n * @param {?=} tagName The name of the container element, if applicable\n * @param {?=} attrs The attrs attached to the container, if applicable\n * @param {?=} localRefs A set of local reference bindings on the element.\n * @return {?}\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertEqual(viewData[BINDING_INDEX], -1, 'container nodes should be created before any bindings');\n    /** @type {?} */\n    const currentParent = isParent ? previousOrParentNode : /** @type {?} */ ((getParentLNode(previousOrParentNode)));\n    /** @type {?} */\n    const lContainer = createLContainer(currentParent, viewData);\n    /** @type {?} */\n    const comment = renderer.createComment(ngDevMode ? 'container' : '');\n    /** @type {?} */\n    const node = createLNode(index, 0 /* Container */, comment, tagName || null, attrs || null, lContainer);\n    appendChild(getParentLNode(node), comment, viewData);\n    if (firstTemplatePass) {\n        node.tNode.tViews = template ?\n            createTView(-1, template, tView.directiveRegistry, tView.pipeRegistry, null) :\n            [];\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(viewData, index + HEADER_OFFSET, node.data);\n    /** @type {?} */\n    const queries = node.queries;\n    if (queries) {\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer[QUERIES] = queries.container();\n    }\n    createDirectivesAndLocals(localRefs);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    queries && queries.addNode(node); // check if a given container node matches\n    queueLifecycleHooks(node.tNode.flags, tView);\n}\n/**\n * Sets a container up to receive views.\n *\n * @param {?} index The index of the container in the data array\n * @return {?}\n */\nfunction containerRefreshStart(index) {\n    previousOrParentNode = /** @type {?} */ (loadElement(index));\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    (/** @type {?} */ (previousOrParentNode)).data[ACTIVE_INDEX] = 0;\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(viewData, tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n * @return {?}\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = /** @type {?} */ ((getParentLNode(previousOrParentNode)));\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    /** @type {?} */\n    const container = /** @type {?} */ (previousOrParentNode);\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    /** @type {?} */\n    const nextIndex = /** @type {?} */ ((container.data[ACTIVE_INDEX]));\n    // remove extra views at the end of the container\n    while (nextIndex < container.data[VIEWS].length) {\n        removeView(container, nextIndex);\n    }\n}\n/**\n * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n * by executing an associated template function.\n * @param {?} lViewData\n * @return {?}\n */\nfunction refreshDynamicEmbeddedViews(lViewData) {\n    for (let current = getLViewChild(lViewData); current !== null; current = current[NEXT]) {\n        // Note: current can be an LViewData or an LContainer instance, but here we are only interested\n        // in LContainer. We can tell it's an LContainer because its length is less than the LViewData\n        // header.\n        if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === null) {\n            /** @type {?} */\n            const container = /** @type {?} */ (current);\n            for (let i = 0; i < container[VIEWS].length; i++) {\n                /** @type {?} */\n                const lViewNode = container[VIEWS][i];\n                /** @type {?} */\n                const dynamicViewData = lViewNode.data;\n                ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                renderEmbeddedTemplate(lViewNode, dynamicViewData[TVIEW], /** @type {?} */ ((dynamicViewData[CONTEXT])), 2 /* Update */);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param {?} containerNode where to search for views\n * @param {?} startIdx starting index in the views array to search from\n * @param {?} viewBlockId exact view block id to look for\n * @return {?} index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    /** @type {?} */\n    const views = containerNode.data[VIEWS];\n    for (let i = startIdx; i < views.length; i++) {\n        /** @type {?} */\n        const viewAtPositionId = views[i].data[TVIEW].id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id greater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param {?} viewBlockId The ID of this view\n * @return {?} boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    /** @type {?} */\n    const container = /** @type {?} */ ((isParent ? previousOrParentNode : getParentLNode(previousOrParentNode)));\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    /** @type {?} */\n    const lContainer = container.data;\n    /** @type {?} */\n    let viewNode = scanForView(container, /** @type {?} */ ((lContainer[ACTIVE_INDEX])), viewBlockId);\n    if (viewNode) {\n        previousOrParentNode = viewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(viewNode.data, viewNode);\n    }\n    else {\n        /** @type {?} */\n        const newView = createLViewData(renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, 2 /* CheckAlways */, getCurrentSanitizer());\n        if (lContainer[QUERIES]) {\n            newView[QUERIES] = /** @type {?} */ ((lContainer[QUERIES])).createView();\n        }\n        enterView(newView, viewNode = createLNode(viewBlockId, 2 /* View */, null, null, null, newView));\n    }\n    if (container) {\n        if (creationMode) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(container, viewNode, /** @type {?} */ ((lContainer[ACTIVE_INDEX])));\n        } /** @type {?} */\n        ((lContainer[ACTIVE_INDEX]))++;\n    }\n    return getRenderFlags(viewNode.data);\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n * static data for a particular node would overwrite the static data for a node in the view above\n * it with the same index (since it's in the same template).\n *\n * @param {?} viewIndex The index of the TView in TNode.tViews\n * @param {?} parent The parent container in which to look for the view's static data\n * @return {?} TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    /** @type {?} */\n    const containerTViews = /** @type {?} */ ((/** @type {?} */ (((parent)).tNode)).tViews);\n    ngDevMode && assertDefined(containerTViews, 'TView expected');\n    ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n    if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n        containerTViews[viewIndex] =\n            createTView(viewIndex, null, tView.directiveRegistry, tView.pipeRegistry, null);\n    }\n    return containerTViews[viewIndex];\n}\n/**\n * Marks the end of an embedded view.\n * @return {?}\n */\nfunction embeddedViewEnd() {\n    refreshView();\n    isParent = false;\n    previousOrParentNode = /** @type {?} */ (viewData[HOST_NODE]);\n    leaveView(/** @type {?} */ ((viewData[PARENT])));\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @template T\n * @param {?} directiveIndex Directive index in LViewData[DIRECTIVES]\n * @param {?} adjustedElementIndex  Element index in LViewData[] (adjusted for HEADER_OFFSET)\n * @return {?}\n */\nfunction componentRefresh(directiveIndex, adjustedElementIndex) {\n    ngDevMode && assertDataInRange(adjustedElementIndex);\n    /** @type {?} */\n    const element = /** @type {?} */ (viewData[adjustedElementIndex]);\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode &&\n        assertDefined(element.data, `Component's host node should have an LViewData attached.`);\n    /** @type {?} */\n    const hostView = /** @type {?} */ ((element.data));\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView[FLAGS] & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, /** @type {?} */ ((directives)));\n        detectChangesInternal(hostView, element, /** @type {?} */ ((directives))[directiveIndex]);\n    }\n}\n/**\n * Returns a boolean for whether the view is attached\n * @param {?} view\n * @return {?}\n */\nfunction viewAttached(view) {\n    return (view[FLAGS] & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param {?=} selectors A collection of parsed CSS selectors\n * @param {?=} textSelectors\n * @return {?}\n */\nfunction projectionDef(selectors, textSelectors) {\n    /** @type {?} */\n    const componentNode = findComponentHost(viewData);\n    if (!componentNode.tNode.projection) {\n        /** @type {?} */\n        const noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n        /** @type {?} */\n        const pData = componentNode.tNode.projection =\n            new Array(noOfNodeBuckets).fill(null);\n        /** @type {?} */\n        const tails = pData.slice();\n        /** @type {?} */\n        let componentChild = componentNode.tNode.child;\n        while (componentChild !== null) {\n            /** @type {?} */\n            const bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, /** @type {?} */ ((textSelectors))) : 0;\n            /** @type {?} */\n            const nextNode = componentChild.next;\n            if (tails[bucketIndex]) {\n                /** @type {?} */ ((tails[bucketIndex])).next = componentChild;\n            }\n            else {\n                pData[bucketIndex] = componentChild;\n                componentChild.next = null;\n            }\n            tails[bucketIndex] = componentChild;\n            componentChild = nextNode;\n        }\n    }\n}\n/** *\n * Stack used to keep track of projection nodes in projection() instruction.\n *\n * This is deliberately created outside of projection() to avoid allocating\n * a new array each time the function is called. Instead the array will be\n * re-used by each invocation. This works because the function is not reentrant.\n  @type {?} */\nconst projectionNodeStack$1 = [];\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param {?} nodeIndex\n * @param {?=} selectorIndex\n * @param {?=} attrs\n * @return {?}\n */\nfunction projection(nodeIndex, selectorIndex = 0, attrs) {\n    /** @type {?} */\n    const node = createLNode(nodeIndex, 1 /* Projection */, null, null, attrs || null, null);\n    // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n    if (node.tNode.projection === null)\n        node.tNode.projection = selectorIndex;\n    // `<ng-content>` has no content\n    isParent = false;\n    /** @type {?} */\n    const parent = getParentLNode(node);\n    if (canInsertNativeNode(parent, viewData)) {\n        /** @type {?} */\n        const componentNode = findComponentHost(viewData);\n        /** @type {?} */\n        let nodeToProject = (/** @type {?} */ (componentNode.tNode.projection))[selectorIndex];\n        /** @type {?} */\n        let projectedView = componentNode.view;\n        /** @type {?} */\n        let projectionNodeIndex = -1;\n        /** @type {?} */\n        let grandparent;\n        /** @type {?} */\n        const renderParent = parent.tNode.type === 2 /* View */ ?\n            (grandparent = /** @type {?} */ (getParentLNode(parent))) &&\n                /** @type {?} */ ((grandparent.data[RENDER_PARENT])) : /** @type {?} */ (parent);\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                /** @type {?} */\n                const currentComponentHost = findComponentHost(projectedView);\n                /** @type {?} */\n                const firstProjectedNode = (/** @type {?} */ (currentComponentHost.tNode.projection))[/** @type {?} */ (nodeToProject.projection)];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView[nodeToProject.index];\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentHost.view;\n                    continue;\n                }\n            }\n            else {\n                /** @type {?} */\n                const lNode = projectedView[nodeToProject.index];\n                lNode.tNode.flags |= 8192 /* isProjected */;\n                appendProjectedNode(/** @type {?} */ (lNode), parent, viewData, renderParent);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentNode.view) {\n                /** @type {?} */\n                const lNode = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = lNode.tNode;\n                projectedView = lNode.view;\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n}\n/**\n * Adds LViewData or LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @template T\n * @param {?} currentView The view where LViewData or LContainer should be added\n * @param {?} adjustedHostIndex Index of the view's host node in LViewData[], adjusted for header\n * @param {?} state The LViewData or LContainer to add to the view tree\n * @return {?} The state passed in\n */\nfunction addToViewTree(currentView, adjustedHostIndex, state) {\n    if (currentView[TAIL]) {\n        /** @type {?} */ ((currentView[TAIL]))[NEXT] = state;\n    }\n    else if (firstTemplatePass) {\n        tView.childIndex = adjustedHostIndex;\n    }\n    currentView[TAIL] = state;\n    return state;\n}\n/**\n * If node is an OnPush component, marks its LViewData dirty.\n * @param {?} node\n * @return {?}\n */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data[FLAGS] & 2 /* CheckAlways */)) {\n        node.data[FLAGS] |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n * @param {?} view\n * @param {?} listenerFn\n * @return {?}\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n * @param {?} view\n * @param {?} listenerFn\n * @return {?}\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function wrapListenerIn_markViewDirty(e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/**\n * Marks current view and all ancestors dirty\n * @param {?} view\n * @return {?}\n */\nfunction markViewDirty(view) {\n    /** @type {?} */\n    let currentView = view;\n    while (currentView[PARENT] != null) {\n        currentView[FLAGS] |= 4 /* Dirty */;\n        currentView = /** @type {?} */ ((currentView[PARENT]));\n    }\n    currentView[FLAGS] |= 4 /* Dirty */;\n    ngDevMode && assertDefined(currentView[CONTEXT], 'rootContext');\n    scheduleTick(/** @type {?} */ (currentView[CONTEXT]));\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n * @template T\n * @param {?} rootContext\n * @return {?}\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        /** @type {?} */\n        let res;\n        rootContext.clean = new Promise((r) => res = r);\n        rootContext.scheduler(() => {\n            tickRootContext(rootContext); /** @type {?} */\n            ((res))(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * @param {?} rootContext\n * @return {?}\n */\nfunction tickRootContext(rootContext) {\n    for (let i = 0; i < rootContext.components.length; i++) {\n        /** @type {?} */\n        const rootComponent = rootContext.components[i];\n        /** @type {?} */\n        const hostNode = _getComponentHostLElementNode(rootComponent);\n        ngDevMode && assertDefined(hostNode.data, 'Component host node should be attached to an LView');\n        renderComponentOrTemplate(hostNode, getRootView(rootComponent), rootComponent);\n    }\n}\n/**\n * Retrieve the root view from any component by walking the parent `LViewData` until\n * reaching the root `LViewData`.\n *\n * @param {?} component any component\n * @return {?}\n */\nfunction getRootView(component) {\n    ngDevMode && assertDefined(component, 'component');\n    /** @type {?} */\n    const lElementNode = _getComponentHostLElementNode(component);\n    /** @type {?} */\n    let lViewData = lElementNode.view;\n    while (lViewData[PARENT]) {\n        lViewData = /** @type {?} */ ((lViewData[PARENT]));\n    }\n    return lViewData;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {\\@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @template T\n * @param {?} component The component which the change detection should be performed on.\n * @return {?}\n */\nfunction detectChanges(component) {\n    /** @type {?} */\n    const hostNode = _getComponentHostLElementNode(component);\n    ngDevMode &&\n        assertDefined(hostNode.data, 'Component host node should be attached to an LViewData instance.');\n    detectChangesInternal(/** @type {?} */ (hostNode.data), hostNode, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n * @template T\n * @param {?} component\n * @return {?}\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/**\n * Checks the view of the component provided. Does not gate on dirty checks or execute doCheck.\n * @template T\n * @param {?} hostView\n * @param {?} hostNode\n * @param {?} component\n * @return {?}\n */\nfunction detectChangesInternal(hostView, hostNode, component) {\n    /** @type {?} */\n    const oldView = enterView(hostView, hostNode);\n    /** @type {?} */\n    const hostTView = hostView[TVIEW];\n    /** @type {?} */\n    const template = /** @type {?} */ ((hostTView.template));\n    /** @type {?} */\n    const viewQuery = hostTView.viewQuery;\n    try {\n        namespaceHTML();\n        createViewQuery(viewQuery, hostView[FLAGS], component);\n        template(getRenderFlags(hostView), component);\n        refreshView();\n        updateViewQuery(viewQuery, component);\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\n/**\n * @template T\n * @param {?} viewQuery\n * @param {?} flags\n * @param {?} component\n * @return {?}\n */\nfunction createViewQuery(viewQuery, flags, component) {\n    if (viewQuery && (flags & 1 /* CreationMode */)) {\n        viewQuery(1 /* Create */, component);\n    }\n}\n/**\n * @template T\n * @param {?} viewQuery\n * @param {?} component\n * @return {?}\n */\nfunction updateViewQuery(viewQuery, component) {\n    if (viewQuery) {\n        viewQuery(2 /* Update */, component);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @template T\n * @param {?} component Component to mark as dirty.\n * @return {?}\n */\nfunction markDirty(component) {\n    ngDevMode && assertDefined(component, 'component');\n    /** @type {?} */\n    const lElementNode = _getComponentHostLElementNode(component);\n    markViewDirty(lElementNode.view);\n}\n/** *\n * A special value which designates that a value has not changed.\n  @type {?} */\nconst NO_CHANGE = /** @type {?} */ ({});\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n * @return {?}\n */\nfunction initBindings() {\n    ngDevMode && assertEqual(viewData[BINDING_INDEX], -1, 'Binding index should not yet be set ' + viewData[BINDING_INDEX]);\n    if (tView.bindingStartIndex === -1) {\n        tView.bindingStartIndex = viewData.length;\n    }\n    viewData[BINDING_INDEX] = tView.bindingStartIndex;\n}\n/**\n * Creates a single value binding.\n *\n * @template T\n * @param {?} value Value to diff\n * @return {?}\n */\nfunction bind(value) {\n    return bindingUpdated(value) ? value : NO_CHANGE;\n}\n/**\n * Reserves slots for pure functions (`pureFunctionX` instructions)\n *\n * Bindings for pure functions are stored after the LNodes in the data array but before the binding.\n *\n *  ----------------------------------------------------------------------------\n *  |  LNodes ... | pure function bindings | regular bindings / interpolations |\n *  ----------------------------------------------------------------------------\n *                                         ^\n *                                         TView.bindingStartIndex\n *\n * Pure function instructions are given an offset from TView.bindingStartIndex.\n * Subtracting the offset from TView.bindingStartIndex gives the first index where the bindings\n * are stored.\n *\n * NOTE: reserveSlots instructions are only ever allowed at the very end of the creation block\n * @param {?} numSlots\n * @return {?}\n */\nfunction reserveSlots(numSlots) {\n    // Init the slots with a unique `NO_CHANGE` value so that the first change is always detected\n    // whether it happens or not during the first change detection pass - pure functions checks\n    // might be skipped when short-circuited.\n    viewData.length += numSlots;\n    viewData.fill(NO_CHANGE, -numSlots);\n    // We need to initialize the binding in case a `pureFunctionX` kind of binding instruction is\n    // called first in the update section.\n    initBindings();\n}\n/**\n * Sets up the binding index before executing any `pureFunctionX` instructions.\n *\n * The index must be restored after the pure function is executed\n *\n * {\\@link reserveSlots}\n * @param {?} offset\n * @return {?}\n */\nfunction moveBindingIndexToReservedSlot(offset) {\n    /** @type {?} */\n    const currentSlot = viewData[BINDING_INDEX];\n    viewData[BINDING_INDEX] = tView.bindingStartIndex - offset;\n    return currentSlot;\n}\n/**\n * Restores the binding index to the given value.\n *\n * This function is typically used to restore the index after a `pureFunctionX` has\n * been executed.\n * @param {?} index\n * @return {?}\n */\nfunction restoreBindingIndex(index) {\n    viewData[BINDING_INDEX] = index;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n * @param {?} values\n * @return {?}\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    /** @type {?} */\n    let different = false;\n    for (let i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let content = values[0];\n    for (let i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param {?} prefix static value used for concatenation only.\n * @param {?} v0 value checked for change.\n * @param {?} suffix static value used for concatenation only.\n * @return {?}\n */\nfunction interpolation1(prefix, v0, suffix) {\n    /** @type {?} */\n    const different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 2 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    /** @type {?} */\n    const different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 3 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/**\n * Create an interpolation binding with 4 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    /** @type {?} */\n    const different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 5 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 6 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 7 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/**\n * Creates an interpolation binding with 8 expressions.\n * @param {?} prefix\n * @param {?} v0\n * @param {?} i0\n * @param {?} v1\n * @param {?} i1\n * @param {?} v2\n * @param {?} i2\n * @param {?} v3\n * @param {?} i3\n * @param {?} v4\n * @param {?} i4\n * @param {?} v5\n * @param {?} i5\n * @param {?} v6\n * @param {?} i6\n * @param {?} v7\n * @param {?} suffix\n * @return {?}\n */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/**\n * Store a value in the `data` at a given `index`.\n * @template T\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction store(index, value) {\n    /** @type {?} */\n    const adjustedIndex = index + HEADER_OFFSET;\n    if (adjustedIndex >= tView.data.length) {\n        tView.data[adjustedIndex] = null;\n    }\n    viewData[adjustedIndex] = value;\n}\n/**\n * Retrieves a value from the `directives` array.\n * @template T\n * @param {?} index\n * @return {?}\n */\nfunction loadDirective(index) {\n    ngDevMode && assertDefined(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, /** @type {?} */ ((directives)));\n    return /** @type {?} */ ((directives))[index];\n}\n/**\n * @template T\n * @param {?} queryListIdx\n * @return {?}\n */\nfunction loadQueryList(queryListIdx) {\n    ngDevMode && assertDefined(viewData[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n    ngDevMode && assertDataInRange(queryListIdx, /** @type {?} */ ((viewData[CONTENT_QUERIES])));\n    return /** @type {?} */ ((viewData[CONTENT_QUERIES]))[queryListIdx];\n}\n/**\n * Retrieves a value from current `viewData`.\n * @template T\n * @param {?} index\n * @return {?}\n */\nfunction load(index) {\n    return loadInternal(index, viewData);\n}\n/**\n * @param {?} index\n * @return {?}\n */\nfunction loadElement(index) {\n    return loadElementInternal(index, viewData);\n}\n/**\n * Gets the current binding value and increments the binding index.\n * @return {?}\n */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(viewData[BINDING_INDEX]);\n    ngDevMode &&\n        assertNotEqual(viewData[viewData[BINDING_INDEX]], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return viewData[viewData[BINDING_INDEX]++];\n}\n/**\n * Updates binding if changed, then returns whether it was updated.\n * @param {?} value\n * @return {?}\n */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (viewData[BINDING_INDEX] === -1)\n        initBindings();\n    /** @type {?} */\n    const bindingIndex = viewData[BINDING_INDEX];\n    if (bindingIndex >= viewData.length) {\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else if (isDifferent(viewData[bindingIndex], value)) {\n        throwErrorIfNoChangesMode(creationMode, checkNoChangesMode, viewData[bindingIndex], value);\n        viewData[viewData[BINDING_INDEX]++] = value;\n    }\n    else {\n        viewData[BINDING_INDEX]++;\n        return false;\n    }\n    return true;\n}\n/**\n * Updates binding if changed, then returns the latest value.\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding$1(value) {\n    bindingUpdated(value);\n    return value;\n}\n/**\n * Updates 2 bindings if changed, then returns whether either was updated.\n * @param {?} exp1\n * @param {?} exp2\n * @return {?}\n */\nfunction bindingUpdated2(exp1, exp2) {\n    /** @type {?} */\n    const different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/**\n * Updates 4 bindings if changed, then returns whether any was updated.\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @return {?}\n */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    /** @type {?} */\n    const different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\n/**\n * @return {?}\n */\nfunction getTView() {\n    return tView;\n}\n/**\n * Registers a QueryList, associated with a content query, for later refresh (part of a view\n * refresh).\n * @template Q\n * @param {?} queryList\n * @return {?}\n */\nfunction registerContentQuery(queryList) {\n    /** @type {?} */\n    const savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n    if (firstTemplatePass) {\n        /** @type {?} */\n        const currentDirectiveIndex = /** @type {?} */ ((directives)).length - 1;\n        /** @type {?} */\n        const tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n        /** @type {?} */\n        const lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n        if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n            tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n        }\n    }\n}\n/**\n * @return {?}\n */\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\n/**\n * @return {?}\n */\nfunction assertHasParent() {\n    assertDefined(getParentLNode(previousOrParentNode), 'previousOrParentNode should have a parent');\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertDataInRangeInternal(index, arr || viewData);\n}\n/**\n * @param {?} index\n * @param {?=} arr\n * @return {?}\n */\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = viewData;\n    assertEqual(arr.length, index, `index ${index} expected to be at the end of arr (length ${arr.length})`);\n}\n/**\n * On the first template pass, the reserved slots should be set `NO_CHANGE`.\n *\n * If not, they might not have been actually reserved.\n * @param {?} slotOffset\n * @param {?} numSlots\n * @return {?}\n */\nfunction assertReservedSlotInitialized(slotOffset, numSlots) {\n    if (firstTemplatePass) {\n        /** @type {?} */\n        const startIndex = tView.bindingStartIndex - slotOffset;\n        for (let i = 0; i < numSlots; i++) {\n            assertEqual(viewData[startIndex + i], NO_CHANGE, 'The reserved slots should be set to `NO_CHANGE` on first template pass');\n        }\n    }\n}\n/**\n * @template T\n * @param {?} component\n * @return {?}\n */\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertDefined(component, 'expecting component got null');\n    /** @type {?} */\n    const lElementNode = /** @type {?} */ ((/** @type {?} */ (component))[NG_HOST_SYMBOL]);\n    ngDevMode && assertDefined(component, 'object is not a component');\n    return lElementNode;\n}\n/** @type {?} */\nconst CLEAN_PROMISE = _CLEAN_PROMISE;\n/** @type {?} */\nconst ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {\\@link ViewContainer#createComponent}.\n *\n * @template T\n * @param {?} componentType Component to bootstrap\n * @param {?=} opts\n * @return {?}\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts = {}) {\n    ngDevMode && assertComponentType(componentType);\n    /** @type {?} */\n    const rendererFactory = opts.rendererFactory || domRendererFactory3;\n    /** @type {?} */\n    const sanitizer = opts.sanitizer || null;\n    /** @type {?} */\n    const componentDef = /** @type {?} */ ((/** @type {?} */ (componentType)).ngComponentDef);\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    /** @type {?} */\n    let component;\n    /** @type {?} */\n    const componentTag = /** @type {?} */ (((/** @type {?} */ ((componentDef.selectors))[0]))[0]);\n    /** @type {?} */\n    const hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    /** @type {?} */\n    const rootContext = createRootContext(opts.scheduler || requestAnimationFrame.bind(window));\n    /** @type {?} */\n    const rootView = createLViewData(rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    rootView[INJECTOR$1] = opts.injector || null;\n    /** @type {?} */\n    const oldView = enterView(rootView, /** @type {?} */ ((null)));\n    /** @type {?} */\n    let elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef, sanitizer);\n        // Create directive instance with factory() and store at index 0 in directives array\n        rootContext.components.push(component = /** @type {?} */ (baseDirectiveCreate(0, componentDef.factory(), componentDef)));\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, /** @type {?} */ ((elementNode.data)));\n        opts.hostFeatures && opts.hostFeatures.forEach((feature) => feature(component, componentDef));\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(/** @type {?} */ (elementNode.data), elementNode, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * @param {?} scheduler\n * @return {?}\n */\nfunction createRootContext(scheduler) {\n    return {\n        components: [],\n        scheduler: scheduler,\n        clean: CLEAN_PROMISE,\n    };\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n * @param {?} component\n * @param {?} def\n * @return {?}\n */\nfunction LifecycleHooksFeature(component, def) {\n    /** @type {?} */\n    const elementNode = _getComponentHostLElementNode(component);\n    /** @type {?} */\n    const tView = elementNode.view[TVIEW];\n    queueInitHooks(0, def.onInit, def.doCheck, tView);\n    queueLifecycleHooks(elementNode.tNode.flags, tView);\n}\n/**\n * Retrieve the root context for any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param {?} component any component\n * @return {?}\n */\nfunction getRootContext(component) {\n    /** @type {?} */\n    const rootContext = /** @type {?} */ (getRootView(component)[CONTEXT]);\n    ngDevMode && assertDefined(rootContext, 'rootContext');\n    return rootContext;\n}\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param {?} component Component to wait upon\n * @return {?} Promise which resolves when the component is rendered.\n */\nfunction whenRendered(component) {\n    return getRootContext(component).clean;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} componentDefinition\n * @return {?}\n */\nfunction defineComponent(componentDefinition) {\n    /** @type {?} */\n    const type = componentDefinition.type;\n    /** @type {?} */\n    const pipeTypes = /** @type {?} */ ((componentDefinition.pipes));\n    /** @type {?} */\n    const directiveTypes = /** @type {?} */ ((componentDefinition.directives));\n    /** @type {?} */\n    const declaredInputs = /** @type {?} */ ({});\n    /** @type {?} */\n    const def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || /** @type {?} */ ((null)),\n        hostBindings: componentDefinition.hostBindings || null,\n        contentQueries: componentDefinition.contentQueries || null,\n        contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs, declaredInputs),\n        declaredInputs: declaredInputs,\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs || null,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === ChangeDetectionStrategy.OnPush,\n        directiveDefs: directiveTypes ?\n            () => (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                .map(extractDirectiveDef) :\n            null,\n        pipeDefs: pipeTypes ?\n            () => (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef) :\n            null,\n        selectors: componentDefinition.selectors,\n        viewQuery: componentDefinition.viewQuery || null,\n        features: componentDefinition.features || null,\n    };\n    /** @type {?} */\n    const feature = componentDefinition.features;\n    feature && feature.forEach((fn) => fn(def));\n    return /** @type {?} */ (def);\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction extractDirectiveDef(type) {\n    /** @type {?} */\n    const def = type.ngComponentDef || type.ngDirectiveDef;\n    if (ngDevMode && !def) {\n        throw new Error(`'${type.name}' is neither 'ComponentType' or 'DirectiveType'.`);\n    }\n    return def;\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction extractPipeDef(type) {\n    /** @type {?} */\n    const def = type.ngPipeDef;\n    if (ngDevMode && !def) {\n        throw new Error(`'${type.name}' is not a 'PipeType'.`);\n    }\n    return def;\n}\n/**\n * @template T\n * @param {?} def\n * @return {?}\n */\nfunction defineNgModule(def) {\n    /** @type {?} */\n    const res = {\n        type: def.type,\n        bootstrap: def.bootstrap || [],\n        declarations: def.declarations || [],\n        imports: def.imports || [],\n        exports: def.exports || [],\n        transitiveCompileScopes: null,\n    };\n    return /** @type {?} */ (res);\n}\n/** @type {?} */\nconst EMPTY$1 = {};\n/**\n * Inverts an inputs or outputs lookup such that the keys, which were the\n * minified keys, are part of the values, and the values are parsed so that\n * the publicName of the property is the new key\n *\n * e.g. for\n *\n * ```\n * class Comp {\n * \\@Input()\n *   propName1: string;\n *\n * \\@Input('publicName')\n *   propName2: number;\n * }\n * ```\n *\n * will be serialized as\n *\n * ```\n * {\n *   a0: 'propName1',\n *   b1: ['publicName', 'propName2'],\n * }\n * ```\n *\n * becomes\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'publicName': 'b1'\n * }\n * ```\n *\n * Optionally the function can take `secondary` which will result in:\n *\n * ```\n * {\n *  'propName1': 'a0',\n *  'propName2': 'b1'\n * }\n * ```\n *\n * @param {?} obj\n * @param {?=} secondary\n * @return {?}\n */\nfunction invertObject(obj, secondary) {\n    if (obj == null)\n        return EMPTY$1;\n    /** @type {?} */\n    const newLookup = {};\n    for (const minifiedKey in obj) {\n        if (obj.hasOwnProperty(minifiedKey)) {\n            /** @type {?} */\n            let publicName = obj[minifiedKey];\n            /** @type {?} */\n            let declaredName = publicName;\n            if (Array.isArray(publicName)) {\n                declaredName = publicName[1];\n                publicName = publicName[0];\n            }\n            newLookup[publicName] = minifiedKey;\n            if (secondary) {\n                (secondary[declaredName] = minifiedKey);\n            }\n        }\n    }\n    return newLookup;\n}\n/** *\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n  @type {?} */\nconst defineDirective = /** @type {?} */ ((defineComponent));\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @template T\n * @param {?} pipeDef Pipe definition generated by the compiler\n * @return {?}\n */\nfunction definePipe(pipeDef) {\n    return /** @type {?} */ ((/** @type {?} */ ({\n        name: pipeDef.name,\n        factory: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    })));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Sets properties on a target object from a source object, but only if\n * the property doesn't already exist on the target object.\n * @param {?} target The target to set properties on\n * @param {?} source The source of the property keys and values to set\n * @return {?}\n */\nfunction fillProperties(target, source) {\n    for (const key in source) {\n        if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n            target[key] = source[key];\n        }\n    }\n}\n/**\n * Determines if a definition is a {\\@link ComponentDefInternal} or a {\\@link DirectiveDefInternal}\n * @template T\n * @param {?} definition The definition to examine\n * @return {?}\n */\nfunction isComponentDef(definition) {\n    /** @type {?} */\n    const def = /** @type {?} */ (definition);\n    return typeof def.template === 'function';\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getSuperType(type) {\n    return Object.getPrototypeOf(type.prototype).constructor;\n}\n/**\n * Merges the definition from a super class to a sub class.\n * @param {?} definition The definition that is a SubClass of another directive of component\n * @return {?}\n */\nfunction InheritDefinitionFeature(definition) {\n    /** @type {?} */\n    let superType = getSuperType(definition.type);\n    /** @type {?} */\n    let superDef = undefined;\n    while (superType && !superDef) {\n        if (isComponentDef(definition)) {\n            superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n        }\n        else {\n            if (superType.ngComponentDef) {\n                throw new Error('Directives cannot inherit Components');\n            }\n            superDef = superType.ngDirectiveDef;\n        }\n        if (superDef) {\n            // Merge inputs and outputs\n            fillProperties(definition.inputs, superDef.inputs);\n            fillProperties(definition.declaredInputs, superDef.declaredInputs);\n            fillProperties(definition.outputs, superDef.outputs);\n            /** @type {?} */\n            const prevHostBindings = definition.hostBindings;\n            /** @type {?} */\n            const superHostBindings = superDef.hostBindings;\n            if (superHostBindings) {\n                if (prevHostBindings) {\n                    definition.hostBindings = (directiveIndex, elementIndex) => {\n                        superHostBindings(directiveIndex, elementIndex);\n                        prevHostBindings(directiveIndex, elementIndex);\n                    };\n                }\n                else {\n                    definition.hostBindings = superHostBindings;\n                }\n            }\n            // Inherit hooks\n            // Assume super class inheritance feature has already run.\n            definition.afterContentChecked =\n                definition.afterContentChecked || superDef.afterContentChecked;\n            definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n            definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n            definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n            definition.doCheck = definition.doCheck || superDef.doCheck;\n            definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n            definition.onInit = definition.onInit || superDef.onInit;\n            /** @type {?} */\n            const features = superDef.features;\n            if (features) {\n                for (const feature of features) {\n                    if (feature && feature !== InheritDefinitionFeature) {\n                        (/** @type {?} */ (feature))(definition);\n                    }\n                }\n            }\n        }\n        else {\n            /** @type {?} */\n            const superPrototype = superType.prototype;\n            if (superPrototype) {\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superPrototype.afterContentChecked;\n                definition.afterContentInit =\n                    definition.afterContentInit || superPrototype.afterContentInit;\n                definition.afterViewChecked =\n                    definition.afterViewChecked || superPrototype.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                definition.onInit = definition.onInit || superPrototype.onInit;\n            }\n        }\n        superType = Object.getPrototypeOf(superType);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n * lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n * be included as a feature AFTER {\\@link InheritDefinitionFeature}, otherwise\n * inherited properties will not be propagated to the ngOnChanges lifecycle\n * hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature]\n * });\n * ```\n * @template T\n * @param {?} definition\n * @return {?}\n */\nfunction NgOnChangesFeature(definition) {\n    /** @type {?} */\n    const declaredToMinifiedInputs = definition.declaredInputs;\n    /** @type {?} */\n    const proto = definition.type.prototype;\n    for (const declaredName in declaredToMinifiedInputs) {\n        if (declaredToMinifiedInputs.hasOwnProperty(declaredName)) {\n            /** @type {?} */\n            const minifiedKey = declaredToMinifiedInputs[declaredName];\n            /** @type {?} */\n            const privateMinKey = PRIVATE_PREFIX + minifiedKey;\n            /** @type {?} */\n            let originalProperty = undefined;\n            /** @type {?} */\n            let checkProto = proto;\n            while (!originalProperty && checkProto &&\n                Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                checkProto = Object.getPrototypeOf(checkProto);\n            }\n            /** @type {?} */\n            const getter = originalProperty && originalProperty.get;\n            /** @type {?} */\n            const setter = originalProperty && originalProperty.set;\n            // create a getter and setter for property\n            Object.defineProperty(proto, minifiedKey, {\n                get: getter ||\n                    (setter ? undefined : function () { return this[privateMinKey]; }),\n                /**\n                 * @template T\n                 * @this {?}\n                 * @param {?} value\n                 * @return {?}\n                 */\n                set(value) {\n                    /** @type {?} */\n                    let simpleChanges = this[PRIVATE_PREFIX];\n                    if (!simpleChanges) {\n                        simpleChanges = {};\n                        // Place where we will store SimpleChanges if there is a change\n                        Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                    }\n                    /** @type {?} */\n                    const isFirstChange = !this.hasOwnProperty(privateMinKey);\n                    /** @type {?} */\n                    const currentChange = simpleChanges[declaredName];\n                    if (currentChange) {\n                        currentChange.currentValue = value;\n                    }\n                    else {\n                        simpleChanges[declaredName] =\n                            new SimpleChange(this[privateMinKey], value, isFirstChange);\n                    }\n                    if (isFirstChange) {\n                        // Create a place where the actual value will be stored and make it non-enumerable\n                        Object.defineProperty(this, privateMinKey, { value, writable: true });\n                    }\n                    else {\n                        this[privateMinKey] = value;\n                    }\n                    if (setter)\n                        setter.call(this, value);\n                }\n            });\n        }\n    }\n    // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n    // so the call order is changes-init-check in creation mode. In subsequent\n    // change detection runs, only the check wrapper will be called.\n    if (definition.onInit != null) {\n        definition.onInit = onChangesWrapper(definition.onInit);\n    }\n    definition.doCheck = onChangesWrapper(definition.doCheck);\n}\n/**\n * @param {?} delegateHook\n * @return {?}\n */\nfunction onChangesWrapper(delegateHook) {\n    return function () {\n        /** @type {?} */\n        const simpleChanges = this[PRIVATE_PREFIX];\n        if (simpleChanges != null) {\n            this.ngOnChanges(simpleChanges);\n            this[PRIVATE_PREFIX] = null;\n        }\n        if (delegateHook)\n            delegateHook.apply(this);\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ViewRef$1 {\n    /**\n     * @param {?} _view\n     * @param {?} context\n     */\n    constructor(_view, context) {\n        this._view = _view;\n        this._appRef = null;\n        this._viewContainerRef = null;\n        /**\n         * \\@internal\n         */\n        this._lViewNode = null;\n        this.context = /** @type {?} */ ((context));\n    }\n    /**\n     * \\@internal\n     * @param {?} view\n     * @param {?} context\n     * @return {?}\n     */\n    _setComponentContext(view, context) {\n        this._view = view;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get destroyed() {\n        return (this._view[FLAGS] & 32 /* Destroyed */) === 32 /* Destroyed */;\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        if (this._viewContainerRef && viewAttached(this._view)) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            this._viewContainerRef = null;\n        }\n        destroyLView(this._view);\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) { storeCleanupFn(this._view, callback); }\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {\\@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * \\@Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     * @return {?}\n     */\n    markForCheck() { markViewDirty(this._view); }\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {\\@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     * @return {?}\n     */\n    detach() { this._view[FLAGS] &= ~8 /* Attached */; }\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {\\@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * \\@Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     * @return {?}\n     */\n    reattach() { this._view[FLAGS] |= 8 /* Attached */; }\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {\\@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {\\@link ChangeDetectorRef#detach detach} for more information.\n     * @return {?}\n     */\n    detectChanges() { detectChanges(this.context); }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     * @return {?}\n     */\n    checkNoChanges() { checkNoChanges(this.context); }\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    attachToViewContainerRef(vcRef) { this._viewContainerRef = vcRef; }\n    /**\n     * @return {?}\n     */\n    detachFromAppRef() { this._appRef = null; }\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    attachToAppRef(appRef) { this._appRef = appRef; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ComponentFactoryResolver$1 extends ComponentFactoryResolver {\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    resolveComponentFactory(component) {\n        ngDevMode && assertComponentType(component);\n        /** @type {?} */\n        const componentDef = (/** @type {?} */ (component)).ngComponentDef;\n        return new ComponentFactory$1(componentDef);\n    }\n}\n/**\n * @param {?} map\n * @return {?}\n */\nfunction toRefArray(map) {\n    /** @type {?} */\n    const array = [];\n    for (let nonMinified in map) {\n        if (map.hasOwnProperty(nonMinified)) {\n            /** @type {?} */\n            const minified = map[nonMinified];\n            array.push({ propName: minified, templateName: nonMinified });\n        }\n    }\n    return array;\n}\n/** *\n * Default {\\@link RootContext} for all components rendered with {\\@link renderComponent}.\n  @type {?} */\nconst ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: () => createRootContext(inject(SCHEDULER)) });\n/** *\n * A change detection scheduler token for {\\@link RootContext}. This token is the default value used\n * for the default `RootContext` found in the {\\@link ROOT_CONTEXT} token.\n  @type {?} */\nconst SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', { providedIn: 'root', factory: () => requestAnimationFrame.bind(window) });\n/**\n * Render3 implementation of {\\@link viewEngine_ComponentFactory}.\n * @template T\n */\nclass ComponentFactory$1 extends ComponentFactory {\n    /**\n     * @param {?} componentDef\n     */\n    constructor(componentDef) {\n        super();\n        this.componentDef = componentDef;\n        this.componentType = componentDef.type;\n        this.selector = /** @type {?} */ (componentDef.selectors[0][0]);\n        this.ngContentSelectors = [];\n    }\n    /**\n     * @return {?}\n     */\n    get inputs() {\n        return toRefArray(this.componentDef.inputs);\n    }\n    /**\n     * @return {?}\n     */\n    get outputs() {\n        return toRefArray(this.componentDef.outputs);\n    }\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    create(injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        /** @type {?} */\n        const isInternalRootView = rootSelectorOrNode === undefined;\n        /** @type {?} */\n        const rendererFactory = ngModule ? ngModule.injector.get(RendererFactory2) : domRendererFactory3;\n        /** @type {?} */\n        const hostNode = isInternalRootView ?\n            elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef.rendererType)) :\n            locateHostElement(rendererFactory, rootSelectorOrNode);\n        /** @type {?} */\n        const componentTag = /** @type {?} */ (((/** @type {?} */ ((this.componentDef.selectors))[0]))[0]);\n        /** @type {?} */\n        const rootContext = ngModule && !isInternalRootView ?\n            ngModule.injector.get(ROOT_CONTEXT) :\n            createRootContext(requestAnimationFrame.bind(window));\n        /** @type {?} */\n        const rootView = createLViewData(rendererFactory.createRenderer(hostNode, this.componentDef.rendererType), createTView(-1, null, null, null, null), rootContext, this.componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n        rootView[INJECTOR$1] = ngModule && ngModule.injector || null;\n        /** @type {?} */\n        const oldView = enterView(rootView, /** @type {?} */ ((null)));\n        /** @type {?} */\n        let component;\n        /** @type {?} */\n        let elementNode;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            // Create element node at index 0 in data array\n            elementNode = hostElement(componentTag, hostNode, this.componentDef);\n            // Create directive instance with factory() and store at index 0 in directives array\n            rootContext.components.push(component = /** @type {?} */ (baseDirectiveCreate(0, this.componentDef.factory(), this.componentDef)));\n            initChangeDetectorIfExisting(elementNode.nodeInjector, component, /** @type {?} */ ((elementNode.data)));\n            // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n            // executed here?\n            // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n            LifecycleHooksFeature(component, this.componentDef);\n            // Transform the arrays of native nodes into a LNode structure that can be consumed by the\n            // projection instruction. This is needed to support the reprojection of these nodes.\n            if (projectableNodes) {\n                /** @type {?} */\n                let index = 0;\n                /** @type {?} */\n                const projection$$1 = elementNode.tNode.projection = [];\n                for (let i = 0; i < projectableNodes.length; i++) {\n                    /** @type {?} */\n                    const nodeList = projectableNodes[i];\n                    /** @type {?} */\n                    let firstTNode = null;\n                    /** @type {?} */\n                    let previousTNode = null;\n                    for (let j = 0; j < nodeList.length; j++) {\n                        /** @type {?} */\n                        const lNode = createLNode(++index, 3 /* Element */, /** @type {?} */ (nodeList[j]), null, null);\n                        if (previousTNode) {\n                            previousTNode.next = lNode.tNode;\n                        }\n                        else {\n                            firstTNode = lNode.tNode;\n                        }\n                        previousTNode = lNode.tNode;\n                    }\n                    projection$$1.push(/** @type {?} */ ((firstTNode)));\n                }\n            }\n            // Execute the template in creation mode only, and then turn off the CreationMode flag\n            renderEmbeddedTemplate(elementNode, /** @type {?} */ ((elementNode.data))[TVIEW], component, 1 /* Create */); /** @type {?} */\n            ((elementNode.data))[FLAGS] &= ~1 /* CreationMode */;\n        }\n        finally {\n            enterView(oldView, null);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        /** @type {?} */\n        const componentRef = new ComponentRef$1(this.componentType, component, rootView, injector, /** @type {?} */ ((hostNode)));\n        if (isInternalRootView) {\n            /** @type {?} */ ((\n            // The host element of the internal root view is attached to the component's host view node\n            componentRef.hostView._lViewNode)).tNode.child = elementNode.tNode;\n        }\n        return componentRef;\n    }\n}\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n *\n * @template T\n */\nclass ComponentRef$1 extends ComponentRef {\n    /**\n     * @param {?} componentType\n     * @param {?} instance\n     * @param {?} rootView\n     * @param {?} injector\n     * @param {?} hostNode\n     */\n    constructor(componentType, instance, rootView, injector, hostNode) {\n        super();\n        this.destroyCbs = [];\n        this.instance = instance;\n        /* TODO(jasonaden): This is incomplete, to be adjusted in follow-up PR. Notes from Kara:When\n             * ViewRef.detectChanges is called from ApplicationRef.tick, it will call detectChanges at the\n             * component instance level. I suspect this means that lifecycle hooks and host bindings on the\n             * given component won't work (as these are always called at the level above a component).\n             *\n             * In render2, ViewRef.detectChanges uses the root view instance for view checks, not the\n             * component instance. So passing in the root view (1 level above the component) is sufficient.\n             * We might  want to think about creating a fake component for the top level? Or overwrite\n             * detectChanges with a function that calls tickRootContext? */\n        this.hostView = this.changeDetectorRef = new ViewRef$1(rootView, instance);\n        this.hostView._lViewNode = createLNode(-1, 2 /* View */, null, null, null, rootView);\n        this.injector = injector;\n        this.location = new ElementRef(hostNode);\n        this.componentType = componentType;\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).forEach(fn => fn());\n        this.destroyCbs = null;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).push(callback);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n  @type {?} */\nconst NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/** *\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n  @type {?} */\nconst BLOOM_SIZE = 256;\n/** *\n * Counter used to generate unique IDs for directives.\n  @type {?} */\nlet nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param {?} injector The node injector in which the directive should be registered\n * @param {?} type The directive to register\n * @return {?}\n */\nfunction bloomAdd(injector, type) {\n    /** @type {?} */\n    let id = (/** @type {?} */ (type))[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = (/** @type {?} */ (type))[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    /** @type {?} */\n    const bloomBit = id % BLOOM_SIZE;\n    /** @type {?} */\n    const mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\n/**\n * @return {?}\n */\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(/** @type {?} */ (getPreviousOrParentNode()));\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param {?} node for which an injector should be retrieved / created.\n * @return {?} Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    /** @type {?} */\n    const nodeInjector = node.nodeInjector;\n    /** @type {?} */\n    const parent = getParentLNode(node);\n    /** @type {?} */\n    const parentInjector = parent && parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return /** @type {?} */ ((nodeInjector));\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null,\n    };\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} di The node injector in which a directive will be added\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param {?} def The definition of the directive to be made public\n * @return {?}\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\n/**\n * @template T\n * @param {?} token\n * @param {?=} flags\n * @return {?}\n */\nfunction directiveInject(token, flags = 0 /* Default */) {\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @return {?} The ElementRef instance to use\n */\nfunction injectElementRef() {\n    return getOrCreateElementRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @return {?} The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @return {?} The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/**\n * Returns a ChangeDetectorRef (a.k.a. a ViewRef)\n * @return {?}\n */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * \\@Component(...)\n * class MyComponent {\n *   constructor(\\@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * \\@experimental\n * @param {?} attrNameToInject\n * @return {?}\n */\nfunction injectAttribute(attrNameToInject) {\n    ngDevMode && assertPreviousIsParent();\n    /** @type {?} */\n    const lElement = /** @type {?} */ (getPreviousOrParentNode());\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    /** @type {?} */\n    const tElement = lElement.tNode;\n    ngDevMode && assertDefined(tElement, 'expecting tNode');\n    /** @type {?} */\n    const attrs = tElement.attrs;\n    if (attrs) {\n        for (let i = 0; i < attrs.length; i = i + 2) {\n            /** @type {?} */\n            const attrName = attrs[i];\n            if (attrName === 1 /* SelectOnly */)\n                break;\n            if (attrName == attrNameToInject) {\n                return /** @type {?} */ (attrs[i + 1]);\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @param {?} di\n * @param {?} context\n * @return {?} The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    /** @type {?} */\n    const currentNode = di.node;\n    if (isComponent(currentNode.tNode)) {\n        return di.changeDetectorRef = new ViewRef$1(/** @type {?} */ (currentNode.data), context);\n    }\n    else if (currentNode.tNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view[HOST_NODE]);\n    }\n    return /** @type {?} */ ((null));\n}\n/**\n * Gets or creates ChangeDetectorRef for the closest host component\n * @param {?} currentNode\n * @return {?}\n */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    /** @type {?} */\n    const hostNode = getClosestComponentAncestor(currentNode);\n    /** @type {?} */\n    const hostInjector = hostNode.nodeInjector;\n    /** @type {?} */\n    const existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        new ViewRef$1(/** @type {?} */ (hostNode.data), /** @type {?} */ ((hostNode\n            .view[DIRECTIVES]))[hostNode.tNode.flags >> 14 /* DirectiveStartingIndexShift */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n * @param {?} node\n * @return {?}\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.tNode.type === 2 /* View */) {\n        node = node.view[HOST_NODE];\n    }\n    return /** @type {?} */ (node);\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @template T\n * @param {?} di Node injector where the search should start\n * @param {?} token The directive type to search for\n * @param {?=} flags Injection flags (e.g. CheckParent)\n * @return {?} The instance found\n */\nfunction getOrCreateInjectable(di, token, flags = 0 /* Default */) {\n    /** @type {?} */\n    const bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        /** @type {?} */\n        const moduleInjector = getPreviousOrParentNode().view[INJECTOR$1];\n        /** @type {?} */\n        const formerInjector = setCurrentInjector(moduleInjector);\n        try {\n            return inject(token, flags);\n        }\n        finally {\n            setCurrentInjector(formerInjector);\n        }\n    }\n    else {\n        /** @type {?} */\n        let injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash, flags);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            /** @type {?} */\n            const node = injector.node;\n            /** @type {?} */\n            const nodeFlags = node.tNode.flags;\n            /** @type {?} */\n            const count = nodeFlags & 4095 /* DirectiveCountMask */;\n            if (count !== 0) {\n                /** @type {?} */\n                const start = nodeFlags >> 14 /* DirectiveStartingIndexShift */;\n                /** @type {?} */\n                const end = start + count;\n                /** @type {?} */\n                const defs = /** @type {?} */ ((node.view[TVIEW].directives));\n                for (let i = start; i < end; i++) {\n                    /** @type {?} */\n                    const directiveDef = /** @type {?} */ (defs[i]);\n                    if (directiveDef.type === token && directiveDef.diPublic) {\n                        return /** @type {?} */ ((node.view[DIRECTIVES]))[i];\n                    }\n                }\n            }\n            /** @type {?} */\n            let instance;\n            if (injector === di && (instance = searchMatchesQueuedForCreation(node, token))) {\n                return instance;\n            }\n            // The def wasn't found anywhere on this node, so it was a false positive.\n            // If flags permit, traverse up the tree and continue searching.\n            if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n                injector = null;\n            }\n            else {\n                injector = injector.parent;\n            }\n        }\n    }\n    // No directive was found for the given token.\n    if (flags & 8 /* Optional */)\n        return null;\n    throw new Error(`Injector: NOT_FOUND [${stringify$1(token)}]`);\n}\n/**\n * @template T\n * @param {?} node\n * @param {?} token\n * @return {?}\n */\nfunction searchMatchesQueuedForCreation(node, token) {\n    /** @type {?} */\n    const matches = node.view[TVIEW].currentMatches;\n    if (matches) {\n        for (let i = 0; i < matches.length; i += 2) {\n            /** @type {?} */\n            const def = /** @type {?} */ (matches[i]);\n            if (def.type === token) {\n                return resolveDirective(def, i + 1, matches, node.view[TVIEW]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param {?} type The directive type\n * @return {?} The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    /** @type {?} */\n    let id = (/** @type {?} */ (type))[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param {?} startInjector\n * @param {?} bloomBit The bit to check in each injector's bloom filter\n * @param {?} flags The injection flags for this injection site (e.g. Optional or SkipSelf)\n * @return {?} An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit, flags) {\n    /** @type {?} */\n    const mask = 1 << bloomBit;\n    /** @type {?} */\n    let injector = flags & 4 /* SkipSelf */ ? /** @type {?} */ ((startInjector.parent)) : startInjector;\n    while (injector) {\n        /** @type {?} */\n        let value;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        else if (flags & 2 /* Self */ || flags & 1 /* Host */ && !sameHostView(injector)) {\n            return null;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\n/**\n * Checks whether the current injector and its parent are in the same host view.\n *\n * This is necessary to support \\@Host() decorators. If \\@Host() is set, we should stop searching once\n * the injector and its parent view don't match because it means we'd cross the view boundary.\n * @param {?} injector\n * @return {?}\n */\nfunction sameHostView(injector) {\n    return !!injector.parent && injector.parent.node.view === injector.node.view;\n}\n/**\n * @template T\n */\nclass ReadFromInjectorFn {\n    /**\n     * @param {?} read\n     */\n    constructor(read) {\n        this.read = read;\n    }\n}\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param {?} di The node injector where we should store a created ElementRef\n * @return {?} The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef$1(di.node.native));\n}\n/**\n * A ref to a node's native element.\n */\nclass ElementRef$1 {\n    /**\n     * @param {?} nativeElement\n     */\n    constructor(nativeElement) { this.nativeElement = nativeElement; }\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @param {?} di\n * @return {?} The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    if (!di.viewContainerRef) {\n        /** @type {?} */\n        const vcRefHost = di.node;\n        ngDevMode && assertNodeOfPossibleTypes(vcRefHost, 0 /* Container */, 3 /* Element */);\n        /** @type {?} */\n        const hostParent = /** @type {?} */ ((getParentLNode(vcRefHost)));\n        /** @type {?} */\n        const lContainer = createLContainer(hostParent, vcRefHost.view, true);\n        /** @type {?} */\n        const comment = vcRefHost.view[RENDERER].createComment(ngDevMode ? 'container' : '');\n        /** @type {?} */\n        const lContainerNode = createLNodeObject(0 /* Container */, vcRefHost.view, hostParent, comment, lContainer, null);\n        appendChild(hostParent, comment, vcRefHost.view);\n        if (vcRefHost.queries) {\n            lContainerNode.queries = vcRefHost.queries.container();\n        }\n        /** @type {?} */\n        const hostTNode = /** @type {?} */ (vcRefHost.tNode);\n        if (!hostTNode.dynamicContainerNode) {\n            hostTNode.dynamicContainerNode =\n                createTNode(0 /* Container */, -1, null, null, hostTNode, null);\n        }\n        lContainerNode.tNode = hostTNode.dynamicContainerNode;\n        vcRefHost.dynamicLContainerNode = lContainerNode;\n        addToViewTree(vcRefHost.view, /** @type {?} */ (hostTNode.index), lContainer);\n        di.viewContainerRef = new ViewContainerRef$1(lContainerNode);\n    }\n    return di.viewContainerRef;\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nclass ViewContainerRef$1 {\n    /**\n     * @param {?} _lContainerNode\n     */\n    constructor(_lContainerNode) {\n        this._lContainerNode = _lContainerNode;\n        this._viewRefs = [];\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        /** @type {?} */\n        const lContainer = this._lContainerNode.data;\n        while (lContainer[VIEWS].length) {\n            this.remove(0);\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    get(index) { return this._viewRefs[index] || null; }\n    /**\n     * @return {?}\n     */\n    get length() {\n        /** @type {?} */\n        const lContainer = this._lContainerNode.data;\n        return lContainer[VIEWS].length;\n    }\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    createEmbeddedView(templateRef, context, index) {\n        /** @type {?} */\n        const adjustedIdx = this._adjustIndex(index);\n        /** @type {?} */\n        const viewRef = (/** @type {?} */ (templateRef))\n            .createEmbeddedView(context || /** @type {?} */ ({}), this._lContainerNode, adjustedIdx);\n        (/** @type {?} */ (viewRef)).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    }\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    createComponent(componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        /** @type {?} */\n        const contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && contextInjector) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        /** @type {?} */\n        const componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    insert(viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        /** @type {?} */\n        const lViewNode = /** @type {?} */ (((/** @type {?} */ (viewRef))._lViewNode));\n        /** @type {?} */\n        const adjustedIdx = this._adjustIndex(index);\n        insertView(this._lContainerNode, lViewNode, adjustedIdx);\n        /** @type {?} */\n        const views = this._lContainerNode.data[VIEWS];\n        /** @type {?} */\n        const beforeNode = adjustedIdx + 1 < views.length ?\n            (/** @type {?} */ ((getChildLNode(views[adjustedIdx + 1])))).native :\n            this._lContainerNode.native;\n        addRemoveViewFromContainer(this._lContainerNode, lViewNode, true, beforeNode);\n        (/** @type {?} */ (viewRef)).attachToViewContainerRef(this);\n        this._viewRefs.splice(adjustedIdx, 0, viewRef);\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @param {?} newIndex\n     * @return {?}\n     */\n    move(viewRef, newIndex) {\n        /** @type {?} */\n        const index = this.indexOf(viewRef);\n        this.detach(index);\n        this.insert(viewRef, this._adjustIndex(newIndex));\n        return viewRef;\n    }\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    indexOf(viewRef) { return this._viewRefs.indexOf(viewRef); }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    remove(index) {\n        /** @type {?} */\n        const adjustedIdx = this._adjustIndex(index, -1);\n        removeView(this._lContainerNode, adjustedIdx);\n        this._viewRefs.splice(adjustedIdx, 1);\n    }\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    detach(index) {\n        /** @type {?} */\n        const adjustedIdx = this._adjustIndex(index, -1);\n        /** @type {?} */\n        const lViewNode = detachView(this._lContainerNode, adjustedIdx);\n        return this._viewRefs.splice(adjustedIdx, 1)[0] || null;\n    }\n    /**\n     * @param {?=} index\n     * @param {?=} shift\n     * @return {?}\n     */\n    _adjustIndex(index, shift = 0) {\n        if (index == null) {\n            return this._lContainerNode.data[VIEWS].length + shift;\n        }\n        if (ngDevMode) {\n            assertGreaterThan(index, -1, 'index must be positive');\n            // +1 because it's legal to insert at the end.\n            assertLessThan(index, this._lContainerNode.data[VIEWS].length + 1 + shift, 'index');\n        }\n        return index;\n    }\n}\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @template T\n * @param {?} di The node injector where we should store a created TemplateRef\n * @return {?} The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    if (!di.templateRef) {\n        ngDevMode && assertNodeType(di.node, 0 /* Container */);\n        /** @type {?} */\n        const hostNode = /** @type {?} */ (di.node);\n        /** @type {?} */\n        const hostTNode = hostNode.tNode;\n        ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n        di.templateRef = new TemplateRef$1(getOrCreateElementRef(di), /** @type {?} */ (hostTNode.tViews), getRenderer(), hostNode.data[QUERIES]);\n    }\n    return di.templateRef;\n}\n/**\n * @template T\n */\nclass TemplateRef$1 {\n    /**\n     * @param {?} elementRef\n     * @param {?} _tView\n     * @param {?} _renderer\n     * @param {?} _queries\n     */\n    constructor(elementRef, _tView, _renderer, _queries) {\n        this._tView = _tView;\n        this._renderer = _renderer;\n        this._queries = _queries;\n        this.elementRef = elementRef;\n    }\n    /**\n     * @param {?} context\n     * @param {?=} containerNode\n     * @param {?=} index\n     * @return {?}\n     */\n    createEmbeddedView(context, containerNode, index) {\n        /** @type {?} */\n        const viewNode = createEmbeddedViewNode(this._tView, context, this._renderer, this._queries);\n        if (containerNode) {\n            insertView(containerNode, viewNode, /** @type {?} */ ((index)));\n        }\n        renderEmbeddedTemplate(viewNode, this._tView, context, 1 /* Create */);\n        /** @type {?} */\n        const viewRef = new ViewRef$1(viewNode.data, context);\n        viewRef._lViewNode = viewNode;\n        return viewRef;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * This feature publishes the directive (or component) into the DI system, making it visible to\n * others for injection.\n *\n * @template T\n * @param {?} definition\n * @return {?}\n */\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst i18nTagRegex = /{\\$([^}]+)}/g;\n/**\n * Takes a translation string, the initial list of placeholders (elements and expressions) and the\n * indexes of their corresponding expression nodes to return a list of instructions for each\n * template function.\n *\n * Because embedded templates have different indexes for each placeholder, each parameter (except\n * the translation) is an array, where each value corresponds to a different template, by order of\n * appearance.\n *\n * @param {?} translation A translation string where placeholders are represented by `{$name}`\n * @param {?} elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param {?=} expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param {?=} templateRoots An array of template roots whose content should be ignored when\n * generating the instructions for their parent template.\n * @param {?=} lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n *\n * @return {?} A list of instructions used to translate each template.\n */\nfunction i18nMapping(translation, elements, expressions, templateRoots, lastChildIndex) {\n    /** @type {?} */\n    const translationParts = translation.split(i18nTagRegex);\n    /** @type {?} */\n    const nbTemplates = templateRoots ? templateRoots.length + 1 : 1;\n    /** @type {?} */\n    const instructions = (new Array(nbTemplates)).fill(undefined);\n    generateMappingInstructions(0, 0, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n    return instructions;\n}\n/**\n * Internal function that reads the translation parts and generates a set of instructions for each\n * template.\n *\n * See `i18nMapping()` for more details.\n *\n * @param {?} tmplIndex The order of appearance of the template.\n * 0 for the root template, following indexes match the order in `templateRoots`.\n * @param {?} partIndex The current index in `translationParts`.\n * @param {?} translationParts The translation string split into an array of placeholders and text\n * elements.\n * @param {?} instructions The current list of instructions to update.\n * @param {?} elements An array containing, for each template, the maps of element placeholders and\n * their indexes.\n * @param {?=} expressions An array containing, for each template, the maps of expression placeholders\n * and their indexes.\n * @param {?=} templateRoots An array of template roots whose content should be ignored when\n * generating the instructions for their parent template.\n * @param {?=} lastChildIndex The index of the last child of the i18n node. Used when the i18n block is\n * an ng-container.\n *\n * @return {?} the current index in `translationParts`\n */\nfunction generateMappingInstructions(tmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex) {\n    /** @type {?} */\n    const tmplInstructions = [];\n    /** @type {?} */\n    const phVisited = [];\n    /** @type {?} */\n    let openedTagCount = 0;\n    /** @type {?} */\n    let maxIndex = 0;\n    /** @type {?} */\n    let currentElements = elements && elements[tmplIndex] ? elements[tmplIndex] : null;\n    /** @type {?} */\n    let currentExpressions = expressions && expressions[tmplIndex] ? expressions[tmplIndex] : null;\n    instructions[tmplIndex] = tmplInstructions;\n    for (; partIndex < translationParts.length; partIndex++) {\n        /** @type {?} */\n        const value = translationParts[partIndex];\n        // Odd indexes are placeholders\n        if (partIndex & 1) {\n            /** @type {?} */\n            let phIndex;\n            if (currentElements && currentElements[value] !== undefined) {\n                phIndex = currentElements[value];\n                /** @type {?} */\n                let templateRootIndex = templateRoots ? templateRoots.indexOf(value) : -1;\n                if (templateRootIndex !== -1 && (templateRootIndex + 1) !== tmplIndex) {\n                    // This is a template root, it has no closing tag, not treating it as an element\n                    tmplInstructions.push(phIndex | -2147483648 /* TemplateRoot */);\n                }\n                else {\n                    tmplInstructions.push(phIndex | 1073741824 /* Element */);\n                    openedTagCount++;\n                }\n                phVisited.push(value);\n            }\n            else if (currentExpressions && currentExpressions[value] !== undefined) {\n                phIndex = currentExpressions[value];\n                // The placeholder represents an expression, add an instruction to move it\n                tmplInstructions.push(phIndex | 1610612736 /* Expression */);\n                phVisited.push(value);\n            }\n            else {\n                // It is a closing tag\n                tmplInstructions.push(-1073741824 /* CloseNode */);\n                if (tmplIndex > 0) {\n                    openedTagCount--;\n                    // If we have reached the closing tag for this template, exit the loop\n                    if (openedTagCount === 0) {\n                        break;\n                    }\n                }\n            }\n            if (phIndex !== undefined && phIndex > maxIndex) {\n                maxIndex = phIndex;\n            }\n            if (templateRoots) {\n                /** @type {?} */\n                const newTmplIndex = templateRoots.indexOf(value) + 1;\n                if (newTmplIndex !== 0 && newTmplIndex !== tmplIndex) {\n                    partIndex = generateMappingInstructions(newTmplIndex, partIndex, translationParts, instructions, elements, expressions, templateRoots, lastChildIndex);\n                }\n            }\n        }\n        else if (value) {\n            // It's a non-empty string, create a text node\n            tmplInstructions.push(536870912 /* Text */, value);\n        }\n    }\n    // Add instructions to remove elements that are not used in the translation\n    if (elements) {\n        /** @type {?} */\n        const tmplElements = elements[tmplIndex];\n        if (tmplElements) {\n            /** @type {?} */\n            const phKeys = Object.keys(tmplElements);\n            for (let i = 0; i < phKeys.length; i++) {\n                /** @type {?} */\n                const ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    /** @type {?} */\n                    let index = tmplElements[ph];\n                    // Add an instruction to remove the element\n                    tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                    if (index > maxIndex) {\n                        maxIndex = index;\n                    }\n                }\n            }\n        }\n    }\n    // Add instructions to remove expressions that are not used in the translation\n    if (expressions) {\n        /** @type {?} */\n        const tmplExpressions = expressions[tmplIndex];\n        if (tmplExpressions) {\n            /** @type {?} */\n            const phKeys = Object.keys(tmplExpressions);\n            for (let i = 0; i < phKeys.length; i++) {\n                /** @type {?} */\n                const ph = phKeys[i];\n                if (phVisited.indexOf(ph) === -1) {\n                    /** @type {?} */\n                    let index = tmplExpressions[ph];\n                    if (ngDevMode) {\n                        assertLessThan(index.toString(2).length, 28, `Index ${index} is too big and will overflow`);\n                    }\n                    // Add an instruction to remove the expression\n                    tmplInstructions.push(index | -536870912 /* RemoveNode */);\n                    if (index > maxIndex) {\n                        maxIndex = index;\n                    }\n                }\n            }\n        }\n    }\n    if (tmplIndex === 0 && typeof lastChildIndex === 'number') {\n        // The current parent is an ng-container and it has more children after the translation that we\n        // need to append to keep the order of the DOM nodes correct\n        for (let i = maxIndex + 1; i <= lastChildIndex; i++) {\n            if (ngDevMode) {\n                assertLessThan(i.toString(2).length, 28, `Index ${i} is too big and will overflow`);\n            }\n            tmplInstructions.push(i | -1610612736 /* Any */);\n        }\n    }\n    return partIndex;\n}\n/**\n * @param {?} node\n * @param {?} parentNode\n * @param {?} previousNode\n * @return {?}\n */\nfunction appendI18nNode(node, parentNode, previousNode) {\n    if (ngDevMode) {\n        ngDevMode.rendererMoveNode++;\n    }\n    /** @type {?} */\n    const viewData = getViewData();\n    appendChild(parentNode, node.native || null, viewData);\n    /** @type {?} */\n    const firstTemplatePass = node.view[TVIEW].firstTemplatePass;\n    if (firstTemplatePass) {\n        if (previousNode === parentNode && node.tNode !== parentNode.tNode.child) {\n            node.tNode.next = parentNode.tNode.child;\n            parentNode.tNode.child = node.tNode;\n        }\n        else if (previousNode !== parentNode && node.tNode !== previousNode.tNode.next) {\n            node.tNode.next = previousNode.tNode.next;\n            previousNode.tNode.next = node.tNode;\n        }\n        else {\n            node.tNode.next = null;\n        }\n        if (parentNode.view === node.view)\n            node.tNode.parent = /** @type {?} */ (parentNode.tNode);\n    }\n    // Template containers also have a comment node for the `ViewContainerRef` that should be moved\n    if (node.tNode.type === 0 /* Container */ && node.dynamicLContainerNode) {\n        appendChild(parentNode, node.dynamicLContainerNode.native || null, viewData);\n        if (firstTemplatePass) {\n            node.tNode.dynamicContainerNode = node.dynamicLContainerNode.tNode;\n            node.dynamicLContainerNode.tNode.parent = /** @type {?} */ (node.tNode);\n        }\n        return node.dynamicLContainerNode;\n    }\n    return node;\n}\n/**\n * Takes a list of instructions generated by `i18nMapping()` to transform the template accordingly.\n *\n * @param {?} startIndex Index of the first element to translate (for instance the first child of the\n * element with the i18n attribute).\n * @param {?} instructions The list of instructions to apply on the current view.\n * @return {?}\n */\nfunction i18nApply(startIndex, instructions) {\n    /** @type {?} */\n    const viewData = getViewData();\n    if (ngDevMode) {\n        assertEqual(viewData[BINDING_INDEX], -1, 'i18nApply should be called before any binding');\n    }\n    if (!instructions) {\n        return;\n    }\n    /** @type {?} */\n    const renderer = getRenderer();\n    /** @type {?} */\n    let localParentNode = getParentLNode(load(startIndex)) || getPreviousOrParentNode();\n    /** @type {?} */\n    let localPreviousNode = localParentNode;\n    resetApplicationState(); // We don't want to add to the tree with the wrong previous node\n    for (let i = 0; i < instructions.length; i++) {\n        /** @type {?} */\n        const instruction = /** @type {?} */ (instructions[i]);\n        switch (instruction & -536870912 /* InstructionMask */) {\n            case 1073741824 /* Element */:\n                /** @type {?} */\n                const element$$1 = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(element$$1, localParentNode, localPreviousNode);\n                localParentNode = element$$1;\n                break;\n            case 1610612736 /* Expression */:\n            case -2147483648 /* TemplateRoot */:\n            case -1610612736 /* Any */:\n                /** @type {?} */\n                const node = load(instruction & 536870911 /* IndexMask */);\n                localPreviousNode = appendI18nNode(node, localParentNode, localPreviousNode);\n                break;\n            case 536870912 /* Text */:\n                if (ngDevMode) {\n                    ngDevMode.rendererCreateTextNode++;\n                }\n                /** @type {?} */\n                const value = instructions[++i];\n                /** @type {?} */\n                const textRNode = createTextNode(value, renderer);\n                /** @type {?} */\n                const textLNode = createLNode(viewData.length - HEADER_OFFSET, 3 /* Element */, textRNode, null, null);\n                localPreviousNode = appendI18nNode(textLNode, localParentNode, localPreviousNode);\n                resetApplicationState();\n                break;\n            case -1073741824 /* CloseNode */:\n                localPreviousNode = localParentNode;\n                localParentNode = /** @type {?} */ ((getParentLNode(localParentNode)));\n                break;\n            case -536870912 /* RemoveNode */:\n                if (ngDevMode) {\n                    ngDevMode.rendererRemoveNode++;\n                }\n                /** @type {?} */\n                const index = instruction & 536870911 /* IndexMask */;\n                /** @type {?} */\n                const removedNode = load(index);\n                /** @type {?} */\n                const parentNode = /** @type {?} */ ((getParentLNode(removedNode)));\n                removeChild(parentNode, removedNode.native || null, viewData);\n                // For template containers we also need to remove their `ViewContainerRef` from the DOM\n                if (removedNode.tNode.type === 0 /* Container */ && removedNode.dynamicLContainerNode) {\n                    removeChild(parentNode, removedNode.dynamicLContainerNode.native || null, viewData);\n                    removedNode.dynamicLContainerNode.tNode.detached = true;\n                    removedNode.dynamicLContainerNode.data[RENDER_PARENT] = null;\n                }\n                break;\n        }\n    }\n}\n/**\n * Takes a translation string and the initial list of expressions and returns a list of instructions\n * that will be used to translate an attribute.\n * Even indexes contain static strings, while odd indexes contain the index of the expression whose\n * value will be concatenated into the final translation.\n * @param {?} translation\n * @param {?} placeholders\n * @return {?}\n */\nfunction i18nExpMapping(translation, placeholders) {\n    /** @type {?} */\n    const staticText = translation.split(i18nTagRegex);\n    // odd indexes are placeholders\n    for (let i = 1; i < staticText.length; i += 2) {\n        staticText[i] = placeholders[staticText[i]];\n    }\n    return staticText;\n}\n/**\n * Checks if the value of an expression has changed and replaces it by its value in a translation,\n * or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation1(instructions, v0) {\n    /** @type {?} */\n    const different = bindingUpdated(v0);\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            res += stringify$1(v0);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 2 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation2(instructions, v0, v1) {\n    /** @type {?} */\n    const different = bindingUpdated2(v0, v1);\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b1 ? v1 : v0;\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 3 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation3(instructions, v0, v1, v2) {\n    /** @type {?} */\n    let different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b2 ? v2 : (b1 ? v1 : v0);\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 4 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation4(instructions, v0, v1, v2, v3) {\n    /** @type {?} */\n    const different = bindingUpdated4(v0, v1, v2, v3);\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0);\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 5 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n * @param {?} v4 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation5(instructions, v0, v1, v2, v3, v4) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b4 = idx & 4;\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b4 ? v4 : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 6 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n * @param {?} v4 value checked for change.\n * @param {?} v5 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation6(instructions, v0, v1, v2, v3, v4, v5) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b4 = idx & 4;\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b4 ? (b1 ? v5 : v4) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 7 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n * @param {?} v4 value checked for change.\n * @param {?} v5 value checked for change.\n * @param {?} v6 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation7(instructions, v0, v1, v2, v3, v4, v5, v6) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b4 = idx & 4;\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b4 ? (b2 ? v6 : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Checks if the values of up to 8 expressions have changed and replaces them by their values in a\n * translation, or returns NO_CHANGE.\n *\n * @param {?} instructions A list of instructions that will be used to translate an attribute.\n * @param {?} v0 value checked for change.\n * @param {?} v1 value checked for change.\n * @param {?} v2 value checked for change.\n * @param {?} v3 value checked for change.\n * @param {?} v4 value checked for change.\n * @param {?} v5 value checked for change.\n * @param {?} v6 value checked for change.\n * @param {?} v7 value checked for change.\n *\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolation8(instructions, v0, v1, v2, v3, v4, v5, v6, v7) {\n    /** @type {?} */\n    let different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are bindings\n        if (i & 1) {\n            /** @type {?} */\n            const idx = /** @type {?} */ (instructions[i]);\n            /** @type {?} */\n            const b4 = idx & 4;\n            /** @type {?} */\n            const b2 = idx & 2;\n            /** @type {?} */\n            const b1 = idx & 1;\n            /** @type {?} */\n            const value = b4 ? (b2 ? (b1 ? v7 : v6) : (b1 ? v5 : v4)) : (b2 ? (b1 ? v3 : v2) : (b1 ? v1 : v0));\n            res += stringify$1(value);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n/**\n * Create a translated interpolation binding with a variable number of expressions.\n *\n * If there are 1 to 8 expressions then `i18nInterpolation()` should be used instead. It is faster\n * because there is no need to create an array of expressions and iterate over it.\n *\n * @param {?} instructions\n * @param {?} values\n * @return {?} The concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction i18nInterpolationV(instructions, values) {\n    /** @type {?} */\n    let different = false;\n    for (let i = 0; i < values.length; i++) {\n        // Check if bindings have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    /** @type {?} */\n    let res = '';\n    for (let i = 0; i < instructions.length; i++) {\n        // Odd indexes are placeholders\n        if (i & 1) {\n            res += stringify$1(values[/** @type {?} */ (instructions[i])]);\n        }\n        else {\n            res += instructions[i];\n        }\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst COMPONENT_FACTORY_RESOLVER = {\n    provide: ComponentFactoryResolver,\n    useFactory: () => new ComponentFactoryResolver$1(),\n    deps: [],\n};\n/**\n * @template T\n */\nclass NgModuleRef$1 extends NgModuleRef {\n    /**\n     * @param {?} ngModuleType\n     * @param {?} parentInjector\n     */\n    constructor(ngModuleType, parentInjector) {\n        super();\n        // tslint:disable-next-line:require-internal-with-underscore\n        this._bootstrapComponents = [];\n        this.destroyCbs = [];\n        /** @type {?} */\n        const ngModuleDef = (/** @type {?} */ ((ngModuleType))).ngModuleDef;\n        ngDevMode && assertDefined(ngModuleDef, `NgModule '${stringify(ngModuleType)}' is not a subtype of 'NgModuleType'.`);\n        this._bootstrapComponents = ngModuleDef.bootstrap;\n        /** @type {?} */\n        const additionalProviders = [\n            COMPONENT_FACTORY_RESOLVER, {\n                provide: NgModuleRef,\n                useValue: this,\n            }\n        ];\n        this.injector = createInjector(ngModuleType, parentInjector, additionalProviders);\n        this.instance = this.injector.get(ngModuleType);\n        this.componentFactoryResolver = new ComponentFactoryResolver$1();\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).forEach(fn => fn());\n        this.destroyCbs = null;\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    onDestroy(callback) {\n        ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed'); /** @type {?} */\n        ((this.destroyCbs)).push(callback);\n    }\n}\n/**\n * @template T\n */\nclass NgModuleFactory$1 extends NgModuleFactory {\n    /**\n     * @param {?} moduleType\n     */\n    constructor(moduleType) {\n        super();\n        this.moduleType = moduleType;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    create(parentInjector) {\n        return new NgModuleRef$1(this.moduleType, parentInjector);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @template T\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn Function that returns a value\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} value\n */\nfunction pureFunction0(slotOffset, pureFn, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 1);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const value = getCreationMode() ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn Function that returns an updated value\n * @param {?} exp Updated expression value\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction1(slotOffset, pureFn, exp, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 2);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const value = bindingUpdated(exp) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 3);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const value = bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 4);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const different = bindingUpdated2(exp1, exp2);\n    /** @type {?} */\n    const value = bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 5);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const value = bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 6);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    /** @type {?} */\n    const value = bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 7);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    /** @type {?} */\n    const value = bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 8);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    let different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    /** @type {?} */\n    const value = bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn\n * @param {?} exp1\n * @param {?} exp2\n * @param {?} exp3\n * @param {?} exp4\n * @param {?} exp5\n * @param {?} exp6\n * @param {?} exp7\n * @param {?} exp8\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, 9);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    const different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    /** @type {?} */\n    const value = bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param {?} exps An array of binding values\n * @param {?=} thisArg Optional calling context of pureFn\n * @return {?} Updated or cached value\n */\nfunction pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n    ngDevMode && assertReservedSlotInitialized(slotOffset, exps.length + 1);\n    /** @type {?} */\n    const index = moveBindingIndexToReservedSlot(slotOffset);\n    /** @type {?} */\n    let different = false;\n    for (let i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    /** @type {?} */\n    const value = different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n    restoreBindingIndex(index);\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Create a pipe.\n *\n * @param {?} index Pipe index where the pipe will be stored.\n * @param {?} pipeName The name of the pipe\n * @return {?} T the instance of the pipe.\n */\nfunction pipe(index, pipeName) {\n    /** @type {?} */\n    const tView = getTView();\n    /** @type {?} */\n    let pipeDef;\n    /** @type {?} */\n    const adjustedIndex = index + HEADER_OFFSET;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[adjustedIndex] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = /** @type {?} */ (tView.data[adjustedIndex]);\n    }\n    /** @type {?} */\n    const pipeInstance = pipeDef.factory();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param {?} name Name of pipe to resolve\n * @param {?} registry Full list of available pipes\n * @return {?} Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (let i = 0; i < registry.length; i++) {\n            /** @type {?} */\n            const pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(`Pipe with name '${name}' not found!`);\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind1(index, slotOffset, v1) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind2(index, slotOffset, v1, v2) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 4rd argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind3(index, slotOffset, v1, v2, v3) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} v1 1st argument to {\\@link PipeTransform#transform}.\n * @param {?} v2 2nd argument to {\\@link PipeTransform#transform}.\n * @param {?} v3 3rd argument to {\\@link PipeTransform#transform}.\n * @param {?} v4 4th argument to {\\@link PipeTransform#transform}.\n * @return {?}\n */\nfunction pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ?\n        pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {\\@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param {?} index Pipe index where the pipe was stored on creation.\n * @param {?} slotOffset the offset in the reserved slot space {\\@link reserveSlots}\n * @param {?} values Array of arguments to pass to {\\@link PipeTransform#transform} method.\n * @return {?}\n */\nfunction pipeBindV(index, slotOffset, values) {\n    /** @type {?} */\n    const pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\n/**\n * @param {?} index\n * @return {?}\n */\nfunction isPure(index) {\n    return (/** @type {?} */ (getTView().data[index + HEADER_OFFSET])).pure;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass LQueries_ {\n    /**\n     * @param {?=} deep\n     */\n    constructor(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    /**\n     * @template T\n     * @param {?} queryList\n     * @param {?} predicate\n     * @param {?=} descend\n     * @param {?=} read\n     * @return {?}\n     */\n    track(queryList, predicate, descend, read) {\n        if (descend) {\n            this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    clone() { return this.deep ? new LQueries_(this.deep) : null; }\n    /**\n     * @return {?}\n     */\n    child() {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    container() {\n        /** @type {?} */\n        let result = null;\n        /** @type {?} */\n        let query = this.deep;\n        while (query) {\n            /** @type {?} */\n            const containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            /** @type {?} */\n            const clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    }\n    /**\n     * @return {?}\n     */\n    createView() {\n        /** @type {?} */\n        let result = null;\n        /** @type {?} */\n        let query = this.deep;\n        while (query) {\n            /** @type {?} */\n            const clonedQuery = {\n                next: null,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    insertView(index) {\n        /** @type {?} */\n        let query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.'); /** @type {?} */\n            ((query.containerValues)).splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    addNode(node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    }\n    /**\n     * @return {?}\n     */\n    removeView() {\n        /** @type {?} */\n        let query = this.deep;\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            /** @type {?} */\n            const containerValues = /** @type {?} */ ((query.containerValues));\n            /** @type {?} */\n            const viewValuesIdx = containerValues.indexOf(query.values);\n            /** @type {?} */\n            const removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n}\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param {?} tNode static data of a node to check\n * @param {?} selector selector to match\n * @return {?} directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    /** @type {?} */\n    const localNames = tNode.localNames;\n    if (localNames) {\n        for (let i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return /** @type {?} */ (localNames[i + 1]);\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param {?} node Node on which directives are present.\n * @param {?} type Type of a directive to look for.\n * @return {?} Index of a found directive or null when none found.\n */\nfunction getIdxOfMatchingDirective(node, type) {\n    /** @type {?} */\n    const defs = /** @type {?} */ ((node.view[TVIEW].directives));\n    /** @type {?} */\n    const flags = node.tNode.flags;\n    /** @type {?} */\n    const count = flags & 4095 /* DirectiveCountMask */;\n    /** @type {?} */\n    const start = flags >> 14 /* DirectiveStartingIndexShift */;\n    /** @type {?} */\n    const end = start + count;\n    for (let i = start; i < end; i++) {\n        /** @type {?} */\n        const def = /** @type {?} */ (defs[i]);\n        if (def.type === type && def.diPublic) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} nodeInjector\n * @param {?} node\n * @param {?} read\n * @param {?} directiveIdx\n * @return {?}\n */\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        /** @type {?} */\n        const matchingIdx = getIdxOfMatchingDirective(node, /** @type {?} */ (read));\n        if (matchingIdx !== null) {\n            return /** @type {?} */ ((node.view[DIRECTIVES]))[matchingIdx];\n        }\n    }\n    return null;\n}\n/**\n * @param {?} query\n * @param {?} node\n * @return {?}\n */\nfunction add(query, node) {\n    /** @type {?} */\n    const nodeInjector = getOrCreateNodeInjectorForNode(/** @type {?} */ (node));\n    while (query) {\n        /** @type {?} */\n        const predicate = query.predicate;\n        /** @type {?} */\n        const type = predicate.type;\n        if (type) {\n            /** @type {?} */\n            const directiveIdx = getIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                /** @type {?} */\n                const result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            /** @type {?} */\n            const selector = /** @type {?} */ ((predicate.selector));\n            for (let i = 0; i < selector.length; i++) {\n                /** @type {?} */\n                const directiveIdx = getIdxOfMatchingSelector(node.tNode, selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertDefined(predicate.read, 'the node should have a predicate');\n                    /** @type {?} */\n                    const result = readFromNodeInjector(nodeInjector, node, /** @type {?} */ ((predicate.read)), directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\n/**\n * @param {?} query\n * @param {?} matchingValue\n * @return {?}\n */\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\n/**\n * @template T\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createPredicate(predicate, read) {\n    /** @type {?} */\n    const isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : /** @type {?} */ (predicate),\n        selector: isArray ? /** @type {?} */ (predicate) : null,\n        read: read\n    };\n}\n/**\n * @template T\n * @param {?} previous\n * @param {?} queryList\n * @param {?} predicate\n * @param {?} read\n * @return {?}\n */\nfunction createQuery$1(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: (/** @type {?} */ ((queryList)))._valuesTree,\n        containerValues: null\n    };\n}\n/**\n * @template T\n */\nclass QueryList_ {\n    constructor() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /**\n         * \\@internal\n         */\n        this._valuesTree = [];\n    }\n    /**\n     * @return {?}\n     */\n    get length() { return this._values.length; }\n    /**\n     * @return {?}\n     */\n    get first() {\n        /** @type {?} */\n        let values = this._values;\n        return values.length ? values[0] : null;\n    }\n    /**\n     * @return {?}\n     */\n    get last() {\n        /** @type {?} */\n        let values = this._values;\n        return values.length ? values[values.length - 1] : null;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    map(fn) { return this._values.map(fn); }\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    filter(fn) {\n        return this._values.filter(fn);\n    }\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    find(fn) {\n        return this._values.find(fn);\n    }\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    reduce(fn, init) {\n        return this._values.reduce(fn, init);\n    }\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) { this._values.forEach(fn); }\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    some(fn) {\n        return this._values.some(fn);\n    }\n    /**\n     * @return {?}\n     */\n    toArray() { return this._values.slice(0); }\n    /**\n     * @return {?}\n     */\n    [getSymbolIterator()]() { return (/** @type {?} */ (this._values))[getSymbolIterator()](); }\n    /**\n     * @return {?}\n     */\n    toString() { return this._values.toString(); }\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    reset(res) {\n        this._values = flatten$1(res);\n        (/** @type {?} */ (this)).dirty = false;\n    }\n    /**\n     * @return {?}\n     */\n    notifyOnChanges() { (/** @type {?} */ (this.changes)).emit(this); }\n    /**\n     * @return {?}\n     */\n    setDirty() { (/** @type {?} */ (this)).dirty = true; }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    }\n}\n/** @type {?} */\nconst QueryList$1 = /** @type {?} */ (QueryList_);\n/**\n * Creates and returns a QueryList.\n *\n * @template T\n * @param {?} memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param {?} predicate The type for which the query will search\n * @param {?=} descend Whether or not to descend into children\n * @param {?=} read What to save in the query\n * @return {?} QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    /** @type {?} */\n    const queryList = new QueryList$1();\n    /** @type {?} */\n    const queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    storeCleanupWithContext(null, queryList, queryList.destroy);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n * @param {?} queryList\n * @return {?}\n */\nfunction queryRefresh(queryList) {\n    /** @type {?} */\n    const queryListImpl = (/** @type {?} */ ((queryList)));\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * @param {?} value\n * @param {?} type\n * @return {?}\n */\nfunction allowSanitizationBypass(value, type) {\n    return (value instanceof String && (/** @type {?} */ (value))[BRAND] === type) ? true : false;\n}\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link htmlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedHtml `html` string which needs to be implicitly trusted.\n * @return {?} a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link styleSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedStyle `style` string which needs to be implicitly trusted.\n * @return {?} a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link scriptSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedScript `script` string which needs to be implicitly trusted.\n * @return {?} a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link urlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedUrl `url` string which needs to be implicitly trusted.\n * @return {?} a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {\\@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param {?} trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @return {?} a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n}\n/**\n * @param {?} trustedString\n * @param {?} mode\n * @return {?}\n */\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    /** @type {?} */\n    const trusted = /** @type {?} */ (new String(trustedString));\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustHtml}.\n *\n * @param {?} unsafeHtml untrusted `html`, typically from the user.\n * @return {?} `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    /** @type {?} */\n    const s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(SecurityContext.HTML, unsafeHtml) || '';\n    }\n    if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustStyle}.\n *\n * @param {?} unsafeStyle untrusted `style`, typically from the user.\n * @return {?} `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    /** @type {?} */\n    const s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(SecurityContext.STYLE, unsafeStyle) || '';\n    }\n    if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {\\@link bypassSanitizationTrustUrl}.\n *\n * @param {?} unsafeUrl untrusted `url`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    /** @type {?} */\n    const s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(SecurityContext.URL, unsafeUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {\\@link bypassSanitizationTrustResourceUrl}.\n *\n * @param {?} unsafeResourceUrl untrusted `url`, typically from the user.\n * @return {?} `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    /** @type {?} */\n    const s = getCurrentSanitizer();\n    if (s) {\n        return s.sanitize(SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n    }\n    if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// clang-format on\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APPLICATION_MODULE_PROVIDERS as ɵangular_packages_core_core_l, _iterableDiffersFactory as ɵangular_packages_core_core_i, _keyValueDiffersFactory as ɵangular_packages_core_core_j, _localeFactory as ɵangular_packages_core_core_k, _appIdRandomProviderFactory as ɵangular_packages_core_core_f, DefaultIterableDifferFactory as ɵangular_packages_core_core_g, DefaultKeyValueDifferFactory as ɵangular_packages_core_core_h, ReflectiveInjector_ as ɵangular_packages_core_core_c, ReflectiveDependency as ɵangular_packages_core_core_d, resolveReflectiveProviders as ɵangular_packages_core_core_e, wtfEnabled as ɵangular_packages_core_core_m, createScope as ɵangular_packages_core_core_o, detectWTF as ɵangular_packages_core_core_n, endTimeRange as ɵangular_packages_core_core_r, leave as ɵangular_packages_core_core_p, startTimeRange as ɵangular_packages_core_core_q, getOrCreateChangeDetectorRef as ɵangular_packages_core_core_v, getOrCreateContainerRef as ɵangular_packages_core_core_y, getOrCreateElementRef as ɵangular_packages_core_core_x, getOrCreateInjectable as ɵangular_packages_core_core_w, getOrCreateNodeInjector as ɵangular_packages_core_core_u, getOrCreateTemplateRef as ɵangular_packages_core_core_z, bindingUpdated as ɵangular_packages_core_core_ba, loadInternal as ɵangular_packages_core_core_bb, makeParamDecorator as ɵangular_packages_core_core_a, makePropDecorator as ɵangular_packages_core_core_b, _def as ɵangular_packages_core_core_s, DebugContext as ɵangular_packages_core_core_t, createPlatform, assertPlatform, destroyPlatform, getPlatform, PlatformRef, ApplicationRef, enableProdMode, isDevMode, createPlatformFactory, NgProbeToken, APP_ID, PACKAGE_ROOT_URL, PLATFORM_INITIALIZER, PLATFORM_ID, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationInitStatus, DebugElement, DebugNode, asNativeElements, getDebugNode, Testability, TestabilityRegistry, setTestabilityGetter, TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, ApplicationModule, wtfCreateScope, wtfLeave, wtfStartTimeRange, wtfEndTimeRange, Type, EventEmitter, ErrorHandler, Sanitizer, SecurityContext, ANALYZE_FOR_ENTRY_COMPONENTS, Attribute, ContentChild, ContentChildren, Query, ViewChild, ViewChildren, Component, Directive, HostBinding, HostListener, Input, Output, Pipe, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA, NgModule, ViewEncapsulation, Version, VERSION, defineInjectable, defineInjector, forwardRef, resolveForwardRef, Injectable, inject, INJECTOR, Injector, ReflectiveInjector, createInjector, ResolvedReflectiveFactory, ReflectiveKey, InjectionToken, Inject, Optional, Self, SkipSelf, Host, NgZone, NoopNgZone as ɵNoopNgZone, RenderComponentType, Renderer, Renderer2, RendererFactory2, RendererStyleFlags2, RootRenderer, COMPILER_OPTIONS, Compiler, CompilerFactory, ModuleWithComponentFactories, ComponentFactory, ComponentRef, ComponentFactoryResolver, ElementRef, NgModuleFactory, NgModuleRef, NgModuleFactoryLoader, getModuleFactory, QueryList, SystemJsNgModuleLoader, SystemJsNgModuleLoaderConfig, TemplateRef, ViewContainerRef, EmbeddedViewRef, ViewRef, ChangeDetectionStrategy, ChangeDetectorRef, DefaultIterableDiffer, IterableDiffers, KeyValueDiffers, SimpleChange, WrappedValue, platformCore, ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS, APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER, defaultIterableDiffers as ɵdefaultIterableDiffers, defaultKeyValueDiffers as ɵdefaultKeyValueDiffers, devModeEqual as ɵdevModeEqual, isListLikeIterable as ɵisListLikeIterable, ChangeDetectorStatus as ɵChangeDetectorStatus, isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy, Console as ɵConsole, inject as ɵinject, setCurrentInjector as ɵsetCurrentInjector, APP_ROOT as ɵAPP_ROOT, ivyEnabled as ɵivyEnabled, ComponentFactory as ɵComponentFactory, CodegenComponentFactoryResolver as ɵCodegenComponentFactoryResolver, resolveComponentResources as ɵresolveComponentResources, ReflectionCapabilities as ɵReflectionCapabilities, RenderDebugInfo as ɵRenderDebugInfo, _sanitizeHtml as ɵ_sanitizeHtml, _sanitizeStyle as ɵ_sanitizeStyle, _sanitizeUrl as ɵ_sanitizeUrl, _global as ɵglobal, looseIdentical as ɵlooseIdentical, stringify as ɵstringify, makeDecorator as ɵmakeDecorator, isObservable as ɵisObservable, isPromise as ɵisPromise, clearOverrides as ɵclearOverrides, initServicesIfNeeded as ɵinitServicesIfNeeded, overrideComponentView as ɵoverrideComponentView, overrideProvider as ɵoverrideProvider, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR, defineComponent as ɵdefineComponent, defineDirective as ɵdefineDirective, definePipe as ɵdefinePipe, defineNgModule as ɵdefineNgModule, detectChanges as ɵdetectChanges, renderComponent as ɵrenderComponent, directiveInject as ɵdirectiveInject, injectElementRef as ɵinjectElementRef, injectTemplateRef as ɵinjectTemplateRef, injectViewContainerRef as ɵinjectViewContainerRef, injectChangeDetectorRef as ɵinjectChangeDetectorRef, injectAttribute as ɵinjectAttribute, PublicFeature as ɵPublicFeature, InheritDefinitionFeature as ɵInheritDefinitionFeature, NgOnChangesFeature as ɵNgOnChangesFeature, markDirty as ɵmarkDirty, NgModuleFactory$1 as ɵNgModuleFactory, NO_CHANGE as ɵNC, container as ɵC, elementStart as ɵE, namespaceHTML as ɵNH, namespaceMathML as ɵNM, namespaceSVG as ɵNS, element as ɵEe, listener as ɵL, text as ɵT, embeddedViewStart as ɵV, query as ɵQ, registerContentQuery as ɵQr, loadDirective as ɵd, projection as ɵP, bind as ɵb, interpolation1 as ɵi1, interpolation2 as ɵi2, interpolation3 as ɵi3, interpolation4 as ɵi4, interpolation5 as ɵi5, interpolation6 as ɵi6, interpolation7 as ɵi7, interpolation8 as ɵi8, interpolationV as ɵiV, pipeBind1 as ɵpb1, pipeBind2 as ɵpb2, pipeBind3 as ɵpb3, pipeBind4 as ɵpb4, pipeBindV as ɵpbV, pureFunction0 as ɵf0, pureFunction1 as ɵf1, pureFunction2 as ɵf2, pureFunction3 as ɵf3, pureFunction4 as ɵf4, pureFunction5 as ɵf5, pureFunction6 as ɵf6, pureFunction7 as ɵf7, pureFunction8 as ɵf8, pureFunctionV as ɵfV, containerRefreshStart as ɵcR, containerRefreshEnd as ɵcr, queryRefresh as ɵqR, loadQueryList as ɵql, elementEnd as ɵe, elementProperty as ɵp, projectionDef as ɵpD, reserveSlots as ɵrS, elementAttribute as ɵa, elementStyling as ɵs, elementStylingMap as ɵsm, elementStyleProp as ɵsp, elementStylingApply as ɵsa, elementClassProp as ɵcp, textBinding as ɵt, embeddedViewEnd as ɵv, store as ɵst, load as ɵld, pipe as ɵPp, whenRendered as ɵwhenRendered, i18nApply as ɵiA, i18nExpMapping as ɵiEM, i18nInterpolation1 as ɵiI1, i18nInterpolation2 as ɵiI2, i18nInterpolation3 as ɵiI3, i18nInterpolation4 as ɵiI4, i18nInterpolation5 as ɵiI5, i18nInterpolation6 as ɵiI6, i18nInterpolation7 as ɵiI7, i18nInterpolation8 as ɵiI8, i18nInterpolationV as ɵIV, i18nMapping as ɵiM, sanitizeHtml as ɵsanitizeHtml, sanitizeStyle as ɵsanitizeStyle, sanitizeUrl as ɵsanitizeUrl, sanitizeResourceUrl as ɵsanitizeResourceUrl, bypassSanitizationTrustHtml as ɵbypassSanitizationTrustHtml, bypassSanitizationTrustStyle as ɵbypassSanitizationTrustStyle, bypassSanitizationTrustScript as ɵbypassSanitizationTrustScript, bypassSanitizationTrustUrl as ɵbypassSanitizationTrustUrl, bypassSanitizationTrustResourceUrl as ɵbypassSanitizationTrustResourceUrl, registerModuleFactory as ɵregisterModuleFactory, EMPTY_ARRAY$2 as ɵEMPTY_ARRAY, EMPTY_MAP as ɵEMPTY_MAP, anchorDef as ɵand, createComponentFactory as ɵccf, createNgModuleFactory as ɵcmf, createRendererType2 as ɵcrt, directiveDef as ɵdid, elementDef as ɵeld, elementEventFullName as ɵelementEventFullName, getComponentViewDefinitionFactory as ɵgetComponentViewDefinitionFactory, inlineInterpolate as ɵinlineInterpolate, interpolate as ɵinterpolate, moduleDef as ɵmod, moduleProvideDef as ɵmpd, ngContentDef as ɵncd, nodeValue as ɵnov, pipeDef as ɵpid, providerDef as ɵprd, pureArrayDef as ɵpad, pureObjectDef as ɵpod, purePipeDef as ɵppd, queryDef as ɵqud, textDef as ɵted, unwrapValue as ɵunv, viewDef as ɵvid };\n//# sourceMappingURL=core.js.map\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar BreadcrumbsService = /** @class */ (function () {\n    function BreadcrumbsService() {\n        this.prefixedBreadcrumbs = [];\n        this.breadcrumbs = [];\n        this.breadcrumbsSource = new rxjs_1.Subject();\n        this.breadcrumbsChanged$ = this.breadcrumbsSource.asObservable();\n        if (localStorage.getItem('prefixedBreadcrumbs') != null) {\n            this.prefixedBreadcrumbs = (JSON.parse(localStorage.getItem('prefixedBreadcrumbs')));\n        }\n    }\n    //Store the breadcrumbs of the current route\n    BreadcrumbsService.prototype.store = function (breadcrumbs) {\n        this.breadcrumbs = breadcrumbs;\n        var allBreadcrumbs = this.prefixedBreadcrumbs.concat(this.breadcrumbs);\n        this.breadcrumbsSource.next(allBreadcrumbs);\n    };\n    // Add a prefixed breadcrumb\n    BreadcrumbsService.prototype.storePrefixed = function (breadcrumb) {\n        this.storeIfUnique(breadcrumb);\n        localStorage.setItem('prefixedBreadcrumbs', JSON.stringify(this.prefixedBreadcrumbs));\n        var allBreadcrumbs = this.prefixedBreadcrumbs.concat(this.breadcrumbs);\n        this.breadcrumbsSource.next(allBreadcrumbs);\n    };\n    //Return the breadcrumbs\n    BreadcrumbsService.prototype.get = function () {\n        return this.breadcrumbsChanged$;\n    };\n    // storeIfUnique checks if there are any duplicate prefixed breadcrumbs\n    BreadcrumbsService.prototype.storeIfUnique = function (newBreadcrumb) {\n        var isUnique = true;\n        for (var _i = 0, _a = this.prefixedBreadcrumbs; _i < _a.length; _i++) {\n            var crumb = _a[_i];\n            if (newBreadcrumb.url == crumb.url) {\n                isUnique = false;\n                break;\n            }\n        }\n        if (isUnique) {\n            this.prefixedBreadcrumbs.push(newBreadcrumb);\n        }\n    };\n    BreadcrumbsService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    /** @nocollapse */\n    BreadcrumbsService.ctorParameters = function () { return []; };\n    return BreadcrumbsService;\n}());\nexports.BreadcrumbsService = BreadcrumbsService;\n//# sourceMappingURL=breadcrumbs.service.js.map","/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport class ObjectUnsubscribedError extends Error {\n    constructor() {\n        super('object unsubscribed');\n        this.name = 'ObjectUnsubscribedError';\n        Object.setPrototypeOf(this, ObjectUnsubscribedError.prototype);\n    }\n}\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * <img src=\"./img/takeLast.png\" width=\"100%\">\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * @example <caption>Take the last 3 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 100);\n * var lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast(count) {\n    return function takeLastOperatorFunction(source) {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeLastOperator(count));\n        }\n    };\n}\nclass TakeLastOperator {\n    constructor(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.ring = new Array();\n        this.count = 0;\n    }\n    _next(value) {\n        const ring = this.ring;\n        const total = this.total;\n        const count = this.count++;\n        if (ring.length < total) {\n            ring.push(value);\n        }\n        else {\n            const index = count % total;\n            ring[index] = value;\n        }\n    }\n    _complete() {\n        const destination = this.destination;\n        let count = this.count;\n        if (count > 0) {\n            const total = this.count >= this.total ? this.total : this.count;\n            const ring = this.ring;\n            for (let i = 0; i < total; i++) {\n                const idx = (count++) % total;\n                destination.next(ring[idx]);\n            }\n        }\n        destination.complete();\n    }\n}\n//# sourceMappingURL=takeLast.js.map","import { observable as Symbol_observable } from '../symbol/observable';\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = (obj) => (subscriber) => {\n    const obs = obj[Symbol_observable]();\n    if (typeof obs.subscribe !== 'function') {\n        // Should be caught by observable subscribe function error handling.\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    }\n    else {\n        return obs.subscribe(subscriber);\n    }\n};\n//# sourceMappingURL=subscribeToObservable.js.map","import { Observable } from '../Observable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isObservable } from '../util/isObservable';\nimport { isIterable } from '../util/isIterable';\nimport { fromArray } from './fromArray';\nimport { fromPromise } from './fromPromise';\nimport { fromIterable } from './fromIterable';\nimport { fromObservable } from './fromObservable';\nimport { subscribeTo } from '../util/subscribeTo';\nexport function from(input, scheduler) {\n    if (!scheduler) {\n        if (input instanceof Observable) {\n            return input;\n        }\n        return new Observable(subscribeTo(input));\n    }\n    if (input != null) {\n        if (isObservable(input)) {\n            return fromObservable(input, scheduler);\n        }\n        else if (isPromise(input)) {\n            return fromPromise(input, scheduler);\n        }\n        else if (isArrayLike(input)) {\n            return fromArray(input, scheduler);\n        }\n        else if (isIterable(input) || typeof input === 'string') {\n            return fromIterable(input, scheduler);\n        }\n    }\n    throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n//# sourceMappingURL=from.js.map","import { observable as Symbol_observable } from '../symbol/observable';\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isObservable(input) {\n    return input && typeof input[Symbol_observable] === 'function';\n}\n//# sourceMappingURL=isObservable.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { subscribeToObservable } from '../util/subscribeToObservable';\nexport function fromObservable(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToObservable(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            sub.add(scheduler.schedule(() => {\n                const observable = input[Symbol_observable]();\n                sub.add(observable.subscribe({\n                    next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n                    error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n                    complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromObservable.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToPromise } from '../util/subscribeToPromise';\nexport function fromPromise(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToPromise(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            sub.add(scheduler.schedule(() => input.then(value => {\n                sub.add(scheduler.schedule(() => {\n                    subscriber.next(value);\n                    sub.add(scheduler.schedule(() => subscriber.complete()));\n                }));\n            }, err => {\n                sub.add(scheduler.schedule(() => subscriber.error(err)));\n            })));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromPromise.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\n/** Identifies an input as being an Iterable */\nexport function isIterable(input) {\n    return input && typeof input[Symbol_iterator] === 'function';\n}\n//# sourceMappingURL=isIterable.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { subscribeToIterable } from '../util/subscribeToIterable';\nexport function fromIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    if (!scheduler) {\n        return new Observable(subscribeToIterable(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            let iterator;\n            sub.add(() => {\n                // Finalize generators\n                if (iterator && typeof iterator.return === 'function') {\n                    iterator.return();\n                }\n            });\n            sub.add(scheduler.schedule(() => {\n                iterator = input[Symbol_iterator]();\n                sub.add(scheduler.schedule(function () {\n                    if (subscriber.closed) {\n                        return;\n                    }\n                    let value;\n                    let done;\n                    try {\n                        const result = iterator.next();\n                        value = result.value;\n                        done = result.done;\n                    }\n                    catch (err) {\n                        subscriber.error(err);\n                        return;\n                    }\n                    if (done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(value);\n                        this.schedule();\n                    }\n                }));\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromIterable.js.map","import { Action } from './Action';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        // Always replace the current state with the new state.\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        //\n        // Important implementation note:\n        //\n        // Actions only execute once by default, unless rescheduled from within the\n        // scheduled callback. This allows us to implement single and repeat\n        // actions via the same code path, without adding API surface area, as well\n        // as mimic traditional recursion but across asynchronous boundaries.\n        //\n        // However, JS runtimes and timers distinguish between intervals achieved by\n        // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n        // serial `setTimeout` calls can be individually delayed, which delays\n        // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n        // guarantee the interval callback will be invoked more precisely to the\n        // interval period, regardless of load.\n        //\n        // Therefore, we use `setInterval` to schedule single and repeat actions.\n        // If the action reschedules itself with the same delay, the interval is not\n        // canceled. If the action doesn't reschedule, or reschedules with a\n        // different delay, the interval will be canceled after scheduled callback\n        // execution.\n        //\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        // Set the pending flag indicating that this action has been scheduled, or\n        // has recursively rescheduled itself.\n        this.pending = true;\n        this.delay = delay;\n        // If this action has already an async Id, don't request a new one.\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        // If this action is rescheduled with the same delay time, don't clear the interval id.\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        // Otherwise, if the action's delay time is different from the current delay,\n        // or the action has been rescheduled before it's executed, clear the interval id\n        return clearInterval(id) && undefined || undefined;\n    }\n    /**\n     * Immediately executes this action and the `work` it contains.\n     * @return {any}\n     */\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            // Dequeue if the action didn't reschedule itself. Don't call\n            // unsubscribe(), because the action could reschedule later.\n            // For example:\n            // ```\n            // scheduler.schedule(function doWork(counter) {\n            //   /* ... I'm a busy worker bee ... */\n            //   var originalAction = this;\n            //   /* wait 100ms before rescheduling the action */\n            //   setTimeout(function () {\n            //     originalAction.schedule(counter + 1);\n            //   }, 100);\n            // }, 1000);\n            // ```\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n//# sourceMappingURL=AsyncAction.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asap} scheduler.\n *\n * @example <caption>Use async scheduler to delay task</caption>\n * const task = () => console.log('it works!');\n *\n * Rx.Scheduler.async.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n *\n *\n * @example <caption>Use async scheduler to repeat task in intervals</caption>\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * Rx.Scheduler.async.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\nexport const async = new AsyncScheduler(AsyncAction);\n//# sourceMappingURL=async.js.map","export const isArray = Array.isArray || ((x) => x && typeof x.length === 'number');\n//# sourceMappingURL=isArray.js.map","import { SubjectSubscriber } from '../Subject';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable extends Observable {\n    constructor(source, subjectFactory) {\n        super();\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        /** @internal */\n        this._isComplete = false;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    }\n    getSubject() {\n        const subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    }\n    connect() {\n        let connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    }\n    refCount() {\n        return higherOrderRefCount()(this);\n    }\n}\nconst connectableProto = ConnectableObservable.prototype;\nexport const connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nclass ConnectableSubscriber extends SubjectSubscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _error(err) {\n        this._unsubscribe();\n        super._error(err);\n    }\n    _complete() {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        super._complete();\n    }\n    _unsubscribe() {\n        const connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            const connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    }\n}\nclass RefCountOperator {\n    constructor(connectable) {\n        this.connectable = connectable;\n    }\n    call(subscriber, source) {\n        const { connectable } = this;\n        connectable._refCount++;\n        const refCounter = new RefCountSubscriber(subscriber, connectable);\n        const subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    }\n}\nclass RefCountSubscriber extends Subscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _unsubscribe() {\n        const { connectable } = this;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        const refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        const { connection } = this;\n        const sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    }\n}\n//# sourceMappingURL=ConnectableObservable.js.map","import { Observable } from '../Observable';\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * {@link Scheduler}. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable(subscriber => subscriber.complete());\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * <img src=\"./img/empty.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then complete.</caption>\n * var result = Rx.Observable.empty().startWith(7);\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n * var interval = Rx.Observable.interval(1000);\n * var result = interval.mergeMap(x =>\n *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n *\n * @see {@link create}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throw}\n *\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the complete notification.\n * @return {Observable} An \"empty\" Observable: emits only the complete\n * notification.\n * @static true\n * @name empty\n * @owner Observable\n * @deprecated Deprecated in favor of using EMPTY constant.\n */\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nexport function emptyScheduled(scheduler) {\n    return new Observable(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n//# sourceMappingURL=empty.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * @example <caption>A simple example emitting true if all elements are less than 5, false otherwise</caption>\n *  Observable.of(1, 2, 3, 4, 5, 6)\n *     .every(x => x < 5)\n *     .subscribe(x => console.log(x)); // -> false\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every(predicate, thisArg) {\n    return (source) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\nclass EveryOperator {\n    constructor(predicate, thisArg, source) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n    }\n    call(observer, source) {\n        return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber extends Subscriber {\n    constructor(destination, predicate, thisArg, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.source = source;\n        this.index = 0;\n        this.thisArg = thisArg || this;\n    }\n    notifyComplete(everyValueMatch) {\n        this.destination.next(everyValueMatch);\n        this.destination.complete();\n    }\n    _next(value) {\n        let result = false;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (!result) {\n            this.notifyComplete(false);\n        }\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n//# sourceMappingURL=every.js.map","import { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * <img src=\"./img/concat.png\" width=\"100%\">\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * @example <caption>Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10</caption>\n * var timer = Rx.Observable.interval(1000).take(4);\n * var sequence = Rx.Observable.range(1, 10);\n * var result = Rx.Observable.concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n *\n *\n * @example <caption>Concatenate an array of 3 Observables</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var result = Rx.Observable.concat([timer1, timer2, timer3]); // note that array is passed\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n *\n *\n * @example <caption>Concatenate the same Observable to repeat it</caption>\n * const timer = Rx.Observable.interval(1000).take(2);\n *\n * Rx.Observable.concat(timer, timer) // concating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {Scheduler} [scheduler=null] An optional IScheduler to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat(...observables) {\n    if (observables.length === 1 || (observables.length === 2 && isScheduler(observables[1]))) {\n        return from(observables[0]);\n    }\n    return concatAll()(of(...observables));\n}\n//# sourceMappingURL=concat.js.map","import { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from '../internal/symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    constructor(subscribe) {\n        /** Internal implementation detail, do not use directly. */\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    lift(operator) {\n        const observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    }\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    subscribe(observerOrNext, error, complete) {\n        const { operator } = this;\n        const sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source || !sink.syncErrorThrowable ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _trySubscribe(sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            sink.error(err);\n        }\n    }\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    forEach(next, promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            let subscription;\n            subscription = this.subscribe((value) => {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        const { source } = this;\n        return source && source.subscribe(subscriber);\n    }\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    [Symbol_observable]() {\n        return this;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    pipe(...operations) {\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    }\n    /* tslint:enable:max-line-length */\n    toPromise(promiseCtor) {\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor((resolve, reject) => {\n            let value;\n            this.subscribe((x) => value = x, (err) => reject(err), () => resolve(value));\n        });\n    }\n}\n// HACK: Since TypeScript inherits static properties too, we have to\n// fight against TypeScript here so Subject can have a different static create signature\n/**\n * Creates a new cold Observable by calling the Observable constructor\n * @static true\n * @owner Observable\n * @method create\n * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n * @return {Observable} a new cold observable\n * @nocollapse\n */\nObservable.create = (subscribe) => {\n    return new Observable(subscribe);\n};\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map","export const isArrayLike = ((x) => x && typeof x.length === 'number' && typeof x !== 'function');\n//# sourceMappingURL=isArrayLike.js.map","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, () => {\n            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n                return AsyncScheduler.delegate.now();\n            }\n            else {\n                return now();\n            }\n        });\n        this.actions = [];\n        /**\n         * A flag to indicate whether the Scheduler is currently executing a batch of\n         * queued actions.\n         * @type {boolean}\n         */\n        this.active = false;\n        /**\n         * An internal ID used to track the latest asynchronous task such as those\n         * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n         * others.\n         * @type {any}\n         */\n        this.scheduled = undefined;\n    }\n    schedule(work, delay = 0, state) {\n        if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n            return AsyncScheduler.delegate.schedule(work, delay, state);\n        }\n        else {\n            return super.schedule(work, delay, state);\n        }\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this.active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this.active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (action = actions.shift()); // exhaust the scheduler queue\n        this.active = false;\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AsyncScheduler.js.map","import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * <img src=\"./img/take.png\" width=\"100%\">\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * @example <caption>Take the first 5 seconds of an infinite 1-second interval Observable</caption>\n * var interval = Rx.Observable.interval(1000);\n * var five = interval.take(5);\n * five.subscribe(x => console.log(x));\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take(count) {\n    return (source) => {\n        if (count === 0) {\n            return empty();\n        }\n        else {\n            return source.lift(new TakeOperator(count));\n        }\n    };\n}\nclass TakeOperator {\n    constructor(total) {\n        this.total = total;\n        if (this.total < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeSubscriber(subscriber, this.total));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(value) {\n        const total = this.total;\n        const count = ++this.count;\n        if (count <= total) {\n            this.destination.next(value);\n            if (count === total) {\n                this.destination.complete();\n                this.unsubscribe();\n            }\n        }\n    }\n}\n//# sourceMappingURL=take.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * <img src=\"./img/catch.png\" width=\"100%\">\n *\n * @example <caption>Continues with a different Observable when there's an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n == 4) {\n * \t     throw 'four!';\n *     }\n *\t   return n;\n *   })\n *   .catch(err => Observable.of('I', 'II', 'III', 'IV', 'V'))\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n *\n * @example <caption>Retries the caught source Observable again in case of error, similar to retry() operator</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n * \t   if (n === 4) {\n * \t     throw 'four!';\n *     }\n * \t   return n;\n *   })\n *   .catch((err, caught) => caught)\n *   .take(30)\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n *\n * @example <caption>Throws a new error when the source Observable throws an error</caption>\n *\n * Observable.of(1, 2, 3, 4, 5)\n *   .map(n => {\n *     if (n == 4) {\n *       throw 'four!';\n *     }\n *     return n;\n *   })\n *   .catch(err => {\n *     throw 'error in source. Details: ' + err;\n *   })\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n *\n * @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError(selector) {\n    return function catchErrorOperatorFunction(source) {\n        const operator = new CatchOperator(selector);\n        const caught = source.lift(operator);\n        return (operator.caught = caught);\n    };\n}\nclass CatchOperator {\n    constructor(selector) {\n        this.selector = selector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber extends OuterSubscriber {\n    constructor(destination, selector, caught) {\n        super(destination);\n        this.selector = selector;\n        this.caught = caught;\n    }\n    // NOTE: overriding `error` instead of `_error` because we don't want\n    // to have this flag this subscriber as `isStopped`. We can mimic the\n    // behavior of the RetrySubscriber (from the `retry` operator), where\n    // we unsubscribe from our source chain, reset our Subscriber flags,\n    // then subscribe to the selector result.\n    error(err) {\n        if (!this.isStopped) {\n            let result;\n            try {\n                result = this.selector(err, this.caught);\n            }\n            catch (err2) {\n                super.error(err2);\n                return;\n            }\n            this._unsubscribeAndRecycle();\n            this.add(subscribeToResult(this, result));\n        }\n    }\n}\n//# sourceMappingURL=catchError.js.map","import { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * <img src=\"./img/scan.png\" width=\"100%\">\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * @example <caption>Count the number of click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var ones = clicks.mapTo(1);\n * var seed = 0;\n * var count = ones.scan((acc, one) => acc + one, seed);\n * count.subscribe(x => console.log(x));\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan(accumulator, seed) {\n    let hasSeed = false;\n    // providing a seed of `undefined` *should* be valid and trigger\n    // hasSeed! so don't use `seed !== undefined` checks!\n    // For this reason, we have to check it here at the original call site\n    // otherwise inside Operator/Subscriber we won't know if `undefined`\n    // means they didn't provide anything or if they literally provided `undefined`\n    if (arguments.length >= 2) {\n        hasSeed = true;\n    }\n    return function scanOperatorFunction(source) {\n        return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n    };\n}\nclass ScanOperator {\n    constructor(accumulator, seed, hasSeed = false) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.hasSeed = hasSeed;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber extends Subscriber {\n    constructor(destination, accumulator, _seed, hasSeed) {\n        super(destination);\n        this.accumulator = accumulator;\n        this._seed = _seed;\n        this.hasSeed = hasSeed;\n        this.index = 0;\n    }\n    get seed() {\n        return this._seed;\n    }\n    set seed(value) {\n        this.hasSeed = true;\n        this._seed = value;\n    }\n    _next(value) {\n        if (!this.hasSeed) {\n            this.seed = value;\n            this.destination.next(value);\n        }\n        else {\n            return this._tryNext(value);\n        }\n    }\n    _tryNext(value) {\n        const index = this.index++;\n        let result;\n        try {\n            result = this.accumulator(this.seed, value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n        this.seed = result;\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=scan.js.map","/* tslint:disable:no-empty */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map","import { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { empty } from './empty';\nimport { scalar } from './scalar';\nexport function of(...args) {\n    let scheduler = args[args.length - 1];\n    if (isScheduler(scheduler)) {\n        args.pop();\n    }\n    else {\n        scheduler = undefined;\n    }\n    switch (args.length) {\n        case 0:\n            return empty(scheduler);\n        case 1:\n            return scheduler ? fromArray(args, scheduler) : scalar(args[0]);\n        default:\n            return fromArray(args, scheduler);\n    }\n}\n//# sourceMappingURL=of.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport const iterator = getSymbolIterator();\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n//# sourceMappingURL=iterator.js.map","import { Subject } from './Subject';\nimport { Subscription } from './Subscription';\n/**\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this.value = null;\n        this.hasNext = false;\n        this.hasCompleted = false;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.hasCompleted && this.hasNext) {\n            subscriber.next(this.value);\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        return super._subscribe(subscriber);\n    }\n    next(value) {\n        if (!this.hasCompleted) {\n            this.value = value;\n            this.hasNext = true;\n        }\n    }\n    error(error) {\n        if (!this.hasCompleted) {\n            super.error(error);\n        }\n    }\n    complete() {\n        this.hasCompleted = true;\n        if (this.hasNext) {\n            super.next(this.value);\n        }\n        super.complete();\n    }\n}\n//# sourceMappingURL=AsyncSubject.js.map","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err) {\n    setTimeout(() => { throw err; });\n}\n//# sourceMappingURL=hostReportError.js.map","import { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * <img src=\"./img/last.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last(predicate, defaultValue) {\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(predicate ? filter((v, i) => predicate(v, i, source)) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(() => new EmptyError()));\n}\n//# sourceMappingURL=last.js.map","import { Observable } from '../Observable';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * <img src=\"./img/defer.png\" width=\"100%\">\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * @example <caption>Subscribe to either an Observable of clicks or an Observable of interval, at random</caption>\n * var clicksOrInterval = Rx.Observable.defer(function () {\n *   if (Math.random() > 0.5) {\n *     return Rx.Observable.fromEvent(document, 'click');\n *   } else {\n *     return Rx.Observable.interval(1000);\n *   }\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n *\n * @see {@link create}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer(observableFactory) {\n    return new Observable(subscriber => {\n        let input;\n        try {\n            input = observableFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = input ? from(input) : empty();\n        return source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map","import { Subject } from '../Subject';\nimport { multicast } from './multicast';\n/* tslint:enable:max-line-length */\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <img src=\"./img/publish.png\" width=\"100%\">\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n */\nexport function publish(selector) {\n    return selector ?\n        multicast(() => new Subject(), selector) :\n        multicast(new Subject());\n}\n//# sourceMappingURL=publish.js.map","import { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function race(...observables) {\n    // if the only argument is an array, it was most likely called with\n    // `race([obs1, obs2, ...])`\n    if (observables.length === 1) {\n        if (isArray(observables[0])) {\n            observables = observables[0];\n        }\n        else {\n            return observables[0];\n        }\n    }\n    return fromArray(observables, undefined).lift(new RaceOperator());\n}\nexport class RaceOperator {\n    call(subscriber, source) {\n        return source.subscribe(new RaceSubscriber(subscriber));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasFirst = false;\n        this.observables = [];\n        this.subscriptions = [];\n    }\n    _next(observable) {\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            for (let i = 0; i < len && !this.hasFirst; i++) {\n                let observable = observables[i];\n                let subscription = subscribeToResult(this, observable, observable, i);\n                if (this.subscriptions) {\n                    this.subscriptions.push(subscription);\n                }\n                this.add(subscription);\n            }\n            this.observables = null;\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (!this.hasFirst) {\n            this.hasFirst = true;\n            for (let i = 0; i < this.subscriptions.length; i++) {\n                if (i !== outerIndex) {\n                    let subscription = this.subscriptions[i];\n                    subscription.unsubscribe();\n                    this.remove(subscription);\n                }\n            }\n            this.subscriptions = null;\n        }\n        this.destination.next(innerValue);\n    }\n}\n//# sourceMappingURL=race.js.map","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\n/* tslint:enable:max-line-length */\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * <img src=\"./img/groupBy.png\" width=\"100%\">\n *\n * @example <caption>Group objects by id and return as array</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs3'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *     )\n *     .groupBy(p => p.id)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], []))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'aze1' },\n * //   { id: 1, name: 'erg1' },\n * //   { id: 1, name: 'df1' } ]\n * //\n * // [ { id: 2, name: 'sf2' },\n * //   { id: 2, name: 'dg2' },\n * //   { id: 2, name: 'sfqfb2' },\n * //   { id: 2, name: 'qsgqsfg2' } ]\n * //\n * // [ { id: 3, name: 'qfs3' } ]\n *\n * @example <caption>Pivot data on the id field</caption>\n * Observable.of<Obj>({id: 1, name: 'aze1'},\n *                    {id: 2, name: 'sf2'},\n *                    {id: 2, name: 'dg2'},\n *                    {id: 1, name: 'erg1'},\n *                    {id: 1, name: 'df1'},\n *                    {id: 2, name: 'sfqfb2'},\n *                    {id: 3, name: 'qfs1'},\n *                    {id: 2, name: 'qsgqsfg2'}\n *                   )\n *     .groupBy(p => p.id, p => p.name)\n *     .flatMap( (group$) => group$.reduce((acc, cur) => [...acc, cur], [\"\" + group$.key]))\n *     .map(arr => ({'id': parseInt(arr[0]), 'values': arr.slice(1)}))\n *     .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'aze1', 'erg1', 'df1' ] }\n * // { id: 2, values: [ 'sf2', 'dg2', 'sfqfb2', 'qsgqsfg2' ] }\n * // { id: 3, values: [ 'qfs1' ] }\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return (source) => source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nclass GroupByOperator {\n    constructor(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber extends Subscriber {\n    constructor(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    _next(value) {\n        let key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    }\n    _group(value, key) {\n        let groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        let group = groups.get(key);\n        let element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            const groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                let duration;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    }\n    _error(err) {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    }\n    removeGroup(key) {\n        this.groups.delete(key);\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                super.unsubscribe();\n            }\n        }\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber extends Subscriber {\n    constructor(key, group, parent) {\n        super(group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    _next(value) {\n        this.complete();\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        const { parent, key } = this;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    }\n}\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable extends Observable {\n    /** @deprecated Do not construct this type. Internal use only */\n    constructor(key, groupSubject, refCountSubscription) {\n        super();\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        const subscription = new Subscription();\n        const { refCountSubscription, groupSubject } = this;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        parent.count++;\n    }\n    unsubscribe() {\n        const parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            super.unsubscribe();\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    }\n}\n//# sourceMappingURL=groupBy.js.map","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\n/**\n * Creates an Observable that starts emitting after an `initialDelay` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link interval}, but you can specify when\n * should the emissions start.</span>\n *\n * <img src=\"./img/timer.png\" width=\"100%\">\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `initialDelay`. The initial delay may be a {@link Date}. By default, this\n * operator uses the `async` IScheduler to provide a notion of time, but you\n * may pass any IScheduler to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms), starting after 3 seconds</caption>\n * var numbers = Rx.Observable.timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @example <caption>Emits one number after five seconds</caption>\n * var numbers = Rx.Observable.timer(5000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time to wait before\n * emitting the first value of `0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `initialDelay` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime = 0, periodOrScheduler, scheduler) {\n    let period = -1;\n    if (isNumeric(periodOrScheduler)) {\n        period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n    }\n    else if (isScheduler(periodOrScheduler)) {\n        scheduler = periodOrScheduler;\n    }\n    if (!isScheduler(scheduler)) {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        const due = isNumeric(dueTime)\n            ? dueTime\n            : (+dueTime - scheduler.now());\n        return scheduler.schedule(dispatch, due, {\n            index: 0, period, subscriber\n        });\n    });\n}\nfunction dispatch(state) {\n    const { index, period, subscriber } = state;\n    subscriber.next(index);\n    if (subscriber.closed) {\n        return;\n    }\n    else if (period === -1) {\n        return subscriber.complete();\n    }\n    state.index = index + 1;\n    this.schedule(state, period);\n}\n//# sourceMappingURL=timer.js.map","/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, EventEmitter, Injectable, Inject, Optional, LOCALE_ID, Directive, ElementRef, Input, IterableDiffers, KeyValueDiffers, Renderer2, ɵisListLikeIterable, ɵstringify, ComponentFactoryResolver, NgModuleRef, ViewContainerRef, TemplateRef, isDevMode, Host, Attribute, Pipe, ChangeDetectorRef, WrappedValue, ɵisObservable, ɵisPromise, NgModule, Version, defineInjectable, inject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n *\n * `PlatformLocation` encapsulates all calls to DOM apis, which allows the Router to be platform\n * agnostic.\n * This means that we can have different implementation of `PlatformLocation` for the different\n * platforms that angular supports. For example, `\\@angular/platform-browser` provides an\n * implementation specific to the browser environment, while `\\@angular/platform-webworker` provides\n * one suitable for use with web workers.\n *\n * The `PlatformLocation` class is used directly by all implementations of {\\@link LocationStrategy}\n * when they need to interact with the DOM apis like pushState, popState, etc...\n *\n * {\\@link LocationStrategy} in turn is used by the {\\@link Location} service which is used directly\n * by the {\\@link Router} in order to navigate between routes. Since all interactions between {\\@link\n * Router} /\n * {\\@link Location} / {\\@link LocationStrategy} and DOM apis flow through the `PlatformLocation`\n * class they are all platform independent.\n *\n *\n * @abstract\n */\nclass PlatformLocation {\n}\n/** *\n * \\@description Indicates when a location is initialized.\n * \\@experimental\n  @type {?} */\nconst LOCATION_INITIALIZED = new InjectionToken('Location Initialized');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * `LocationStrategy` is responsible for representing and reading route state\n * from the browser's URL. Angular provides two strategies:\n * {\\@link HashLocationStrategy} and {\\@link PathLocationStrategy}.\n *\n * This is used under the hood of the {\\@link Location} service.\n *\n * Applications should use the {\\@link Router} or {\\@link Location} services to\n * interact with application route state.\n *\n * For instance, {\\@link HashLocationStrategy} produces URLs like\n * `http://example.com#/foo`, and {\\@link PathLocationStrategy} produces\n * `http://example.com/foo` as an equivalent URL.\n *\n * See these two classes for more.\n *\n *\n * @abstract\n */\nclass LocationStrategy {\n}\n/** *\n * The `APP_BASE_HREF` token represents the base href to be used with the\n * {\\@link PathLocationStrategy}.\n *\n * If you're using {\\@link PathLocationStrategy}, you must provide a provider to a string\n * representing the URL prefix that should be preserved when generating and recognizing\n * URLs.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * ```typescript\n * import {Component, NgModule} from '\\@angular/core';\n * import {APP_BASE_HREF} from '\\@angular/common';\n *\n * \\@NgModule({\n *   providers: [{provide: APP_BASE_HREF, useValue: '/my/app'}]\n * })\n * class AppModule {}\n * ```\n *\n *\n  @type {?} */\nconst APP_BASE_HREF = new InjectionToken('appBaseHref');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * A service that applications can use to interact with a browser's URL.\n *\n * Depending on which {\\@link LocationStrategy} is used, `Location` will either persist\n * to the URL's path or the URL's hash segment.\n *\n * \\@usageNotes\n *\n * It's better to use {\\@link Router#navigate} service to trigger route changes. Use\n * `Location` only if you need to interact with or create normalized URLs outside of\n * routing.\n *\n * `Location` is responsible for normalizing the URL against the application's base href.\n * A normalized URL is absolute from the URL host, includes the application's base href, and has no\n * trailing slash:\n * - `/my/app/user/123` is normalized\n * - `my/app/user/123` **is not** normalized\n * - `/my/app/user/123/` **is not** normalized\n *\n * ### Example\n *\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n */\nclass Location {\n    /**\n     * @param {?} platformStrategy\n     */\n    constructor(platformStrategy) {\n        /**\n         * \\@internal\n         */\n        this._subject = new EventEmitter();\n        this._platformStrategy = platformStrategy;\n        /** @type {?} */\n        const browserBaseHref = this._platformStrategy.getBaseHref();\n        this._baseHref = Location.stripTrailingSlash(_stripIndexHtml(browserBaseHref));\n        this._platformStrategy.onPopState((ev) => {\n            this._subject.emit({\n                'url': this.path(true),\n                'pop': true,\n                'state': ev.state,\n                'type': ev.type,\n            });\n        });\n    }\n    /**\n     * Returns the normalized URL path.\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    path(includeHash = false) {\n        return this.normalize(this._platformStrategy.path(includeHash));\n    }\n    /**\n     * Normalizes the given path and compares to the current normalized path.\n     * @param {?} path\n     * @param {?=} query\n     * @return {?}\n     */\n    isCurrentPathEqualTo(path, query = '') {\n        return this.path() == this.normalize(path + Location.normalizeQueryParams(query));\n    }\n    /**\n     * Given a string representing a URL, returns the normalized URL path without leading or\n     * trailing slashes.\n     * @param {?} url\n     * @return {?}\n     */\n    normalize(url) {\n        return Location.stripTrailingSlash(_stripBaseHref(this._baseHref, _stripIndexHtml(url)));\n    }\n    /**\n     * Given a string representing a URL, returns the platform-specific external URL path.\n     * If the given URL doesn't begin with a leading slash (`'/'`), this method adds one\n     * before normalizing. This method will also add a hash if `HashLocationStrategy` is\n     * used, or the `APP_BASE_HREF` if the `PathLocationStrategy` is in use.\n     * @param {?} url\n     * @return {?}\n     */\n    prepareExternalUrl(url) {\n        if (url && url[0] !== '/') {\n            url = '/' + url;\n        }\n        return this._platformStrategy.prepareExternalUrl(url);\n    }\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and pushes a\n     * new item onto the platform's history.\n     * @param {?} path\n     * @param {?=} query\n     * @param {?=} state\n     * @return {?}\n     */\n    go(path, query = '', state = null) {\n        this._platformStrategy.pushState(state, '', path, query);\n    }\n    /**\n     * Changes the browsers URL to the normalized version of the given URL, and replaces\n     * the top item on the platform's history stack.\n     * @param {?} path\n     * @param {?=} query\n     * @param {?=} state\n     * @return {?}\n     */\n    replaceState(path, query = '', state = null) {\n        this._platformStrategy.replaceState(state, '', path, query);\n    }\n    /**\n     * Navigates forward in the platform's history.\n     * @return {?}\n     */\n    forward() { this._platformStrategy.forward(); }\n    /**\n     * Navigates back in the platform's history.\n     * @return {?}\n     */\n    back() { this._platformStrategy.back(); }\n    /**\n     * Subscribe to the platform's `popState` events.\n     * @param {?} onNext\n     * @param {?=} onThrow\n     * @param {?=} onReturn\n     * @return {?}\n     */\n    subscribe(onNext, onThrow, onReturn) {\n        return this._subject.subscribe({ next: onNext, error: onThrow, complete: onReturn });\n    }\n    /**\n     * Given a string of url parameters, prepend with '?' if needed, otherwise return parameters as\n     * is.\n     * @param {?} params\n     * @return {?}\n     */\n    static normalizeQueryParams(params) {\n        return params && params[0] !== '?' ? '?' + params : params;\n    }\n    /**\n     * Given 2 parts of a url, join them with a slash if needed.\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    static joinWithSlash(start, end) {\n        if (start.length == 0) {\n            return end;\n        }\n        if (end.length == 0) {\n            return start;\n        }\n        /** @type {?} */\n        let slashes = 0;\n        if (start.endsWith('/')) {\n            slashes++;\n        }\n        if (end.startsWith('/')) {\n            slashes++;\n        }\n        if (slashes == 2) {\n            return start + end.substring(1);\n        }\n        if (slashes == 1) {\n            return start + end;\n        }\n        return start + '/' + end;\n    }\n    /**\n     * If url has a trailing slash, remove it, otherwise return url as is. This\n     * method looks for the first occurrence of either #, ?, or the end of the\n     * line as `/` characters after any of these should not be replaced.\n     * @param {?} url\n     * @return {?}\n     */\n    static stripTrailingSlash(url) {\n        /** @type {?} */\n        const match = url.match(/#|\\?|$/);\n        /** @type {?} */\n        const pathEndIdx = match && match.index || url.length;\n        /** @type {?} */\n        const droppedSlashIdx = pathEndIdx - (url[pathEndIdx - 1] === '/' ? 1 : 0);\n        return url.slice(0, droppedSlashIdx) + url.slice(pathEndIdx);\n    }\n}\nLocation.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nLocation.ctorParameters = () => [\n    { type: LocationStrategy }\n];\n/**\n * @param {?} baseHref\n * @param {?} url\n * @return {?}\n */\nfunction _stripBaseHref(baseHref, url) {\n    return baseHref && url.startsWith(baseHref) ? url.substring(baseHref.length) : url;\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction _stripIndexHtml(url) {\n    return url.replace(/\\/index.html$/, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * A {\\@link LocationStrategy} used to configure the {\\@link Location} service to\n * represent its state in the\n * [hash fragment](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax)\n * of the browser's URL.\n *\n * For instance, if you call `location.go('/foo')`, the browser's URL will become\n * `example.com#/foo`.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/location/ts/hash_location_component.ts region='LocationComponent'}\n *\n *\n */\nclass HashLocationStrategy extends LocationStrategy {\n    /**\n     * @param {?} _platformLocation\n     * @param {?=} _baseHref\n     */\n    constructor(_platformLocation, _baseHref) {\n        super();\n        this._platformLocation = _platformLocation;\n        this._baseHref = '';\n        if (_baseHref != null) {\n            this._baseHref = _baseHref;\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    onPopState(fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    }\n    /**\n     * @return {?}\n     */\n    getBaseHref() { return this._baseHref; }\n    /**\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    path(includeHash = false) {\n        /** @type {?} */\n        let path = this._platformLocation.hash;\n        if (path == null)\n            path = '#';\n        return path.length > 0 ? path.substring(1) : path;\n    }\n    /**\n     * @param {?} internal\n     * @return {?}\n     */\n    prepareExternalUrl(internal) {\n        /** @type {?} */\n        const url = Location.joinWithSlash(this._baseHref, internal);\n        return url.length > 0 ? ('#' + url) : url;\n    }\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} path\n     * @param {?} queryParams\n     * @return {?}\n     */\n    pushState(state, title, path, queryParams) {\n        /** @type {?} */\n        let url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.pushState(state, title, url);\n    }\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} path\n     * @param {?} queryParams\n     * @return {?}\n     */\n    replaceState(state, title, path, queryParams) {\n        /** @type {?} */\n        let url = this.prepareExternalUrl(path + Location.normalizeQueryParams(queryParams));\n        if (url.length == 0) {\n            url = this._platformLocation.pathname;\n        }\n        this._platformLocation.replaceState(state, title, url);\n    }\n    /**\n     * @return {?}\n     */\n    forward() { this._platformLocation.forward(); }\n    /**\n     * @return {?}\n     */\n    back() { this._platformLocation.back(); }\n}\nHashLocationStrategy.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHashLocationStrategy.ctorParameters = () => [\n    { type: PlatformLocation },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * A {\\@link LocationStrategy} used to configure the {\\@link Location} service to\n * represent its state in the\n * [path](https://en.wikipedia.org/wiki/Uniform_Resource_Locator#Syntax) of the\n * browser's URL.\n *\n * If you're using `PathLocationStrategy`, you must provide a {\\@link APP_BASE_HREF}\n * or add a base element to the document. This URL prefix that will be preserved\n * when generating and recognizing URLs.\n *\n * For instance, if you provide an `APP_BASE_HREF` of `'/my/app'` and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * Similarly, if you add `<base href='/my/app'/>` to the document and call\n * `location.go('/foo')`, the browser's URL will become\n * `example.com/my/app/foo`.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/location/ts/path_location_component.ts region='LocationComponent'}\n *\n *\n */\nclass PathLocationStrategy extends LocationStrategy {\n    /**\n     * @param {?} _platformLocation\n     * @param {?=} href\n     */\n    constructor(_platformLocation, href) {\n        super();\n        this._platformLocation = _platformLocation;\n        if (href == null) {\n            href = this._platformLocation.getBaseHrefFromDOM();\n        }\n        if (href == null) {\n            throw new Error(`No base href set. Please provide a value for the APP_BASE_HREF token or add a base element to the document.`);\n        }\n        this._baseHref = href;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    onPopState(fn) {\n        this._platformLocation.onPopState(fn);\n        this._platformLocation.onHashChange(fn);\n    }\n    /**\n     * @return {?}\n     */\n    getBaseHref() { return this._baseHref; }\n    /**\n     * @param {?} internal\n     * @return {?}\n     */\n    prepareExternalUrl(internal) {\n        return Location.joinWithSlash(this._baseHref, internal);\n    }\n    /**\n     * @param {?=} includeHash\n     * @return {?}\n     */\n    path(includeHash = false) {\n        /** @type {?} */\n        const pathname = this._platformLocation.pathname +\n            Location.normalizeQueryParams(this._platformLocation.search);\n        /** @type {?} */\n        const hash = this._platformLocation.hash;\n        return hash && includeHash ? `${pathname}${hash}` : pathname;\n    }\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    pushState(state, title, url, queryParams) {\n        /** @type {?} */\n        const externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.pushState(state, title, externalUrl);\n    }\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @param {?} queryParams\n     * @return {?}\n     */\n    replaceState(state, title, url, queryParams) {\n        /** @type {?} */\n        const externalUrl = this.prepareExternalUrl(url + Location.normalizeQueryParams(queryParams));\n        this._platformLocation.replaceState(state, title, externalUrl);\n    }\n    /**\n     * @return {?}\n     */\n    forward() { this._platformLocation.forward(); }\n    /**\n     * @return {?}\n     */\n    back() { this._platformLocation.back(); }\n}\nPathLocationStrategy.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nPathLocationStrategy.ctorParameters = () => [\n    { type: PlatformLocation },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [APP_BASE_HREF,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// THIS CODE IS GENERATED - DO NOT MODIFY\n// See angular/tools/gulp-tasks/cldr/extract.js\n/** @type {?} */\nconst u = undefined;\n/**\n * @param {?} n\n * @return {?}\n */\nfunction plural(n) {\n    /** @type {?} */\n    let i = Math.floor(Math.abs(n));\n    /** @type {?} */\n    let v = n.toString().replace(/^[^.]*\\.?/, '').length;\n    if (i === 1 && v === 0)\n        return 1;\n    return 5;\n}\nvar localeEn = [\n    'en', [['a', 'p'], ['AM', 'PM'], u], [['AM', 'PM'], u, u],\n    [\n        ['S', 'M', 'T', 'W', 'T', 'F', 'S'], ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa']\n    ],\n    u,\n    [\n        ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n        ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ]\n    ],\n    u, [['B', 'A'], ['BC', 'AD'], ['Before Christ', 'Anno Domini']], 0, [6, 0],\n    ['M/d/yy', 'MMM d, y', 'MMMM d, y', 'EEEE, MMMM d, y'],\n    ['h:mm a', 'h:mm:ss a', 'h:mm:ss a z', 'h:mm:ss a zzzz'], ['{1}, {0}', u, '{1} \\'at\\' {0}', u],\n    ['.', ',', ';', '%', '+', '-', 'E', '×', '‰', '∞', 'NaN', ':'],\n    ['#,##0.###', '#,##0%', '¤#,##0.00', '#E0'], '$', 'US Dollar', {}, plural\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * \\@experimental i18n support is experimental.\n  @type {?} */\nconst LOCALE_DATA = {};\n/**\n * Register global data to be used internally by Angular. See the\n * [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale data.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} data\n * @param {?=} localeId\n * @param {?=} extraData\n * @return {?}\n */\nfunction registerLocaleData(data, localeId, extraData) {\n    if (typeof localeId !== 'string') {\n        extraData = localeId;\n        localeId = data[0 /* LocaleId */];\n    }\n    localeId = localeId.toLowerCase().replace(/_/g, '-');\n    LOCALE_DATA[localeId] = data;\n    if (extraData) {\n        LOCALE_DATA[localeId][19 /* ExtraData */] = extraData;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * \\@internal\n  @type {?} */\nconst CURRENCIES_EN = {\n    'ADP': [undefined, undefined, 0],\n    'AFN': [undefined, undefined, 0],\n    'ALL': [undefined, undefined, 0],\n    'AMD': [undefined, undefined, 0],\n    'AOA': [undefined, 'Kz'],\n    'ARS': [undefined, '$'],\n    'AUD': ['A$', '$'],\n    'BAM': [undefined, 'KM'],\n    'BBD': [undefined, '$'],\n    'BDT': [undefined, '৳'],\n    'BHD': [undefined, undefined, 3],\n    'BIF': [undefined, undefined, 0],\n    'BMD': [undefined, '$'],\n    'BND': [undefined, '$'],\n    'BOB': [undefined, 'Bs'],\n    'BRL': ['R$'],\n    'BSD': [undefined, '$'],\n    'BWP': [undefined, 'P'],\n    'BYN': [undefined, 'р.', 2],\n    'BYR': [undefined, undefined, 0],\n    'BZD': [undefined, '$'],\n    'CAD': ['CA$', '$', 2],\n    'CHF': [undefined, undefined, 2],\n    'CLF': [undefined, undefined, 4],\n    'CLP': [undefined, '$', 0],\n    'CNY': ['CN¥', '¥'],\n    'COP': [undefined, '$', 0],\n    'CRC': [undefined, '₡', 2],\n    'CUC': [undefined, '$'],\n    'CUP': [undefined, '$'],\n    'CZK': [undefined, 'Kč', 2],\n    'DJF': [undefined, undefined, 0],\n    'DKK': [undefined, 'kr', 2],\n    'DOP': [undefined, '$'],\n    'EGP': [undefined, 'E£'],\n    'ESP': [undefined, '₧', 0],\n    'EUR': ['€'],\n    'FJD': [undefined, '$'],\n    'FKP': [undefined, '£'],\n    'GBP': ['£'],\n    'GEL': [undefined, '₾'],\n    'GIP': [undefined, '£'],\n    'GNF': [undefined, 'FG', 0],\n    'GTQ': [undefined, 'Q'],\n    'GYD': [undefined, '$', 0],\n    'HKD': ['HK$', '$'],\n    'HNL': [undefined, 'L'],\n    'HRK': [undefined, 'kn'],\n    'HUF': [undefined, 'Ft', 2],\n    'IDR': [undefined, 'Rp', 0],\n    'ILS': ['₪'],\n    'INR': ['₹'],\n    'IQD': [undefined, undefined, 0],\n    'IRR': [undefined, undefined, 0],\n    'ISK': [undefined, 'kr', 0],\n    'ITL': [undefined, undefined, 0],\n    'JMD': [undefined, '$'],\n    'JOD': [undefined, undefined, 3],\n    'JPY': ['¥', undefined, 0],\n    'KHR': [undefined, '៛'],\n    'KMF': [undefined, 'CF', 0],\n    'KPW': [undefined, '₩', 0],\n    'KRW': ['₩', undefined, 0],\n    'KWD': [undefined, undefined, 3],\n    'KYD': [undefined, '$'],\n    'KZT': [undefined, '₸'],\n    'LAK': [undefined, '₭', 0],\n    'LBP': [undefined, 'L£', 0],\n    'LKR': [undefined, 'Rs'],\n    'LRD': [undefined, '$'],\n    'LTL': [undefined, 'Lt'],\n    'LUF': [undefined, undefined, 0],\n    'LVL': [undefined, 'Ls'],\n    'LYD': [undefined, undefined, 3],\n    'MGA': [undefined, 'Ar', 0],\n    'MGF': [undefined, undefined, 0],\n    'MMK': [undefined, 'K', 0],\n    'MNT': [undefined, '₮', 0],\n    'MRO': [undefined, undefined, 0],\n    'MUR': [undefined, 'Rs', 0],\n    'MXN': ['MX$', '$'],\n    'MYR': [undefined, 'RM'],\n    'NAD': [undefined, '$'],\n    'NGN': [undefined, '₦'],\n    'NIO': [undefined, 'C$'],\n    'NOK': [undefined, 'kr', 2],\n    'NPR': [undefined, 'Rs'],\n    'NZD': ['NZ$', '$'],\n    'OMR': [undefined, undefined, 3],\n    'PHP': [undefined, '₱'],\n    'PKR': [undefined, 'Rs', 0],\n    'PLN': [undefined, 'zł'],\n    'PYG': [undefined, '₲', 0],\n    'RON': [undefined, 'lei'],\n    'RSD': [undefined, undefined, 0],\n    'RUB': [undefined, '₽'],\n    'RUR': [undefined, 'р.'],\n    'RWF': [undefined, 'RF', 0],\n    'SBD': [undefined, '$'],\n    'SEK': [undefined, 'kr', 2],\n    'SGD': [undefined, '$'],\n    'SHP': [undefined, '£'],\n    'SLL': [undefined, undefined, 0],\n    'SOS': [undefined, undefined, 0],\n    'SRD': [undefined, '$'],\n    'SSP': [undefined, '£'],\n    'STD': [undefined, undefined, 0],\n    'STN': [undefined, 'Db'],\n    'SYP': [undefined, '£', 0],\n    'THB': [undefined, '฿'],\n    'TMM': [undefined, undefined, 0],\n    'TND': [undefined, undefined, 3],\n    'TOP': [undefined, 'T$'],\n    'TRL': [undefined, undefined, 0],\n    'TRY': [undefined, '₺'],\n    'TTD': [undefined, '$'],\n    'TWD': ['NT$', '$', 2],\n    'TZS': [undefined, undefined, 0],\n    'UAH': [undefined, '₴'],\n    'UGX': [undefined, undefined, 0],\n    'USD': ['$'],\n    'UYI': [undefined, undefined, 0],\n    'UYU': [undefined, '$'],\n    'UZS': [undefined, undefined, 0],\n    'VEF': [undefined, 'Bs'],\n    'VND': ['₫', undefined, 0],\n    'VUV': [undefined, undefined, 0],\n    'XAF': ['FCFA', undefined, 0],\n    'XCD': ['EC$', '$'],\n    'XOF': ['CFA', undefined, 0],\n    'XPF': ['CFPF', undefined, 0],\n    'YER': [undefined, undefined, 0],\n    'ZAR': [undefined, 'R'],\n    'ZMK': [undefined, undefined, 0],\n    'ZMW': [undefined, 'ZK'],\n    'ZWD': [undefined, undefined, 0]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst NumberFormatStyle = {\n    Decimal: 0,\n    Percent: 1,\n    Currency: 2,\n    Scientific: 3,\n};\nNumberFormatStyle[NumberFormatStyle.Decimal] = 'Decimal';\nNumberFormatStyle[NumberFormatStyle.Percent] = 'Percent';\nNumberFormatStyle[NumberFormatStyle.Currency] = 'Currency';\nNumberFormatStyle[NumberFormatStyle.Scientific] = 'Scientific';\n/** @enum {number} */\nconst Plural = {\n    Zero: 0,\n    One: 1,\n    Two: 2,\n    Few: 3,\n    Many: 4,\n    Other: 5,\n};\nPlural[Plural.Zero] = 'Zero';\nPlural[Plural.One] = 'One';\nPlural[Plural.Two] = 'Two';\nPlural[Plural.Few] = 'Few';\nPlural[Plural.Many] = 'Many';\nPlural[Plural.Other] = 'Other';\n/** @enum {number} */\nconst FormStyle = {\n    Format: 0,\n    Standalone: 1,\n};\nFormStyle[FormStyle.Format] = 'Format';\nFormStyle[FormStyle.Standalone] = 'Standalone';\n/** @enum {number} */\nconst TranslationWidth = {\n    Narrow: 0,\n    Abbreviated: 1,\n    Wide: 2,\n    Short: 3,\n};\nTranslationWidth[TranslationWidth.Narrow] = 'Narrow';\nTranslationWidth[TranslationWidth.Abbreviated] = 'Abbreviated';\nTranslationWidth[TranslationWidth.Wide] = 'Wide';\nTranslationWidth[TranslationWidth.Short] = 'Short';\n/** @enum {number} */\nconst FormatWidth = {\n    Short: 0,\n    Medium: 1,\n    Long: 2,\n    Full: 3,\n};\nFormatWidth[FormatWidth.Short] = 'Short';\nFormatWidth[FormatWidth.Medium] = 'Medium';\nFormatWidth[FormatWidth.Long] = 'Long';\nFormatWidth[FormatWidth.Full] = 'Full';\n/** @enum {number} */\nconst NumberSymbol = {\n    Decimal: 0,\n    Group: 1,\n    List: 2,\n    PercentSign: 3,\n    PlusSign: 4,\n    MinusSign: 5,\n    Exponential: 6,\n    SuperscriptingExponent: 7,\n    PerMille: 8,\n    Infinity: 9,\n    NaN: 10,\n    TimeSeparator: 11,\n    CurrencyDecimal: 12,\n    CurrencyGroup: 13,\n};\nNumberSymbol[NumberSymbol.Decimal] = 'Decimal';\nNumberSymbol[NumberSymbol.Group] = 'Group';\nNumberSymbol[NumberSymbol.List] = 'List';\nNumberSymbol[NumberSymbol.PercentSign] = 'PercentSign';\nNumberSymbol[NumberSymbol.PlusSign] = 'PlusSign';\nNumberSymbol[NumberSymbol.MinusSign] = 'MinusSign';\nNumberSymbol[NumberSymbol.Exponential] = 'Exponential';\nNumberSymbol[NumberSymbol.SuperscriptingExponent] = 'SuperscriptingExponent';\nNumberSymbol[NumberSymbol.PerMille] = 'PerMille';\nNumberSymbol[NumberSymbol.Infinity] = 'Infinity';\nNumberSymbol[NumberSymbol.NaN] = 'NaN';\nNumberSymbol[NumberSymbol.TimeSeparator] = 'TimeSeparator';\nNumberSymbol[NumberSymbol.CurrencyDecimal] = 'CurrencyDecimal';\nNumberSymbol[NumberSymbol.CurrencyGroup] = 'CurrencyGroup';\n/** @enum {number} */\nconst WeekDay = {\n    Sunday: 0,\n    Monday: 1,\n    Tuesday: 2,\n    Wednesday: 3,\n    Thursday: 4,\n    Friday: 5,\n    Saturday: 6,\n};\nWeekDay[WeekDay.Sunday] = 'Sunday';\nWeekDay[WeekDay.Monday] = 'Monday';\nWeekDay[WeekDay.Tuesday] = 'Tuesday';\nWeekDay[WeekDay.Wednesday] = 'Wednesday';\nWeekDay[WeekDay.Thursday] = 'Thursday';\nWeekDay[WeekDay.Friday] = 'Friday';\nWeekDay[WeekDay.Saturday] = 'Saturday';\n/**\n * The locale id for the chosen locale (e.g `en-GB`).\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nfunction getLocaleId(locale) {\n    return findLocaleData(locale)[0 /* LocaleId */];\n}\n/**\n * Periods of the day (e.g. `[AM, PM]` for en-US).\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nfunction getLocaleDayPeriods(locale, formStyle, width) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    /** @type {?} */\n    const amPmData = /** @type {?} */ ([data[1 /* DayPeriodsFormat */], data[2 /* DayPeriodsStandalone */]]);\n    /** @type {?} */\n    const amPm = getLastDefinedValue(amPmData, formStyle);\n    return getLastDefinedValue(amPm, width);\n}\n/**\n * Days of the week for the Gregorian calendar (e.g. `[Sunday, Monday, ... Saturday]` for en-US).\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nfunction getLocaleDayNames(locale, formStyle, width) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    /** @type {?} */\n    const daysData = /** @type {?} */ ([data[3 /* DaysFormat */], data[4 /* DaysStandalone */]]);\n    /** @type {?} */\n    const days = getLastDefinedValue(daysData, formStyle);\n    return getLastDefinedValue(days, width);\n}\n/**\n * Months of the year for the Gregorian calendar (e.g. `[January, February, ...]` for en-US).\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nfunction getLocaleMonthNames(locale, formStyle, width) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    /** @type {?} */\n    const monthsData = /** @type {?} */ ([data[5 /* MonthsFormat */], data[6 /* MonthsStandalone */]]);\n    /** @type {?} */\n    const months = getLastDefinedValue(monthsData, formStyle);\n    return getLastDefinedValue(months, width);\n}\n/**\n * Eras for the Gregorian calendar (e.g. AD/BC).\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nfunction getLocaleEraNames(locale, width) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    /** @type {?} */\n    const erasData = /** @type {?} */ (data[7 /* Eras */]);\n    return getLastDefinedValue(erasData, width);\n}\n/**\n * First day of the week for this locale, based on english days (Sunday = 0, Monday = 1, ...).\n * For example in french the value would be 1 because the first day of the week is Monday.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nfunction getLocaleFirstDayOfWeek(locale) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    return data[8 /* FirstDayOfWeek */];\n}\n/**\n * Range of days in the week that represent the week-end for this locale, based on english days\n * (Sunday = 0, Monday = 1, ...).\n * For example in english the value would be [6,0] for Saturday to Sunday.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nfunction getLocaleWeekEndRange(locale) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    return data[9 /* WeekendRange */];\n}\n/**\n * Date format that depends on the locale.\n *\n * There are four basic date formats:\n * - `full` should contain long-weekday (EEEE), year (y), long-month (MMMM), day (d).\n *\n *  For example, English uses `EEEE, MMMM d, y`, corresponding to a date like\n *  \"Tuesday, September 14, 1999\".\n *\n * - `long` should contain year, long-month, day.\n *\n *  For example, `MMMM d, y`, corresponding to a date like \"September 14, 1999\".\n *\n * - `medium` should contain year, abbreviated-month (MMM), day.\n *\n *  For example, `MMM d, y`, corresponding to a date like \"Sep 14, 1999\".\n *  For languages that do not use abbreviated months, use the numeric month (MM/M). For example,\n *  `y/MM/dd`, corresponding to a date like \"1999/09/14\".\n *\n * - `short` should contain year, numeric-month (MM/M), and day.\n *\n *  For example, `M/d/yy`, corresponding to a date like \"9/14/99\".\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nfunction getLocaleDateFormat(locale, width) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    return getLastDefinedValue(data[10 /* DateFormat */], width);\n}\n/**\n * Time format that depends on the locale.\n *\n * The standard formats include four basic time formats:\n * - `full` should contain hour (h/H), minute (mm), second (ss), and zone (zzzz).\n * - `long` should contain hour, minute, second, and zone (z)\n * - `medium` should contain hour, minute, second.\n * - `short` should contain hour, minute.\n *\n * Note: The patterns depend on whether the main country using your language uses 12-hour time or\n * not:\n * - For 12-hour time, use a pattern like `hh:mm a` using h to mean a 12-hour clock cycle running\n * 1 through 12 (midnight plus 1 minute is 12:01), or using K to mean a 12-hour clock cycle\n * running 0 through 11 (midnight plus 1 minute is 0:01).\n * - For 24-hour time, use a pattern like `HH:mm` using H to mean a 24-hour clock cycle running 0\n * through 23 (midnight plus 1 minute is 0:01), or using k to mean a 24-hour clock cycle running\n * 1 through 24 (midnight plus 1 minute is 24:01).\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nfunction getLocaleTimeFormat(locale, width) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    return getLastDefinedValue(data[11 /* TimeFormat */], width);\n}\n/**\n * Date-time format that depends on the locale.\n *\n * The date-time pattern shows how to combine separate patterns for date (represented by {1})\n * and time (represented by {0}) into a single pattern. It usually doesn't need to be changed.\n * What you want to pay attention to are:\n * - possibly removing a space for languages that don't use it, such as many East Asian languages\n * - possibly adding a comma, other punctuation, or a combining word\n *\n * For example:\n * - English uses `{1} 'at' {0}` or `{1}, {0}` (depending on date style), while Japanese uses\n *  `{1}{0}`.\n * - An English formatted date-time using the combining pattern `{1}, {0}` could be\n *  `Dec 10, 2010, 3:59:49 PM`. Notice the comma and space between the date portion and the time\n *  portion.\n *\n * There are four formats (`full`, `long`, `medium`, `short`); the determination of which to use\n * is normally based on the date style. For example, if the date has a full month and weekday\n * name, the full combining pattern will be used to combine that with a time. If the date has\n * numeric month, the short version of the combining pattern will be used to combine that with a\n * time. English uses `{1} 'at' {0}` for full and long styles, and `{1}, {0}` for medium and short\n * styles.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} width\n * @return {?}\n */\nfunction getLocaleDateTimeFormat(locale, width) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    /** @type {?} */\n    const dateTimeFormatData = /** @type {?} */ (data[12 /* DateTimeFormat */]);\n    return getLastDefinedValue(dateTimeFormatData, width);\n}\n/**\n * Number symbol that can be used to replace placeholders in number formats.\n * See {\\@link NumberSymbol} for more information.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} symbol\n * @return {?}\n */\nfunction getLocaleNumberSymbol(locale, symbol) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    /** @type {?} */\n    const res = data[13 /* NumberSymbols */][symbol];\n    if (typeof res === 'undefined') {\n        if (symbol === NumberSymbol.CurrencyDecimal) {\n            return data[13 /* NumberSymbols */][NumberSymbol.Decimal];\n        }\n        else if (symbol === NumberSymbol.CurrencyGroup) {\n            return data[13 /* NumberSymbols */][NumberSymbol.Group];\n        }\n    }\n    return res;\n}\n/**\n * Number format that depends on the locale.\n *\n * Numbers are formatted using patterns, like `#,###.00`. For example, the pattern `#,###.00`\n * when used to format the number 12345.678 could result in \"12'345,67\". That would happen if the\n * grouping separator for your language is an apostrophe, and the decimal separator is a comma.\n *\n * <b>Important:</b> The characters `.` `,` `0` `#` (and others below) are special placeholders;\n * they stand for the decimal separator, and so on, and are NOT real characters.\n * You must NOT \"translate\" the placeholders; for example, don't change `.` to `,` even though in\n * your language the decimal point is written with a comma. The symbols should be replaced by the\n * local equivalents, using the Number Symbols for your language.\n *\n * Here are the special characters used in number patterns:\n *\n * | Symbol | Meaning |\n * |--------|---------|\n * | . | Replaced automatically by the character used for the decimal point. |\n * | , | Replaced by the \"grouping\" (thousands) separator. |\n * | 0 | Replaced by a digit (or zero if there aren't enough digits). |\n * | # | Replaced by a digit (or nothing if there aren't enough). |\n * | ¤ | This will be replaced by a currency symbol, such as $ or USD. |\n * | % | This marks a percent format. The % symbol may change position, but must be retained. |\n * | E | This marks a scientific format. The E symbol may change position, but must be retained. |\n * | ' | Special characters used as literal characters are quoted with ASCII single quotes. |\n *\n * You can find more information\n * [on the CLDR website](http://cldr.unicode.org/translation/number-patterns)\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} type\n * @return {?}\n */\nfunction getLocaleNumberFormat(locale, type) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    return data[14 /* NumberFormats */][type];\n}\n/**\n * The symbol used to represent the currency for the main country using this locale (e.g. $ for\n * the locale en-US).\n * The symbol will be `null` if the main country cannot be determined.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nfunction getLocaleCurrencySymbol(locale) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    return data[15 /* CurrencySymbol */] || null;\n}\n/**\n * The name of the currency for the main country using this locale (e.g. USD for the locale\n * en-US).\n * The name will be `null` if the main country cannot be determined.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nfunction getLocaleCurrencyName(locale) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    return data[16 /* CurrencyName */] || null;\n}\n/**\n * Returns the currency values for the locale\n * @param {?} locale\n * @return {?}\n */\nfunction getLocaleCurrencies(locale) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    return data[17 /* Currencies */];\n}\n/**\n * The locale plural function used by ICU expressions to determine the plural case to use.\n * See {\\@link NgPlural} for more information.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nfunction getLocalePluralCase(locale) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    return data[18 /* PluralCase */];\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction checkFullData(data) {\n    if (!data[19 /* ExtraData */]) {\n        throw new Error(`Missing extra locale data for the locale \"${data[0 /* LocaleId */]}\". Use \"registerLocaleData\" to load new data. See the \"I18n guide\" on angular.io to know more.`);\n    }\n}\n/**\n * Rules used to determine which day period to use (See `dayPeriods` below).\n * The rules can either be an array or a single value. If it's an array, consider it as \"from\"\n * and \"to\". If it's a single value then it means that the period is only valid at this exact\n * value.\n * There is always the same number of rules as the number of day periods, which means that the\n * first rule is applied to the first day period and so on.\n * You should fallback to AM/PM when there are no rules available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nfunction getLocaleExtraDayPeriodRules(locale) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    checkFullData(data);\n    /** @type {?} */\n    const rules = data[19 /* ExtraData */][2 /* ExtraDayPeriodsRules */] || [];\n    return rules.map((rule) => {\n        if (typeof rule === 'string') {\n            return extractTime(rule);\n        }\n        return [extractTime(rule[0]), extractTime(rule[1])];\n    });\n}\n/**\n * Day Periods indicate roughly how the day is broken up in different languages (e.g. morning,\n * noon, afternoon, midnight, ...).\n * You should use the function {\\@link getLocaleExtraDayPeriodRules} to determine which period to\n * use.\n * You should fallback to AM/PM when there are no day periods available.\n *\n * Note: this is only available if you load the full locale data.\n * See the [\"I18n guide\"](guide/i18n#i18n-pipes) to know how to import additional locale\n * data.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @param {?} formStyle\n * @param {?} width\n * @return {?}\n */\nfunction getLocaleExtraDayPeriods(locale, formStyle, width) {\n    /** @type {?} */\n    const data = findLocaleData(locale);\n    checkFullData(data);\n    /** @type {?} */\n    const dayPeriodsData = /** @type {?} */ ([\n        data[19 /* ExtraData */][0 /* ExtraDayPeriodFormats */],\n        data[19 /* ExtraData */][1 /* ExtraDayPeriodStandalone */]\n    ]);\n    /** @type {?} */\n    const dayPeriods = getLastDefinedValue(dayPeriodsData, formStyle) || [];\n    return getLastDefinedValue(dayPeriods, width) || [];\n}\n/**\n * Returns the first value that is defined in an array, going backwards.\n *\n * To avoid repeating the same data (e.g. when \"format\" and \"standalone\" are the same) we only\n * add the first one to the locale data arrays, the other ones are only defined when different.\n * We use this function to retrieve the first defined value.\n *\n * \\@experimental i18n support is experimental.\n * @template T\n * @param {?} data\n * @param {?} index\n * @return {?}\n */\nfunction getLastDefinedValue(data, index) {\n    for (let i = index; i > -1; i--) {\n        if (typeof data[i] !== 'undefined') {\n            return data[i];\n        }\n    }\n    throw new Error('Locale data API: locale data undefined');\n}\n/**\n * Extract the hours and minutes from a string like \"15:45\"\n * @param {?} time\n * @return {?}\n */\nfunction extractTime(time) {\n    const [h, m] = time.split(':');\n    return { hours: +h, minutes: +m };\n}\n/**\n * Finds the locale data for a locale id\n *\n * \\@experimental i18n support is experimental.\n * @param {?} locale\n * @return {?}\n */\nfunction findLocaleData(locale) {\n    /** @type {?} */\n    const normalizedLocale = locale.toLowerCase().replace(/_/g, '-');\n    /** @type {?} */\n    let match = LOCALE_DATA[normalizedLocale];\n    if (match) {\n        return match;\n    }\n    /** @type {?} */\n    const parentLocale = normalizedLocale.split('-')[0];\n    match = LOCALE_DATA[parentLocale];\n    if (match) {\n        return match;\n    }\n    if (parentLocale === 'en') {\n        return localeEn;\n    }\n    throw new Error(`Missing locale data for the locale \"${locale}\".`);\n}\n/**\n * Returns the currency symbol for a given currency code, or the code if no symbol available\n * (e.g.: format narrow = $, format wide = US$, code = USD)\n * If no locale is provided, it uses the locale \"en\" by default\n *\n * \\@experimental i18n support is experimental.\n * @param {?} code\n * @param {?} format\n * @param {?=} locale\n * @return {?}\n */\nfunction getCurrencySymbol(code, format, locale = 'en') {\n    /** @type {?} */\n    const currency = getLocaleCurrencies(locale)[code] || CURRENCIES_EN[code] || [];\n    /** @type {?} */\n    const symbolNarrow = currency[1 /* SymbolNarrow */];\n    if (format === 'narrow' && typeof symbolNarrow === 'string') {\n        return symbolNarrow;\n    }\n    return currency[0 /* Symbol */] || code;\n}\n/** @type {?} */\nconst DEFAULT_NB_OF_CURRENCY_DIGITS = 2;\n/**\n * Returns the number of decimal digits for the given currency.\n * Its value depends upon the presence of cents in that particular currency.\n *\n * \\@experimental i18n support is experimental.\n * @param {?} code\n * @return {?}\n */\nfunction getNumberOfCurrencyDigits(code) {\n    /** @type {?} */\n    let digits;\n    /** @type {?} */\n    const currency = CURRENCIES_EN[code];\n    if (currency) {\n        digits = currency[2 /* NbOfDigits */];\n    }\n    return typeof digits === 'number' ? digits : DEFAULT_NB_OF_CURRENCY_DIGITS;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ISO8601_DATE_REGEX = /^(\\d{4})-?(\\d\\d)-?(\\d\\d)(?:T(\\d\\d)(?::?(\\d\\d)(?::?(\\d\\d)(?:\\.(\\d+))?)?)?(Z|([+-])(\\d\\d):?(\\d\\d))?)?$/;\n/** @type {?} */\nconst NAMED_FORMATS = {};\n/** @type {?} */\nconst DATE_FORMATS_SPLIT = /((?:[^GyMLwWdEabBhHmsSzZO']+)|(?:'(?:[^']|'')*')|(?:G{1,5}|y{1,4}|M{1,5}|L{1,5}|w{1,2}|W{1}|d{1,2}|E{1,6}|a{1,5}|b{1,5}|B{1,5}|h{1,2}|H{1,2}|m{1,2}|s{1,2}|S{1,3}|z{1,4}|Z{1,5}|O{1,4}))([\\s\\S]*)/;\n/** @enum {number} */\nconst ZoneWidth = {\n    Short: 0,\n    ShortGMT: 1,\n    Long: 2,\n    Extended: 3,\n};\nZoneWidth[ZoneWidth.Short] = 'Short';\nZoneWidth[ZoneWidth.ShortGMT] = 'ShortGMT';\nZoneWidth[ZoneWidth.Long] = 'Long';\nZoneWidth[ZoneWidth.Extended] = 'Extended';\n/** @enum {number} */\nconst DateType = {\n    FullYear: 0,\n    Month: 1,\n    Date: 2,\n    Hours: 3,\n    Minutes: 4,\n    Seconds: 5,\n    FractionalSeconds: 6,\n    Day: 7,\n};\nDateType[DateType.FullYear] = 'FullYear';\nDateType[DateType.Month] = 'Month';\nDateType[DateType.Date] = 'Date';\nDateType[DateType.Hours] = 'Hours';\nDateType[DateType.Minutes] = 'Minutes';\nDateType[DateType.Seconds] = 'Seconds';\nDateType[DateType.FractionalSeconds] = 'FractionalSeconds';\nDateType[DateType.Day] = 'Day';\n/** @enum {number} */\nconst TranslationType = {\n    DayPeriods: 0,\n    Days: 1,\n    Months: 2,\n    Eras: 3,\n};\nTranslationType[TranslationType.DayPeriods] = 'DayPeriods';\nTranslationType[TranslationType.Days] = 'Days';\nTranslationType[TranslationType.Months] = 'Months';\nTranslationType[TranslationType.Eras] = 'Eras';\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `value` is a Date, a number (milliseconds since UTC epoch) or an ISO string\n *   (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. See {\\@link DatePipe} for more\n *   details.\n * - `locale` is a `string` defining the locale to use.\n * - `timezone` to be used for formatting. It understands UTC/GMT and the continental US time zone\n *   abbreviations, but for general use, use a time zone offset (e.g. `'+0430'`).\n *   If not specified, host system settings are used.\n *\n * See {\\@link DatePipe} for more details.\n * @param {?} value\n * @param {?} format\n * @param {?} locale\n * @param {?=} timezone\n * @return {?}\n */\nfunction formatDate(value, format, locale, timezone) {\n    /** @type {?} */\n    let date = toDate(value);\n    /** @type {?} */\n    const namedFormat = getNamedFormat(locale, format);\n    format = namedFormat || format;\n    /** @type {?} */\n    let parts = [];\n    /** @type {?} */\n    let match;\n    while (format) {\n        match = DATE_FORMATS_SPLIT.exec(format);\n        if (match) {\n            parts = parts.concat(match.slice(1));\n            /** @type {?} */\n            const part = parts.pop();\n            if (!part) {\n                break;\n            }\n            format = part;\n        }\n        else {\n            parts.push(format);\n            break;\n        }\n    }\n    /** @type {?} */\n    let dateTimezoneOffset = date.getTimezoneOffset();\n    if (timezone) {\n        dateTimezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n        date = convertTimezoneToLocal(date, timezone, true);\n    }\n    /** @type {?} */\n    let text = '';\n    parts.forEach(value => {\n        /** @type {?} */\n        const dateFormatter = getDateFormatter(value);\n        text += dateFormatter ?\n            dateFormatter(date, locale, dateTimezoneOffset) :\n            value === '\\'\\'' ? '\\'' : value.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n    });\n    return text;\n}\n/**\n * @param {?} locale\n * @param {?} format\n * @return {?}\n */\nfunction getNamedFormat(locale, format) {\n    /** @type {?} */\n    const localeId = getLocaleId(locale);\n    NAMED_FORMATS[localeId] = NAMED_FORMATS[localeId] || {};\n    if (NAMED_FORMATS[localeId][format]) {\n        return NAMED_FORMATS[localeId][format];\n    }\n    /** @type {?} */\n    let formatValue = '';\n    switch (format) {\n        case 'shortDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullDate':\n            formatValue = getLocaleDateFormat(locale, FormatWidth.Full);\n            break;\n        case 'shortTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Short);\n            break;\n        case 'mediumTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Medium);\n            break;\n        case 'longTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Long);\n            break;\n        case 'fullTime':\n            formatValue = getLocaleTimeFormat(locale, FormatWidth.Full);\n            break;\n        case 'short':\n            /** @type {?} */\n            const shortTime = getNamedFormat(locale, 'shortTime');\n            /** @type {?} */\n            const shortDate = getNamedFormat(locale, 'shortDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Short), [shortTime, shortDate]);\n            break;\n        case 'medium':\n            /** @type {?} */\n            const mediumTime = getNamedFormat(locale, 'mediumTime');\n            /** @type {?} */\n            const mediumDate = getNamedFormat(locale, 'mediumDate');\n            formatValue = formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Medium), [mediumTime, mediumDate]);\n            break;\n        case 'long':\n            /** @type {?} */\n            const longTime = getNamedFormat(locale, 'longTime');\n            /** @type {?} */\n            const longDate = getNamedFormat(locale, 'longDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Long), [longTime, longDate]);\n            break;\n        case 'full':\n            /** @type {?} */\n            const fullTime = getNamedFormat(locale, 'fullTime');\n            /** @type {?} */\n            const fullDate = getNamedFormat(locale, 'fullDate');\n            formatValue =\n                formatDateTime(getLocaleDateTimeFormat(locale, FormatWidth.Full), [fullTime, fullDate]);\n            break;\n    }\n    if (formatValue) {\n        NAMED_FORMATS[localeId][format] = formatValue;\n    }\n    return formatValue;\n}\n/**\n * @param {?} str\n * @param {?} opt_values\n * @return {?}\n */\nfunction formatDateTime(str, opt_values) {\n    if (opt_values) {\n        str = str.replace(/\\{([^}]+)}/g, function (match, key) {\n            return (opt_values != null && key in opt_values) ? opt_values[key] : match;\n        });\n    }\n    return str;\n}\n/**\n * @param {?} num\n * @param {?} digits\n * @param {?=} minusSign\n * @param {?=} trim\n * @param {?=} negWrap\n * @return {?}\n */\nfunction padNumber(num, digits, minusSign = '-', trim, negWrap) {\n    /** @type {?} */\n    let neg = '';\n    if (num < 0 || (negWrap && num <= 0)) {\n        if (negWrap) {\n            num = -num + 1;\n        }\n        else {\n            num = -num;\n            neg = minusSign;\n        }\n    }\n    /** @type {?} */\n    let strNum = String(num);\n    while (strNum.length < digits) {\n        strNum = '0' + strNum;\n    }\n    if (trim) {\n        strNum = strNum.substr(strNum.length - digits);\n    }\n    return neg + strNum;\n}\n/**\n * @param {?} milliseconds\n * @param {?} digits\n * @return {?}\n */\nfunction formatFractionalSeconds(milliseconds, digits) {\n    /** @type {?} */\n    const strMs = padNumber(milliseconds, 3);\n    return strMs.substr(0, digits);\n}\n/**\n * Returns a date formatter that transforms a date into its locale digit representation\n * @param {?} name\n * @param {?} size\n * @param {?=} offset\n * @param {?=} trim\n * @param {?=} negWrap\n * @return {?}\n */\nfunction dateGetter(name, size, offset = 0, trim = false, negWrap = false) {\n    return function (date, locale) {\n        /** @type {?} */\n        let part = getDatePart(name, date);\n        if (offset > 0 || part > -offset) {\n            part += offset;\n        }\n        if (name === DateType.Hours) {\n            if (part === 0 && offset === -12) {\n                part = 12;\n            }\n        }\n        else if (name === DateType.FractionalSeconds) {\n            return formatFractionalSeconds(part, size);\n        }\n        /** @type {?} */\n        const localeMinus = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        return padNumber(part, size, localeMinus, trim, negWrap);\n    };\n}\n/**\n * @param {?} part\n * @param {?} date\n * @return {?}\n */\nfunction getDatePart(part, date) {\n    switch (part) {\n        case DateType.FullYear:\n            return date.getFullYear();\n        case DateType.Month:\n            return date.getMonth();\n        case DateType.Date:\n            return date.getDate();\n        case DateType.Hours:\n            return date.getHours();\n        case DateType.Minutes:\n            return date.getMinutes();\n        case DateType.Seconds:\n            return date.getSeconds();\n        case DateType.FractionalSeconds:\n            return date.getMilliseconds();\n        case DateType.Day:\n            return date.getDay();\n        default:\n            throw new Error(`Unknown DateType value \"${part}\".`);\n    }\n}\n/**\n * Returns a date formatter that transforms a date into its locale string representation\n * @param {?} name\n * @param {?} width\n * @param {?=} form\n * @param {?=} extended\n * @return {?}\n */\nfunction dateStrGetter(name, width, form = FormStyle.Format, extended = false) {\n    return function (date, locale) {\n        return getDateTranslation(date, locale, name, width, form, extended);\n    };\n}\n/**\n * Returns the locale translation of a date for a given form, type and width\n * @param {?} date\n * @param {?} locale\n * @param {?} name\n * @param {?} width\n * @param {?} form\n * @param {?} extended\n * @return {?}\n */\nfunction getDateTranslation(date, locale, name, width, form, extended) {\n    switch (name) {\n        case TranslationType.Months:\n            return getLocaleMonthNames(locale, form, width)[date.getMonth()];\n        case TranslationType.Days:\n            return getLocaleDayNames(locale, form, width)[date.getDay()];\n        case TranslationType.DayPeriods:\n            /** @type {?} */\n            const currentHours = date.getHours();\n            /** @type {?} */\n            const currentMinutes = date.getMinutes();\n            if (extended) {\n                /** @type {?} */\n                const rules = getLocaleExtraDayPeriodRules(locale);\n                /** @type {?} */\n                const dayPeriods = getLocaleExtraDayPeriods(locale, form, width);\n                /** @type {?} */\n                let result;\n                rules.forEach((rule, index) => {\n                    if (Array.isArray(rule)) {\n                        const { hours: hoursFrom, minutes: minutesFrom } = rule[0];\n                        const { hours: hoursTo, minutes: minutesTo } = rule[1];\n                        if (currentHours >= hoursFrom && currentMinutes >= minutesFrom &&\n                            (currentHours < hoursTo ||\n                                (currentHours === hoursTo && currentMinutes < minutesTo))) {\n                            result = dayPeriods[index];\n                        }\n                    }\n                    else { // noon or midnight\n                        const { hours, minutes } = rule;\n                        if (hours === currentHours && minutes === currentMinutes) {\n                            result = dayPeriods[index];\n                        }\n                    }\n                });\n                if (result) {\n                    return result;\n                }\n            }\n            // if no rules for the day periods, we use am/pm by default\n            return getLocaleDayPeriods(locale, form, /** @type {?} */ (width))[currentHours < 12 ? 0 : 1];\n        case TranslationType.Eras:\n            return getLocaleEraNames(locale, /** @type {?} */ (width))[date.getFullYear() <= 0 ? 0 : 1];\n        default:\n            /** @type {?} */\n            const unexpected = name;\n            throw new Error(`unexpected translation type ${unexpected}`);\n    }\n}\n/**\n * Returns a date formatter that transforms a date and an offset into a timezone with ISO8601 or\n * GMT format depending on the width (eg: short = +0430, short:GMT = GMT+4, long = GMT+04:30,\n * extended = +04:30)\n * @param {?} width\n * @return {?}\n */\nfunction timeZoneGetter(width) {\n    return function (date, locale, offset) {\n        /** @type {?} */\n        const zone = -1 * offset;\n        /** @type {?} */\n        const minusSign = getLocaleNumberSymbol(locale, NumberSymbol.MinusSign);\n        /** @type {?} */\n        const hours = zone > 0 ? Math.floor(zone / 60) : Math.ceil(zone / 60);\n        switch (width) {\n            case ZoneWidth.Short:\n                return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.ShortGMT:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 1, minusSign);\n            case ZoneWidth.Long:\n                return 'GMT' + ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                    padNumber(Math.abs(zone % 60), 2, minusSign);\n            case ZoneWidth.Extended:\n                if (offset === 0) {\n                    return 'Z';\n                }\n                else {\n                    return ((zone >= 0) ? '+' : '') + padNumber(hours, 2, minusSign) + ':' +\n                        padNumber(Math.abs(zone % 60), 2, minusSign);\n                }\n            default:\n                throw new Error(`Unknown zone width \"${width}\"`);\n        }\n    };\n}\n/** @type {?} */\nconst JANUARY = 0;\n/** @type {?} */\nconst THURSDAY = 4;\n/**\n * @param {?} year\n * @return {?}\n */\nfunction getFirstThursdayOfYear(year) {\n    /** @type {?} */\n    const firstDayOfYear = (new Date(year, JANUARY, 1)).getDay();\n    return new Date(year, 0, 1 + ((firstDayOfYear <= THURSDAY) ? THURSDAY : THURSDAY + 7) - firstDayOfYear);\n}\n/**\n * @param {?} datetime\n * @return {?}\n */\nfunction getThursdayThisWeek(datetime) {\n    return new Date(datetime.getFullYear(), datetime.getMonth(), datetime.getDate() + (THURSDAY - datetime.getDay()));\n}\n/**\n * @param {?} size\n * @param {?=} monthBased\n * @return {?}\n */\nfunction weekGetter(size, monthBased = false) {\n    return function (date, locale) {\n        /** @type {?} */\n        let result;\n        if (monthBased) {\n            /** @type {?} */\n            const nbDaysBefore1stDayOfMonth = new Date(date.getFullYear(), date.getMonth(), 1).getDay() - 1;\n            /** @type {?} */\n            const today = date.getDate();\n            result = 1 + Math.floor((today + nbDaysBefore1stDayOfMonth) / 7);\n        }\n        else {\n            /** @type {?} */\n            const firstThurs = getFirstThursdayOfYear(date.getFullYear());\n            /** @type {?} */\n            const thisThurs = getThursdayThisWeek(date);\n            /** @type {?} */\n            const diff = thisThurs.getTime() - firstThurs.getTime();\n            result = 1 + Math.round(diff / 6.048e8); // 6.048e8 ms per week\n        }\n        return padNumber(result, size, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    };\n}\n/** @type {?} */\nconst DATE_FORMATS = {};\n/**\n * @param {?} format\n * @return {?}\n */\nfunction getDateFormatter(format) {\n    if (DATE_FORMATS[format]) {\n        return DATE_FORMATS[format];\n    }\n    /** @type {?} */\n    let formatter;\n    switch (format) {\n        // Era name (AD/BC)\n        case 'G':\n        case 'GG':\n        case 'GGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Abbreviated);\n            break;\n        case 'GGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Wide);\n            break;\n        case 'GGGGG':\n            formatter = dateStrGetter(TranslationType.Eras, TranslationWidth.Narrow);\n            break;\n        // 1 digit representation of the year, e.g. (AD 1 => 1, AD 199 => 199)\n        case 'y':\n            formatter = dateGetter(DateType.FullYear, 1, 0, false, true);\n            break;\n        // 2 digit representation of the year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yy':\n            formatter = dateGetter(DateType.FullYear, 2, 0, true, true);\n            break;\n        // 3 digit representation of the year, padded (000-999). (e.g. AD 2001 => 01, AD 2010 => 10)\n        case 'yyy':\n            formatter = dateGetter(DateType.FullYear, 3, 0, false, true);\n            break;\n        // 4 digit representation of the year (e.g. AD 1 => 0001, AD 2010 => 2010)\n        case 'yyyy':\n            formatter = dateGetter(DateType.FullYear, 4, 0, false, true);\n            break;\n        // Month of the year (1-12), numeric\n        case 'M':\n        case 'L':\n            formatter = dateGetter(DateType.Month, 1, 1);\n            break;\n        case 'MM':\n        case 'LL':\n            formatter = dateGetter(DateType.Month, 2, 1);\n            break;\n        // Month of the year (January, ...), string, format\n        case 'MMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated);\n            break;\n        case 'MMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Wide);\n            break;\n        case 'MMMMM':\n            formatter = dateStrGetter(TranslationType.Months, TranslationWidth.Narrow);\n            break;\n        // Month of the year (January, ...), string, standalone\n        case 'LLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Abbreviated, FormStyle.Standalone);\n            break;\n        case 'LLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Wide, FormStyle.Standalone);\n            break;\n        case 'LLLLL':\n            formatter =\n                dateStrGetter(TranslationType.Months, TranslationWidth.Narrow, FormStyle.Standalone);\n            break;\n        // Week of the year (1, ... 52)\n        case 'w':\n            formatter = weekGetter(1);\n            break;\n        case 'ww':\n            formatter = weekGetter(2);\n            break;\n        // Week of the month (1, ...)\n        case 'W':\n            formatter = weekGetter(1, true);\n            break;\n        // Day of the month (1-31)\n        case 'd':\n            formatter = dateGetter(DateType.Date, 1);\n            break;\n        case 'dd':\n            formatter = dateGetter(DateType.Date, 2);\n            break;\n        // Day of the Week\n        case 'E':\n        case 'EE':\n        case 'EEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Abbreviated);\n            break;\n        case 'EEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Wide);\n            break;\n        case 'EEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Narrow);\n            break;\n        case 'EEEEEE':\n            formatter = dateStrGetter(TranslationType.Days, TranslationWidth.Short);\n            break;\n        // Generic period of the day (am-pm)\n        case 'a':\n        case 'aa':\n        case 'aaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated);\n            break;\n        case 'aaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide);\n            break;\n        case 'aaaaa':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow);\n            break;\n        // Extended period of the day (midnight, at night, ...), standalone\n        case 'b':\n        case 'bb':\n        case 'bbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Standalone, true);\n            break;\n        case 'bbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Standalone, true);\n            break;\n        case 'bbbbb':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Standalone, true);\n            break;\n        // Extended period of the day (midnight, night, ...), standalone\n        case 'B':\n        case 'BB':\n        case 'BBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Abbreviated, FormStyle.Format, true);\n            break;\n        case 'BBBB':\n            formatter =\n                dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Wide, FormStyle.Format, true);\n            break;\n        case 'BBBBB':\n            formatter = dateStrGetter(TranslationType.DayPeriods, TranslationWidth.Narrow, FormStyle.Format, true);\n            break;\n        // Hour in AM/PM, (1-12)\n        case 'h':\n            formatter = dateGetter(DateType.Hours, 1, -12);\n            break;\n        case 'hh':\n            formatter = dateGetter(DateType.Hours, 2, -12);\n            break;\n        // Hour of the day (0-23)\n        case 'H':\n            formatter = dateGetter(DateType.Hours, 1);\n            break;\n        // Hour in day, padded (00-23)\n        case 'HH':\n            formatter = dateGetter(DateType.Hours, 2);\n            break;\n        // Minute of the hour (0-59)\n        case 'm':\n            formatter = dateGetter(DateType.Minutes, 1);\n            break;\n        case 'mm':\n            formatter = dateGetter(DateType.Minutes, 2);\n            break;\n        // Second of the minute (0-59)\n        case 's':\n            formatter = dateGetter(DateType.Seconds, 1);\n            break;\n        case 'ss':\n            formatter = dateGetter(DateType.Seconds, 2);\n            break;\n        // Fractional second\n        case 'S':\n            formatter = dateGetter(DateType.FractionalSeconds, 1);\n            break;\n        case 'SS':\n            formatter = dateGetter(DateType.FractionalSeconds, 2);\n            break;\n        case 'SSS':\n            formatter = dateGetter(DateType.FractionalSeconds, 3);\n            break;\n        // Timezone ISO8601 short format (-0430)\n        case 'Z':\n        case 'ZZ':\n        case 'ZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Short);\n            break;\n        // Timezone ISO8601 extended format (-04:30)\n        case 'ZZZZZ':\n            formatter = timeZoneGetter(ZoneWidth.Extended);\n            break;\n        // Timezone GMT short format (GMT+4)\n        case 'O':\n        case 'OO':\n        case 'OOO':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'z':\n        case 'zz':\n        case 'zzz':\n            formatter = timeZoneGetter(ZoneWidth.ShortGMT);\n            break;\n        // Timezone GMT long format (GMT+0430)\n        case 'OOOO':\n        case 'ZZZZ':\n        // Should be location, but fallback to format O instead because we don't have the data yet\n        case 'zzzz':\n            formatter = timeZoneGetter(ZoneWidth.Long);\n            break;\n        default:\n            return null;\n    }\n    DATE_FORMATS[format] = formatter;\n    return formatter;\n}\n/**\n * @param {?} timezone\n * @param {?} fallback\n * @return {?}\n */\nfunction timezoneToOffset(timezone, fallback) {\n    // Support: IE 9-11 only, Edge 13-15+\n    // IE/Edge do not \"understand\" colon (`:`) in timezone\n    timezone = timezone.replace(/:/g, '');\n    /** @type {?} */\n    const requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n}\n/**\n * @param {?} date\n * @param {?} minutes\n * @return {?}\n */\nfunction addDateMinutes(date, minutes) {\n    date = new Date(date.getTime());\n    date.setMinutes(date.getMinutes() + minutes);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} timezone\n * @param {?} reverse\n * @return {?}\n */\nfunction convertTimezoneToLocal(date, timezone, reverse) {\n    /** @type {?} */\n    const reverseValue = reverse ? -1 : 1;\n    /** @type {?} */\n    const dateTimezoneOffset = date.getTimezoneOffset();\n    /** @type {?} */\n    const timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    return addDateMinutes(date, reverseValue * (timezoneOffset - dateTimezoneOffset));\n}\n/**\n * Converts a value to date.\n *\n * Supported input formats:\n * - `Date`\n * - number: timestamp\n * - string: numeric (e.g. \"1234\"), ISO and date strings in a format supported by\n *   [Date.parse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/parse).\n *   Note: ISO strings without time return a date without timeoffset.\n *\n * Throws if unable to convert to a date.\n * @param {?} value\n * @return {?}\n */\nfunction toDate(value) {\n    if (isDate(value)) {\n        return value;\n    }\n    if (typeof value === 'number' && !isNaN(value)) {\n        return new Date(value);\n    }\n    if (typeof value === 'string') {\n        value = value.trim();\n        /** @type {?} */\n        const parsedNb = parseFloat(value);\n        // any string that only contains numbers, like \"1234\" but not like \"1234hello\"\n        if (!isNaN(/** @type {?} */ (value) - parsedNb)) {\n            return new Date(parsedNb);\n        }\n        if (/^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            const [y, m, d] = value.split('-').map((val) => +val);\n            return new Date(y, m - 1, d);\n        }\n        /** @type {?} */\n        let match;\n        if (match = value.match(ISO8601_DATE_REGEX)) {\n            return isoStringToDate(match);\n        }\n    }\n    /** @type {?} */\n    const date = new Date(/** @type {?} */ (value));\n    if (!isDate(date)) {\n        throw new Error(`Unable to convert \"${value}\" into a date`);\n    }\n    return date;\n}\n/**\n * Converts a date in ISO8601 to a Date.\n * Used instead of `Date.parse` because of browser discrepancies.\n * @param {?} match\n * @return {?}\n */\nfunction isoStringToDate(match) {\n    /** @type {?} */\n    const date = new Date(0);\n    /** @type {?} */\n    let tzHour = 0;\n    /** @type {?} */\n    let tzMin = 0;\n    /** @type {?} */\n    const dateSetter = match[8] ? date.setUTCFullYear : date.setFullYear;\n    /** @type {?} */\n    const timeSetter = match[8] ? date.setUTCHours : date.setHours;\n    // if there is a timezone defined like \"+01:00\" or \"+0100\"\n    if (match[9]) {\n        tzHour = Number(match[9] + match[10]);\n        tzMin = Number(match[9] + match[11]);\n    }\n    dateSetter.call(date, Number(match[1]), Number(match[2]) - 1, Number(match[3]));\n    /** @type {?} */\n    const h = Number(match[4] || 0) - tzHour;\n    /** @type {?} */\n    const m = Number(match[5] || 0) - tzMin;\n    /** @type {?} */\n    const s = Number(match[6] || 0);\n    /** @type {?} */\n    const ms = Math.round(parseFloat('0.' + (match[7] || 0)) * 1000);\n    timeSetter.call(date, h, m, s, ms);\n    return date;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDate(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n/** @type {?} */\nconst MAX_DIGITS = 22;\n/** @type {?} */\nconst DECIMAL_SEP = '.';\n/** @type {?} */\nconst ZERO_CHAR = '0';\n/** @type {?} */\nconst PATTERN_SEP = ';';\n/** @type {?} */\nconst GROUP_SEP = ',';\n/** @type {?} */\nconst DIGIT_CHAR = '#';\n/** @type {?} */\nconst CURRENCY_CHAR = '¤';\n/** @type {?} */\nconst PERCENT_CHAR = '%';\n/**\n * Transforms a number to a locale string based on a style and a format\n * @param {?} value\n * @param {?} pattern\n * @param {?} locale\n * @param {?} groupSymbol\n * @param {?} decimalSymbol\n * @param {?=} digitsInfo\n * @param {?=} isPercent\n * @return {?}\n */\nfunction formatNumberToLocaleString(value, pattern, locale, groupSymbol, decimalSymbol, digitsInfo, isPercent = false) {\n    /** @type {?} */\n    let formattedText = '';\n    /** @type {?} */\n    let isZero = false;\n    if (!isFinite(value)) {\n        formattedText = getLocaleNumberSymbol(locale, NumberSymbol.Infinity);\n    }\n    else {\n        /** @type {?} */\n        let parsedNumber = parseNumber(value);\n        if (isPercent) {\n            parsedNumber = toPercent(parsedNumber);\n        }\n        /** @type {?} */\n        let minInt = pattern.minInt;\n        /** @type {?} */\n        let minFraction = pattern.minFrac;\n        /** @type {?} */\n        let maxFraction = pattern.maxFrac;\n        if (digitsInfo) {\n            /** @type {?} */\n            const parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n            if (parts === null) {\n                throw new Error(`${digitsInfo} is not a valid digit info`);\n            }\n            /** @type {?} */\n            const minIntPart = parts[1];\n            /** @type {?} */\n            const minFractionPart = parts[3];\n            /** @type {?} */\n            const maxFractionPart = parts[5];\n            if (minIntPart != null) {\n                minInt = parseIntAutoRadix(minIntPart);\n            }\n            if (minFractionPart != null) {\n                minFraction = parseIntAutoRadix(minFractionPart);\n            }\n            if (maxFractionPart != null) {\n                maxFraction = parseIntAutoRadix(maxFractionPart);\n            }\n            else if (minFractionPart != null && minFraction > maxFraction) {\n                maxFraction = minFraction;\n            }\n        }\n        roundNumber(parsedNumber, minFraction, maxFraction);\n        /** @type {?} */\n        let digits = parsedNumber.digits;\n        /** @type {?} */\n        let integerLen = parsedNumber.integerLen;\n        /** @type {?} */\n        const exponent = parsedNumber.exponent;\n        /** @type {?} */\n        let decimals = [];\n        isZero = digits.every(d => !d);\n        // pad zeros for small numbers\n        for (; integerLen < minInt; integerLen++) {\n            digits.unshift(0);\n        }\n        // pad zeros for small numbers\n        for (; integerLen < 0; integerLen++) {\n            digits.unshift(0);\n        }\n        // extract decimals digits\n        if (integerLen > 0) {\n            decimals = digits.splice(integerLen, digits.length);\n        }\n        else {\n            decimals = digits;\n            digits = [0];\n        }\n        /** @type {?} */\n        const groups = [];\n        if (digits.length >= pattern.lgSize) {\n            groups.unshift(digits.splice(-pattern.lgSize, digits.length).join(''));\n        }\n        while (digits.length > pattern.gSize) {\n            groups.unshift(digits.splice(-pattern.gSize, digits.length).join(''));\n        }\n        if (digits.length) {\n            groups.unshift(digits.join(''));\n        }\n        formattedText = groups.join(getLocaleNumberSymbol(locale, groupSymbol));\n        // append the decimal digits\n        if (decimals.length) {\n            formattedText += getLocaleNumberSymbol(locale, decimalSymbol) + decimals.join('');\n        }\n        if (exponent) {\n            formattedText += getLocaleNumberSymbol(locale, NumberSymbol.Exponential) + '+' + exponent;\n        }\n    }\n    if (value < 0 && !isZero) {\n        formattedText = pattern.negPre + formattedText + pattern.negSuf;\n    }\n    else {\n        formattedText = pattern.posPre + formattedText + pattern.posSuf;\n    }\n    return formattedText;\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `currency` is the string that represents the currency, it can be its symbol or its name.\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `digitInfo` See {\\@link DecimalPipe} for more details.\n *\n *\n * @param {?} value\n * @param {?} locale\n * @param {?} currency\n * @param {?=} currencyCode\n * @param {?=} digitsInfo\n * @return {?}\n */\nfunction formatCurrency(value, locale, currency, currencyCode, digitsInfo) {\n    /** @type {?} */\n    const format = getLocaleNumberFormat(locale, NumberFormatStyle.Currency);\n    /** @type {?} */\n    const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    pattern.minFrac = getNumberOfCurrencyDigits(/** @type {?} */ ((currencyCode)));\n    pattern.maxFrac = pattern.minFrac;\n    /** @type {?} */\n    const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.CurrencyGroup, NumberSymbol.CurrencyDecimal, digitsInfo);\n    return res\n        .replace(CURRENCY_CHAR, currency)\n        // if we have 2 time the currency character, the second one is ignored\n        .replace(CURRENCY_CHAR, '');\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a number as a percentage according to locale rules.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {\\@link DecimalPipe} for more details.\n *\n *\n * @param {?} value\n * @param {?} locale\n * @param {?=} digitsInfo\n * @return {?}\n */\nfunction formatPercent(value, locale, digitsInfo) {\n    /** @type {?} */\n    const format = getLocaleNumberFormat(locale, NumberFormatStyle.Percent);\n    /** @type {?} */\n    const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    /** @type {?} */\n    const res = formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo, true);\n    return res.replace(new RegExp(PERCENT_CHAR, 'g'), getLocaleNumberSymbol(locale, NumberSymbol.PercentSign));\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the locale.\n *\n * Where:\n * - `value` is a number.\n * - `locale` is a `string` defining the locale to use.\n * - `digitInfo` See {\\@link DecimalPipe} for more details.\n *\n *\n * @param {?} value\n * @param {?} locale\n * @param {?=} digitsInfo\n * @return {?}\n */\nfunction formatNumber(value, locale, digitsInfo) {\n    /** @type {?} */\n    const format = getLocaleNumberFormat(locale, NumberFormatStyle.Decimal);\n    /** @type {?} */\n    const pattern = parseNumberFormat(format, getLocaleNumberSymbol(locale, NumberSymbol.MinusSign));\n    return formatNumberToLocaleString(value, pattern, locale, NumberSymbol.Group, NumberSymbol.Decimal, digitsInfo);\n}\n/**\n * @param {?} format\n * @param {?=} minusSign\n * @return {?}\n */\nfunction parseNumberFormat(format, minusSign = '-') {\n    /** @type {?} */\n    const p = {\n        minInt: 1,\n        minFrac: 0,\n        maxFrac: 0,\n        posPre: '',\n        posSuf: '',\n        negPre: '',\n        negSuf: '',\n        gSize: 0,\n        lgSize: 0\n    };\n    /** @type {?} */\n    const patternParts = format.split(PATTERN_SEP);\n    /** @type {?} */\n    const positive = patternParts[0];\n    /** @type {?} */\n    const negative = patternParts[1];\n    /** @type {?} */\n    const positiveParts = positive.indexOf(DECIMAL_SEP) !== -1 ?\n        positive.split(DECIMAL_SEP) :\n        [\n            positive.substring(0, positive.lastIndexOf(ZERO_CHAR) + 1),\n            positive.substring(positive.lastIndexOf(ZERO_CHAR) + 1)\n        ];\n    /** @type {?} */\n    const integer = positiveParts[0];\n    /** @type {?} */\n    const fraction = positiveParts[1] || '';\n    p.posPre = integer.substr(0, integer.indexOf(DIGIT_CHAR));\n    for (let i = 0; i < fraction.length; i++) {\n        /** @type {?} */\n        const ch = fraction.charAt(i);\n        if (ch === ZERO_CHAR) {\n            p.minFrac = p.maxFrac = i + 1;\n        }\n        else if (ch === DIGIT_CHAR) {\n            p.maxFrac = i + 1;\n        }\n        else {\n            p.posSuf += ch;\n        }\n    }\n    /** @type {?} */\n    const groups = integer.split(GROUP_SEP);\n    p.gSize = groups[1] ? groups[1].length : 0;\n    p.lgSize = (groups[2] || groups[1]) ? (groups[2] || groups[1]).length : 0;\n    if (negative) {\n        /** @type {?} */\n        const trunkLen = positive.length - p.posPre.length - p.posSuf.length;\n        /** @type {?} */\n        const pos = negative.indexOf(DIGIT_CHAR);\n        p.negPre = negative.substr(0, pos).replace(/'/g, '');\n        p.negSuf = negative.substr(pos + trunkLen).replace(/'/g, '');\n    }\n    else {\n        p.negPre = minusSign + p.posPre;\n        p.negSuf = p.posSuf;\n    }\n    return p;\n}\n/**\n * @param {?} parsedNumber\n * @return {?}\n */\nfunction toPercent(parsedNumber) {\n    // if the number is 0, don't do anything\n    if (parsedNumber.digits[0] === 0) {\n        return parsedNumber;\n    }\n    /** @type {?} */\n    const fractionLen = parsedNumber.digits.length - parsedNumber.integerLen;\n    if (parsedNumber.exponent) {\n        parsedNumber.exponent += 2;\n    }\n    else {\n        if (fractionLen === 0) {\n            parsedNumber.digits.push(0, 0);\n        }\n        else if (fractionLen === 1) {\n            parsedNumber.digits.push(0);\n        }\n        parsedNumber.integerLen += 2;\n    }\n    return parsedNumber;\n}\n/**\n * Parses a number.\n * Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/\n * @param {?} num\n * @return {?}\n */\nfunction parseNumber(num) {\n    /** @type {?} */\n    let numStr = Math.abs(num) + '';\n    /** @type {?} */\n    let exponent = 0;\n    /** @type {?} */\n    let digits;\n    /** @type {?} */\n    let integerLen;\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let j;\n    /** @type {?} */\n    let zeros;\n    // Decimal point?\n    if ((integerLen = numStr.indexOf(DECIMAL_SEP)) > -1) {\n        numStr = numStr.replace(DECIMAL_SEP, '');\n    }\n    // Exponential form?\n    if ((i = numStr.search(/e/i)) > 0) {\n        // Work out the exponent.\n        if (integerLen < 0)\n            integerLen = i;\n        integerLen += +numStr.slice(i + 1);\n        numStr = numStr.substring(0, i);\n    }\n    else if (integerLen < 0) {\n        // There was no decimal point or exponent so it is an integer.\n        integerLen = numStr.length;\n    }\n    // Count the number of leading zeros.\n    for (i = 0; numStr.charAt(i) === ZERO_CHAR; i++) { /* empty */\n        /* empty */\n    }\n    if (i === (zeros = numStr.length)) {\n        // The digits are all zero.\n        digits = [0];\n        integerLen = 1;\n    }\n    else {\n        // Count the number of trailing zeros\n        zeros--;\n        while (numStr.charAt(zeros) === ZERO_CHAR)\n            zeros--;\n        // Trailing zeros are insignificant so ignore them\n        integerLen -= i;\n        digits = [];\n        // Convert string to array of digits without leading/trailing zeros.\n        for (j = 0; i <= zeros; i++, j++) {\n            digits[j] = Number(numStr.charAt(i));\n        }\n    }\n    // If the number overflows the maximum allowed digits then use an exponent.\n    if (integerLen > MAX_DIGITS) {\n        digits = digits.splice(0, MAX_DIGITS - 1);\n        exponent = integerLen - 1;\n        integerLen = 1;\n    }\n    return { digits, exponent, integerLen };\n}\n/**\n * Round the parsed number to the specified number of decimal places\n * This function changes the parsedNumber in-place\n * @param {?} parsedNumber\n * @param {?} minFrac\n * @param {?} maxFrac\n * @return {?}\n */\nfunction roundNumber(parsedNumber, minFrac, maxFrac) {\n    if (minFrac > maxFrac) {\n        throw new Error(`The minimum number of digits after fraction (${minFrac}) is higher than the maximum (${maxFrac}).`);\n    }\n    /** @type {?} */\n    let digits = parsedNumber.digits;\n    /** @type {?} */\n    let fractionLen = digits.length - parsedNumber.integerLen;\n    /** @type {?} */\n    const fractionSize = Math.min(Math.max(minFrac, fractionLen), maxFrac);\n    /** @type {?} */\n    let roundAt = fractionSize + parsedNumber.integerLen;\n    /** @type {?} */\n    let digit = digits[roundAt];\n    if (roundAt > 0) {\n        // Drop fractional digits beyond `roundAt`\n        digits.splice(Math.max(parsedNumber.integerLen, roundAt));\n        // Set non-fractional digits beyond `roundAt` to 0\n        for (let j = roundAt; j < digits.length; j++) {\n            digits[j] = 0;\n        }\n    }\n    else {\n        // We rounded to zero so reset the parsedNumber\n        fractionLen = Math.max(0, fractionLen);\n        parsedNumber.integerLen = 1;\n        digits.length = Math.max(1, roundAt = fractionSize + 1);\n        digits[0] = 0;\n        for (let i = 1; i < roundAt; i++)\n            digits[i] = 0;\n    }\n    if (digit >= 5) {\n        if (roundAt - 1 < 0) {\n            for (let k = 0; k > roundAt; k--) {\n                digits.unshift(0);\n                parsedNumber.integerLen++;\n            }\n            digits.unshift(1);\n            parsedNumber.integerLen++;\n        }\n        else {\n            digits[roundAt - 1]++;\n        }\n    }\n    // Pad out with zeros to get the required fraction length\n    for (; fractionLen < Math.max(0, fractionSize); fractionLen++)\n        digits.push(0);\n    /** @type {?} */\n    let dropTrailingZeros = fractionSize !== 0;\n    /** @type {?} */\n    const minLen = minFrac + parsedNumber.integerLen;\n    /** @type {?} */\n    const carry = digits.reduceRight(function (carry, d, i, digits) {\n        d = d + carry;\n        digits[i] = d < 10 ? d : d - 10; // d % 10\n        if (dropTrailingZeros) {\n            // Do not keep meaningless fractional trailing zeros (e.g. 15.52000 --> 15.52)\n            if (digits[i] === 0 && i >= minLen) {\n                digits.pop();\n            }\n            else {\n                dropTrailingZeros = false;\n            }\n        }\n        return d >= 10 ? 1 : 0; // Math.floor(d / 10);\n    }, 0);\n    if (carry) {\n        digits.unshift(carry);\n        parsedNumber.integerLen++;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    /** @type {?} */\n    const result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * @deprecated from v5\n  @type {?} */\nconst DEPRECATED_PLURAL_FN = new InjectionToken('UseV4Plurals');\n/**\n * \\@experimental\n * @abstract\n */\nclass NgLocalization {\n}\n/**\n * Returns the plural category for a given value.\n * - \"=value\" when the case exists,\n * - the plural category otherwise\n * @param {?} value\n * @param {?} cases\n * @param {?} ngLocalization\n * @param {?=} locale\n * @return {?}\n */\nfunction getPluralCategory(value, cases, ngLocalization, locale) {\n    /** @type {?} */\n    let key = `=${value}`;\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    key = ngLocalization.getPluralCategory(value, locale);\n    if (cases.indexOf(key) > -1) {\n        return key;\n    }\n    if (cases.indexOf('other') > -1) {\n        return 'other';\n    }\n    throw new Error(`No plural message found for value \"${value}\"`);\n}\n/**\n * Returns the plural case based on the locale\n *\n * \\@experimental\n */\nclass NgLocaleLocalization extends NgLocalization {\n    /**\n     * @param {?} locale\n     * @param {?=} deprecatedPluralFn\n     */\n    constructor(locale, /** @deprecated from v5 */\n    deprecatedPluralFn) {\n        super();\n        this.locale = locale;\n        this.deprecatedPluralFn = deprecatedPluralFn;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} locale\n     * @return {?}\n     */\n    getPluralCategory(value, locale) {\n        /** @type {?} */\n        const plural = this.deprecatedPluralFn ? this.deprecatedPluralFn(locale || this.locale, value) :\n            getLocalePluralCase(locale || this.locale)(value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n}\nNgLocaleLocalization.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nNgLocaleLocalization.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DEPRECATED_PLURAL_FN,] }] }\n];\n/**\n * Returns the plural case based on the locale\n *\n * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n * \\@experimental\n * @param {?} locale\n * @param {?} nLike\n * @return {?}\n */\nfunction getPluralCase(locale, nLike) {\n    // TODO(vicb): lazy compute\n    if (typeof nLike === 'string') {\n        nLike = parseInt(/** @type {?} */ (nLike), 10);\n    }\n    /** @type {?} */\n    const n = /** @type {?} */ (nLike);\n    /** @type {?} */\n    const nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n    /** @type {?} */\n    const i = Math.floor(Math.abs(n));\n    /** @type {?} */\n    const v = nDecimal.length;\n    /** @type {?} */\n    const f = parseInt(nDecimal, 10);\n    /** @type {?} */\n    const t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n    /** @type {?} */\n    const lang = locale.split('-')[0].toLowerCase();\n    switch (lang) {\n        case 'af':\n        case 'asa':\n        case 'az':\n        case 'bem':\n        case 'bez':\n        case 'bg':\n        case 'brx':\n        case 'ce':\n        case 'cgg':\n        case 'chr':\n        case 'ckb':\n        case 'ee':\n        case 'el':\n        case 'eo':\n        case 'es':\n        case 'eu':\n        case 'fo':\n        case 'fur':\n        case 'gsw':\n        case 'ha':\n        case 'haw':\n        case 'hu':\n        case 'jgo':\n        case 'jmc':\n        case 'ka':\n        case 'kk':\n        case 'kkj':\n        case 'kl':\n        case 'ks':\n        case 'ksb':\n        case 'ky':\n        case 'lb':\n        case 'lg':\n        case 'mas':\n        case 'mgo':\n        case 'ml':\n        case 'mn':\n        case 'nb':\n        case 'nd':\n        case 'ne':\n        case 'nn':\n        case 'nnh':\n        case 'nyn':\n        case 'om':\n        case 'or':\n        case 'os':\n        case 'ps':\n        case 'rm':\n        case 'rof':\n        case 'rwk':\n        case 'saq':\n        case 'seh':\n        case 'sn':\n        case 'so':\n        case 'sq':\n        case 'ta':\n        case 'te':\n        case 'teo':\n        case 'tk':\n        case 'tr':\n        case 'ug':\n        case 'uz':\n        case 'vo':\n        case 'vun':\n        case 'wae':\n        case 'xog':\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ak':\n        case 'ln':\n        case 'mg':\n        case 'pa':\n        case 'ti':\n            if (n === Math.floor(n) && n >= 0 && n <= 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'am':\n        case 'as':\n        case 'bn':\n        case 'fa':\n        case 'gu':\n        case 'hi':\n        case 'kn':\n        case 'mr':\n        case 'zu':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'ar':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                return Plural.Many;\n            return Plural.Other;\n        case 'ast':\n        case 'ca':\n        case 'de':\n        case 'en':\n        case 'et':\n        case 'fi':\n        case 'fy':\n        case 'gl':\n        case 'it':\n        case 'nl':\n        case 'sv':\n        case 'sw':\n        case 'ur':\n        case 'yi':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            return Plural.Other;\n        case 'be':\n            if (n % 10 === 1 && !(n % 100 === 11))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                !(n % 100 >= 12 && n % 100 <= 14))\n                return Plural.Few;\n            if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'br':\n            if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                return Plural.One;\n            if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                return Plural.Two;\n            if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                    n % 100 >= 90 && n % 100 <= 99))\n                return Plural.Few;\n            if (!(n === 0) && n % 1e6 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'bs':\n        case 'hr':\n        case 'sr':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14) ||\n                f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                    !(f % 100 >= 12 && f % 100 <= 14))\n                return Plural.Few;\n            return Plural.Other;\n        case 'cs':\n        case 'sk':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'cy':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === 3)\n                return Plural.Few;\n            if (n === 6)\n                return Plural.Many;\n            return Plural.Other;\n        case 'da':\n            if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                return Plural.One;\n            return Plural.Other;\n        case 'dsb':\n        case 'hsb':\n            if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ff':\n        case 'fr':\n        case 'hy':\n        case 'kab':\n            if (i === 0 || i === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'fil':\n            if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                return Plural.One;\n            return Plural.Other;\n        case 'ga':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            if (n === Math.floor(n) && n >= 3 && n <= 6)\n                return Plural.Few;\n            if (n === Math.floor(n) && n >= 7 && n <= 10)\n                return Plural.Many;\n            return Plural.Other;\n        case 'gd':\n            if (n === 1 || n === 11)\n                return Plural.One;\n            if (n === 2 || n === 12)\n                return Plural.Two;\n            if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                return Plural.Few;\n            return Plural.Other;\n        case 'gv':\n            if (v === 0 && i % 10 === 1)\n                return Plural.One;\n            if (v === 0 && i % 10 === 2)\n                return Plural.Two;\n            if (v === 0 &&\n                (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                return Plural.Few;\n            if (!(v === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'he':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (i === 2 && v === 0)\n                return Plural.Two;\n            if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                return Plural.Many;\n            return Plural.Other;\n        case 'is':\n            if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'ksh':\n            if (n === 0)\n                return Plural.Zero;\n            if (n === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'kw':\n        case 'naq':\n        case 'se':\n        case 'smn':\n            if (n === 1)\n                return Plural.One;\n            if (n === 2)\n                return Plural.Two;\n            return Plural.Other;\n        case 'lag':\n            if (n === 0)\n                return Plural.Zero;\n            if ((i === 0 || i === 1) && !(n === 0))\n                return Plural.One;\n            return Plural.Other;\n        case 'lt':\n            if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.One;\n            if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                !(n % 100 >= 11 && n % 100 <= 19))\n                return Plural.Few;\n            if (!(f === 0))\n                return Plural.Many;\n            return Plural.Other;\n        case 'lv':\n        case 'prg':\n            if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                return Plural.Zero;\n            if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                !(v === 2) && f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mk':\n            if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'mt':\n            if (n === 1)\n                return Plural.One;\n            if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                return Plural.Few;\n            if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pl':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'pt':\n            if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                return Plural.One;\n            return Plural.Other;\n        case 'ro':\n            if (i === 1 && v === 0)\n                return Plural.One;\n            if (!(v === 0) || n === 0 ||\n                !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                return Plural.Few;\n            return Plural.Other;\n        case 'ru':\n        case 'uk':\n            if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                return Plural.One;\n            if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                !(i % 100 >= 12 && i % 100 <= 14))\n                return Plural.Few;\n            if (v === 0 && i % 10 === 0 ||\n                v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                return Plural.Many;\n            return Plural.Other;\n        case 'shi':\n            if (i === 0 || n === 1)\n                return Plural.One;\n            if (n === Math.floor(n) && n >= 2 && n <= 10)\n                return Plural.Few;\n            return Plural.Other;\n        case 'si':\n            if (n === 0 || n === 1 || i === 0 && f === 1)\n                return Plural.One;\n            return Plural.Other;\n        case 'sl':\n            if (v === 0 && i % 100 === 1)\n                return Plural.One;\n            if (v === 0 && i % 100 === 2)\n                return Plural.Two;\n            if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                return Plural.Few;\n            return Plural.Other;\n        case 'tzm':\n            if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                return Plural.One;\n            return Plural.Other;\n        // When there is no specification, the default is always \"other\"\n        // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n        // > other (required—general plural form — also used if the language only has a single form)\n        default:\n            return Plural.Other;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} cookieStr\n * @param {?} name\n * @return {?}\n */\nfunction parseCookieValue(cookieStr, name) {\n    name = encodeURIComponent(name);\n    for (const cookie of cookieStr.split(';')) {\n        /** @type {?} */\n        const eqIndex = cookie.indexOf('=');\n        const [cookieName, cookieValue] = eqIndex == -1 ? [cookie, ''] : [cookie.slice(0, eqIndex), cookie.slice(eqIndex + 1)];\n        if (cookieName.trim() === name) {\n            return decodeURIComponent(cookieValue);\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n *     <some-element [ngClass]=\"'first second'\">...</some-element>\n *\n *     <some-element [ngClass]=\"['first', 'second']\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'first': true, 'second': true, 'third': false}\">...</some-element>\n *\n *     <some-element [ngClass]=\"stringExp|arrayExp|objExp\">...</some-element>\n *\n *     <some-element [ngClass]=\"{'class1 class2 class3' : true}\">...</some-element>\n * ```\n *\n * \\@description\n *\n * Adds and removes CSS classes on an HTML element.\n *\n * The CSS classes are updated as follows, depending on the type of the expression evaluation:\n * - `string` - the CSS classes listed in the string (space delimited) are added,\n * - `Array` - the CSS classes declared as Array elements are added,\n * - `Object` - keys are CSS classes that get added when the expression given in the value\n *              evaluates to a truthy value, otherwise they are removed.\n *\n *\n */\nclass NgClass {\n    /**\n     * @param {?} _iterableDiffers\n     * @param {?} _keyValueDiffers\n     * @param {?} _ngEl\n     * @param {?} _renderer\n     */\n    constructor(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {\n        this._iterableDiffers = _iterableDiffers;\n        this._keyValueDiffers = _keyValueDiffers;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n        this._initialClasses = [];\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set klass(value) {\n        this._removeClasses(this._initialClasses);\n        this._initialClasses = typeof value === 'string' ? value.split(/\\s+/) : [];\n        this._applyClasses(this._initialClasses);\n        this._applyClasses(this._rawClass);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set ngClass(value) {\n        this._removeClasses(this._rawClass);\n        this._applyClasses(this._initialClasses);\n        this._iterableDiffer = null;\n        this._keyValueDiffer = null;\n        this._rawClass = typeof value === 'string' ? value.split(/\\s+/) : value;\n        if (this._rawClass) {\n            if (ɵisListLikeIterable(this._rawClass)) {\n                this._iterableDiffer = this._iterableDiffers.find(this._rawClass).create();\n            }\n            else {\n                this._keyValueDiffer = this._keyValueDiffers.find(this._rawClass).create();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._iterableDiffer) {\n            /** @type {?} */\n            const iterableChanges = this._iterableDiffer.diff(/** @type {?} */ (this._rawClass));\n            if (iterableChanges) {\n                this._applyIterableChanges(iterableChanges);\n            }\n        }\n        else if (this._keyValueDiffer) {\n            /** @type {?} */\n            const keyValueChanges = this._keyValueDiffer.diff(/** @type {?} */ (this._rawClass));\n            if (keyValueChanges) {\n                this._applyKeyValueChanges(keyValueChanges);\n            }\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyKeyValueChanges(changes) {\n        changes.forEachAddedItem((record) => this._toggleClass(record.key, record.currentValue));\n        changes.forEachChangedItem((record) => this._toggleClass(record.key, record.currentValue));\n        changes.forEachRemovedItem((record) => {\n            if (record.previousValue) {\n                this._toggleClass(record.key, false);\n            }\n        });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyIterableChanges(changes) {\n        changes.forEachAddedItem((record) => {\n            if (typeof record.item === 'string') {\n                this._toggleClass(record.item, true);\n            }\n            else {\n                throw new Error(`NgClass can only toggle CSS classes expressed as strings, got ${ɵstringify(record.item)}`);\n            }\n        });\n        changes.forEachRemovedItem((record) => this._toggleClass(record.item, false));\n    }\n    /**\n     * Applies a collection of CSS classes to the DOM element.\n     *\n     * For argument of type Set and Array CSS class names contained in those collections are always\n     * added.\n     * For argument of type Map CSS class name in the map's key is toggled based on the value (added\n     * for truthy and removed for falsy).\n     * @param {?} rawClassVal\n     * @return {?}\n     */\n    _applyClasses(rawClassVal) {\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                (/** @type {?} */ (rawClassVal)).forEach((klass) => this._toggleClass(klass, true));\n            }\n            else {\n                Object.keys(rawClassVal).forEach(klass => this._toggleClass(klass, !!rawClassVal[klass]));\n            }\n        }\n    }\n    /**\n     * Removes a collection of CSS classes from the DOM element. This is mostly useful for cleanup\n     * purposes.\n     * @param {?} rawClassVal\n     * @return {?}\n     */\n    _removeClasses(rawClassVal) {\n        if (rawClassVal) {\n            if (Array.isArray(rawClassVal) || rawClassVal instanceof Set) {\n                (/** @type {?} */ (rawClassVal)).forEach((klass) => this._toggleClass(klass, false));\n            }\n            else {\n                Object.keys(rawClassVal).forEach(klass => this._toggleClass(klass, false));\n            }\n        }\n    }\n    /**\n     * @param {?} klass\n     * @param {?} enabled\n     * @return {?}\n     */\n    _toggleClass(klass, enabled) {\n        klass = klass.trim();\n        if (klass) {\n            klass.split(/\\s+/g).forEach(klass => {\n                if (enabled) {\n                    this._renderer.addClass(this._ngEl.nativeElement, klass);\n                }\n                else {\n                    this._renderer.removeClass(this._ngEl.nativeElement, klass);\n                }\n            });\n        }\n    }\n}\nNgClass.decorators = [\n    { type: Directive, args: [{ selector: '[ngClass]' },] }\n];\n/** @nocollapse */\nNgClass.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: KeyValueDiffers },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNgClass.propDecorators = {\n    klass: [{ type: Input, args: ['class',] }],\n    ngClass: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Instantiates a single {\\@link Component} type and inserts its Host View into current View.\n * `NgComponentOutlet` provides a declarative approach for dynamic component creation.\n *\n * `NgComponentOutlet` requires a component type, if a falsy value is set the view will clear and\n * any existing component will get destroyed.\n *\n * \\@usageNotes\n *\n * ### Fine tune control\n *\n * You can control the component creation process by using the following optional attributes:\n *\n * * `ngComponentOutletInjector`: Optional custom {\\@link Injector} that will be used as parent for\n * the Component. Defaults to the injector of the current view container.\n *\n * * `ngComponentOutletContent`: Optional list of projectable nodes to insert into the content\n * section of the component, if exists.\n *\n * * `ngComponentOutletNgModuleFactory`: Optional module factory to allow dynamically loading other\n * module, then load a component from that module.\n *\n * ### Syntax\n *\n * Simple\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression\"></ng-container>\n * ```\n *\n * Customized injector/content\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   injector: injectorExpression;\n *                                   content: contentNodesExpression;\">\n * </ng-container>\n * ```\n *\n * Customized ngModuleFactory\n * ```\n * <ng-container *ngComponentOutlet=\"componentTypeExpression;\n *                                   ngModuleFactory: moduleFactory;\">\n * </ng-container>\n * ```\n *\n * ### A simple example\n *\n * {\\@example common/ngComponentOutlet/ts/module.ts region='SimpleExample'}\n *\n * A more complete example with additional options:\n *\n * {\\@example common/ngComponentOutlet/ts/module.ts region='CompleteExample'}\n * A more complete example with ngModuleFactory:\n *\n * {\\@example common/ngComponentOutlet/ts/module.ts region='NgModuleFactoryExample'}\n *\n * \\@experimental\n * \\@ngModule CommonModule\n */\nclass NgComponentOutlet {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._componentRef = null;\n        this._moduleRef = null;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._viewContainerRef.clear();\n        this._componentRef = null;\n        if (this.ngComponentOutlet) {\n            /** @type {?} */\n            const elInjector = this.ngComponentOutletInjector || this._viewContainerRef.parentInjector;\n            if (changes['ngComponentOutletNgModuleFactory']) {\n                if (this._moduleRef)\n                    this._moduleRef.destroy();\n                if (this.ngComponentOutletNgModuleFactory) {\n                    /** @type {?} */\n                    const parentModule = elInjector.get(NgModuleRef);\n                    this._moduleRef = this.ngComponentOutletNgModuleFactory.create(parentModule.injector);\n                }\n                else {\n                    this._moduleRef = null;\n                }\n            }\n            /** @type {?} */\n            const componentFactoryResolver = this._moduleRef ? this._moduleRef.componentFactoryResolver :\n                elInjector.get(ComponentFactoryResolver);\n            /** @type {?} */\n            const componentFactory = componentFactoryResolver.resolveComponentFactory(this.ngComponentOutlet);\n            this._componentRef = this._viewContainerRef.createComponent(componentFactory, this._viewContainerRef.length, elInjector, this.ngComponentOutletContent);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._moduleRef)\n            this._moduleRef.destroy();\n    }\n}\nNgComponentOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[ngComponentOutlet]' },] }\n];\n/** @nocollapse */\nNgComponentOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nNgComponentOutlet.propDecorators = {\n    ngComponentOutlet: [{ type: Input }],\n    ngComponentOutletInjector: [{ type: Input }],\n    ngComponentOutletContent: [{ type: Input }],\n    ngComponentOutletNgModuleFactory: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass NgForOfContext {\n    /**\n     * @param {?} $implicit\n     * @param {?} ngForOf\n     * @param {?} index\n     * @param {?} count\n     */\n    constructor($implicit, ngForOf, index, count) {\n        this.$implicit = $implicit;\n        this.ngForOf = ngForOf;\n        this.index = index;\n        this.count = count;\n    }\n    /**\n     * @return {?}\n     */\n    get first() { return this.index === 0; }\n    /**\n     * @return {?}\n     */\n    get last() { return this.index === this.count - 1; }\n    /**\n     * @return {?}\n     */\n    get even() { return this.index % 2 === 0; }\n    /**\n     * @return {?}\n     */\n    get odd() { return !this.even; }\n}\n/**\n * The `NgForOf` directive instantiates a template once per item from an iterable. The context\n * for each instantiated template inherits from the outer context with the given loop variable\n * set to the current item from the iterable.\n *\n * \\@usageNotes\n *\n * ### Local Variables\n *\n * `NgForOf` provides several exported values that can be aliased to local variables:\n *\n * - `$implicit: T`: The value of the individual items in the iterable (`ngForOf`).\n * - `ngForOf: NgIterable<T>`: The value of the iterable expression. Useful when the expression is\n * more complex then a property access, for example when using the async pipe (`userStreams |\n * async`).\n * - `index: number`: The index of the current item in the iterable.\n * - `first: boolean`: True when the item is the first item in the iterable.\n * - `last: boolean`: True when the item is the last item in the iterable.\n * - `even: boolean`: True when the item has an even index in the iterable.\n * - `odd: boolean`: True when the item has an odd index in the iterable.\n *\n * ```\n * <li *ngFor=\"let user of userObservable | async as users; index as i; first as isFirst\">\n *    {{i}}/{{users.length}}. {{user}} <span *ngIf=\"isFirst\">default</span>\n * </li>\n * ```\n *\n * ### Change Propagation\n *\n * When the contents of the iterator changes, `NgForOf` makes the corresponding changes to the DOM:\n *\n * * When an item is added, a new instance of the template is added to the DOM.\n * * When an item is removed, its template instance is removed from the DOM.\n * * When items are reordered, their respective templates are reordered in the DOM.\n * * Otherwise, the DOM element for that item will remain the same.\n *\n * Angular uses object identity to track insertions and deletions within the iterator and reproduce\n * those changes in the DOM. This has important implications for animations and any stateful\n * controls (such as `<input>` elements which accept user input) that are present. Inserted rows can\n * be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state\n * such as user input.\n *\n * It is possible for the identities of elements in the iterator to change while the data does not.\n * This can happen, for example, if the iterator produced from an RPC to the server, and that\n * RPC is re-run. Even if the data hasn't changed, the second response will produce objects with\n * different identities, and Angular will tear down the entire DOM and rebuild it (as if all old\n * elements were deleted and all new elements inserted). This is an expensive operation and should\n * be avoided if possible.\n *\n * To customize the default tracking algorithm, `NgForOf` supports `trackBy` option.\n * `trackBy` takes a function which has two arguments: `index` and `item`.\n * If `trackBy` is given, Angular tracks changes by the return value of the function.\n *\n * ### Syntax\n *\n * - `<li *ngFor=\"let item of items; index as i; trackBy: trackByFn\">...</li>`\n *\n * With `<ng-template>` element:\n *\n * ```\n * <ng-template ngFor let-item [ngForOf]=\"items\" let-i=\"index\" [ngForTrackBy]=\"trackByFn\">\n *   <li>...</li>\n * </ng-template>\n * ```\n *\n * ### Example\n *\n * See a [live demo](http://plnkr.co/edit/KVuXxDp0qinGDyo307QW?p=preview) for a more detailed\n * example.\n *\n * \\@ngModule CommonModule\n * @template T\n */\nclass NgForOf {\n    /**\n     * @param {?} _viewContainer\n     * @param {?} _template\n     * @param {?} _differs\n     */\n    constructor(_viewContainer, _template, _differs) {\n        this._viewContainer = _viewContainer;\n        this._template = _template;\n        this._differs = _differs;\n        this._ngForOfDirty = true;\n        this._differ = null;\n    }\n    /**\n     * @param {?} ngForOf\n     * @return {?}\n     */\n    set ngForOf(ngForOf) {\n        this._ngForOf = ngForOf;\n        this._ngForOfDirty = true;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set ngForTrackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function') {\n            // TODO(vicb): use a log service once there is a public one available\n            if (/** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}. ` +\n                    `See https://angular.io/docs/ts/latest/api/common/index/NgFor-directive.html#!#change-propagation for more information.`);\n            }\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * @return {?}\n     */\n    get ngForTrackBy() { return this._trackByFn; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set ngForTemplate(value) {\n        // TODO(TS2.1): make TemplateRef<Partial<NgForRowOf<T>>> once we move to TS v2.1\n        // The current type is too restrictive; a template that just uses index, for example,\n        // should be acceptable.\n        if (value) {\n            this._template = value;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._ngForOfDirty) {\n            this._ngForOfDirty = false;\n            /** @type {?} */\n            const value = this._ngForOf;\n            if (!this._differ && value) {\n                try {\n                    this._differ = this._differs.find(value).create(this.ngForTrackBy);\n                }\n                catch (e) {\n                    throw new Error(`Cannot find a differ supporting object '${value}' of type '${getTypeNameForDebugging(value)}'. NgFor only supports binding to Iterables such as Arrays.`);\n                }\n            }\n        }\n        if (this._differ) {\n            /** @type {?} */\n            const changes = this._differ.diff(this._ngForOf);\n            if (changes)\n                this._applyChanges(changes);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        /** @type {?} */\n        const insertTuples = [];\n        changes.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\n            if (item.previousIndex == null) {\n                /** @type {?} */\n                const view = this._viewContainer.createEmbeddedView(this._template, new NgForOfContext(/** @type {?} */ ((null)), this._ngForOf, -1, -1), currentIndex);\n                /** @type {?} */\n                const tuple = new RecordViewTuple(item, view);\n                insertTuples.push(tuple);\n            }\n            else if (currentIndex == null) {\n                this._viewContainer.remove(adjustedPreviousIndex);\n            }\n            else {\n                /** @type {?} */\n                const view = /** @type {?} */ ((this._viewContainer.get(adjustedPreviousIndex)));\n                this._viewContainer.move(view, currentIndex);\n                /** @type {?} */\n                const tuple = new RecordViewTuple(item, /** @type {?} */ (view));\n                insertTuples.push(tuple);\n            }\n        });\n        for (let i = 0; i < insertTuples.length; i++) {\n            this._perViewChange(insertTuples[i].view, insertTuples[i].record);\n        }\n        for (let i = 0, ilen = this._viewContainer.length; i < ilen; i++) {\n            /** @type {?} */\n            const viewRef = /** @type {?} */ (this._viewContainer.get(i));\n            viewRef.context.index = i;\n            viewRef.context.count = ilen;\n            viewRef.context.ngForOf = this._ngForOf;\n        }\n        changes.forEachIdentityChange((record) => {\n            /** @type {?} */\n            const viewRef = /** @type {?} */ (this._viewContainer.get(record.currentIndex));\n            viewRef.context.$implicit = record.item;\n        });\n    }\n    /**\n     * @param {?} view\n     * @param {?} record\n     * @return {?}\n     */\n    _perViewChange(view, record) {\n        view.context.$implicit = record.item;\n    }\n}\nNgForOf.decorators = [\n    { type: Directive, args: [{ selector: '[ngFor][ngForOf]' },] }\n];\n/** @nocollapse */\nNgForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\nNgForOf.propDecorators = {\n    ngForOf: [{ type: Input }],\n    ngForTrackBy: [{ type: Input }],\n    ngForTemplate: [{ type: Input }]\n};\n/**\n * @template T\n */\nclass RecordViewTuple {\n    /**\n     * @param {?} record\n     * @param {?} view\n     */\n    constructor(record, view) {\n        this.record = record;\n        this.view = view;\n    }\n}\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Conditionally includes a template based on the value of an `expression`.\n *\n * `ngIf` evaluates the `expression` and then renders the `then` or `else` template in its place\n * when expression is truthy or falsy respectively. Typically the:\n *  - `then` template is the inline template of `ngIf` unless bound to a different value.\n *  - `else` template is blank unless it is bound.\n *\n *\n * \\@usageNotes\n *\n * ### Most common usage\n *\n * The most common usage of the `ngIf` directive is to conditionally show the inline template as\n * seen in this example:\n * {\\@example common/ngIf/ts/module.ts region='NgIfSimple'}\n *\n * ### Showing an alternative template using `else`\n *\n * If it is necessary to display a template when the `expression` is falsy use the `else` template\n * binding as shown. Note that the `else` binding points to a `<ng-template>` labeled `#elseBlock`.\n * The template can be defined anywhere in the component view but is typically placed right after\n * `ngIf` for readability.\n *\n * {\\@example common/ngIf/ts/module.ts region='NgIfElse'}\n *\n * ### Using non-inlined `then` template\n *\n * Usually the `then` template is the inlined template of the `ngIf`, but it can be changed using\n * a binding (just like `else`). Because `then` and `else` are bindings, the template references can\n * change at runtime as shown in this example.\n *\n * {\\@example common/ngIf/ts/module.ts region='NgIfThenElse'}\n *\n * ### Storing conditional result in a variable\n *\n * A common pattern is that we need to show a set of properties from the same object. If the\n * object is undefined, then we have to use the safe-traversal-operator `?.` to guard against\n * dereferencing a `null` value. This is especially the case when waiting on async data such as\n * when using the `async` pipe as shown in following example:\n *\n * ```\n * Hello {{ (userStream|async)?.last }}, {{ (userStream|async)?.first }}!\n * ```\n *\n * There are several inefficiencies in the above example:\n *  - We create multiple subscriptions on `userStream`. One for each `async` pipe, or two in the\n *    example above.\n *  - We cannot display an alternative screen while waiting for the data to arrive asynchronously.\n *  - We have to use the safe-traversal-operator `?.` to access properties, which is cumbersome.\n *  - We have to place the `async` pipe in parenthesis.\n *\n * A better way to do this is to use `ngIf` and store the result of the condition in a local\n * variable as shown in the the example below:\n *\n * {\\@example common/ngIf/ts/module.ts region='NgIfAs'}\n *\n * Notice that:\n *  - We use only one `async` pipe and hence only one subscription gets created.\n *  - `ngIf` stores the result of the `userStream|async` in the local variable `user`.\n *  - The local `user` can then be bound repeatedly in a more efficient way.\n *  - No need to use the safe-traversal-operator `?.` to access properties as `ngIf` will only\n *    display the data if `userStream` returns a value.\n *  - We can display an alternative template while waiting for the data.\n *\n * ### Syntax\n *\n * Simple form:\n * - `<div *ngIf=\"condition\">...</div>`\n * - `<ng-template [ngIf]=\"condition\"><div>...</div></ng-template>`\n *\n * Form with an else block:\n * ```\n * <div *ngIf=\"condition; else elseBlock\">...</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with a `then` and `else` block:\n * ```\n * <div *ngIf=\"condition; then thenBlock else elseBlock\"></div>\n * <ng-template #thenBlock>...</ng-template>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * Form with storing the value locally:\n * ```\n * <div *ngIf=\"condition as value; else elseBlock\">{{value}}</div>\n * <ng-template #elseBlock>...</ng-template>\n * ```\n *\n * \\@ngModule CommonModule\n */\nclass NgIf {\n    /**\n     * @param {?} _viewContainer\n     * @param {?} templateRef\n     */\n    constructor(_viewContainer, templateRef) {\n        this._viewContainer = _viewContainer;\n        this._context = new NgIfContext();\n        this._thenTemplateRef = null;\n        this._elseTemplateRef = null;\n        this._thenViewRef = null;\n        this._elseViewRef = null;\n        this._thenTemplateRef = templateRef;\n    }\n    /**\n     * @param {?} condition\n     * @return {?}\n     */\n    set ngIf(condition) {\n        this._context.$implicit = this._context.ngIf = condition;\n        this._updateView();\n    }\n    /**\n     * @param {?} templateRef\n     * @return {?}\n     */\n    set ngIfThen(templateRef) {\n        assertTemplate('ngIfThen', templateRef);\n        this._thenTemplateRef = templateRef;\n        this._thenViewRef = null; // clear previous view if any.\n        this._updateView();\n    }\n    /**\n     * @param {?} templateRef\n     * @return {?}\n     */\n    set ngIfElse(templateRef) {\n        assertTemplate('ngIfElse', templateRef);\n        this._elseTemplateRef = templateRef;\n        this._elseViewRef = null; // clear previous view if any.\n        this._updateView();\n    }\n    /**\n     * @return {?}\n     */\n    _updateView() {\n        if (this._context.$implicit) {\n            if (!this._thenViewRef) {\n                this._viewContainer.clear();\n                this._elseViewRef = null;\n                if (this._thenTemplateRef) {\n                    this._thenViewRef =\n                        this._viewContainer.createEmbeddedView(this._thenTemplateRef, this._context);\n                }\n            }\n        }\n        else {\n            if (!this._elseViewRef) {\n                this._viewContainer.clear();\n                this._thenViewRef = null;\n                if (this._elseTemplateRef) {\n                    this._elseViewRef =\n                        this._viewContainer.createEmbeddedView(this._elseTemplateRef, this._context);\n                }\n            }\n        }\n    }\n}\nNgIf.decorators = [\n    { type: Directive, args: [{ selector: '[ngIf]' },] }\n];\n/** @nocollapse */\nNgIf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef }\n];\nNgIf.propDecorators = {\n    ngIf: [{ type: Input }],\n    ngIfThen: [{ type: Input }],\n    ngIfElse: [{ type: Input }]\n};\nclass NgIfContext {\n    constructor() {\n        this.$implicit = null;\n        this.ngIf = null;\n    }\n}\n/**\n * @param {?} property\n * @param {?} templateRef\n * @return {?}\n */\nfunction assertTemplate(property, templateRef) {\n    /** @type {?} */\n    const isTemplateRefOrNull = !!(!templateRef || templateRef.createEmbeddedView);\n    if (!isTemplateRefOrNull) {\n        throw new Error(`${property} must be a TemplateRef, but received '${ɵstringify(templateRef)}'.`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass SwitchView {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _templateRef\n     */\n    constructor(_viewContainerRef, _templateRef) {\n        this._viewContainerRef = _viewContainerRef;\n        this._templateRef = _templateRef;\n        this._created = false;\n    }\n    /**\n     * @return {?}\n     */\n    create() {\n        this._created = true;\n        this._viewContainerRef.createEmbeddedView(this._templateRef);\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        this._created = false;\n        this._viewContainerRef.clear();\n    }\n    /**\n     * @param {?} created\n     * @return {?}\n     */\n    enforceState(created) {\n        if (created && !this._created) {\n            this.create();\n        }\n        else if (!created && this._created) {\n            this.destroy();\n        }\n    }\n}\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n *     <container-element [ngSwitch]=\"switch_expression\">\n *       <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *       <some-element *ngSwitchCase=\"match_expression_2\">...</some-element>\n *       <some-other-element *ngSwitchCase=\"match_expression_3\">...</some-other-element>\n *       <ng-container *ngSwitchCase=\"match_expression_3\">\n *         <!-- use a ng-container to group multiple root nodes -->\n *         <inner-element></inner-element>\n *         <inner-other-element></inner-other-element>\n *       </ng-container>\n *       <some-element *ngSwitchDefault>...</some-element>\n *     </container-element>\n * ```\n * \\@description\n *\n * Adds / removes DOM sub-trees when the nest match expressions matches the switch expression.\n *\n * `NgSwitch` stamps out nested views when their match expression value matches the value of the\n * switch expression.\n *\n * In other words:\n * - you define a container element (where you place the directive with a switch expression on the\n * `[ngSwitch]=\"...\"` attribute)\n * - you define inner views inside the `NgSwitch` and place a `*ngSwitchCase` attribute on the view\n * root elements.\n *\n * Elements within `NgSwitch` but outside of a `NgSwitchCase` or `NgSwitchDefault` directives will\n * be preserved at the location.\n *\n * The `ngSwitchCase` directive informs the parent `NgSwitch` of which view to display when the\n * expression is evaluated.\n * When no matching expression is found on a `ngSwitchCase` view, the `ngSwitchDefault` view is\n * stamped out.\n *\n *\n */\nclass NgSwitch {\n    constructor() {\n        this._defaultUsed = false;\n        this._caseCount = 0;\n        this._lastCaseCheckIndex = 0;\n        this._lastCasesMatched = false;\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set ngSwitch(newValue) {\n        this._ngSwitch = newValue;\n        if (this._caseCount === 0) {\n            this._updateDefaultCases(true);\n        }\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _addCase() { return this._caseCount++; }\n    /**\n     * \\@internal\n     * @param {?} view\n     * @return {?}\n     */\n    _addDefault(view) {\n        if (!this._defaultViews) {\n            this._defaultViews = [];\n        }\n        this._defaultViews.push(view);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _matchCase(value) {\n        /** @type {?} */\n        const matched = value == this._ngSwitch;\n        this._lastCasesMatched = this._lastCasesMatched || matched;\n        this._lastCaseCheckIndex++;\n        if (this._lastCaseCheckIndex === this._caseCount) {\n            this._updateDefaultCases(!this._lastCasesMatched);\n            this._lastCaseCheckIndex = 0;\n            this._lastCasesMatched = false;\n        }\n        return matched;\n    }\n    /**\n     * @param {?} useDefault\n     * @return {?}\n     */\n    _updateDefaultCases(useDefault) {\n        if (this._defaultViews && useDefault !== this._defaultUsed) {\n            this._defaultUsed = useDefault;\n            for (let i = 0; i < this._defaultViews.length; i++) {\n                /** @type {?} */\n                const defaultView = this._defaultViews[i];\n                defaultView.enforceState(useDefault);\n            }\n        }\n    }\n}\nNgSwitch.decorators = [\n    { type: Directive, args: [{ selector: '[ngSwitch]' },] }\n];\nNgSwitch.propDecorators = {\n    ngSwitch: [{ type: Input }]\n};\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n * </container-element>\n * ```\n * \\@description\n *\n * Creates a view that will be added/removed from the parent {\\@link NgSwitch} when the\n * given expression evaluate to respectively the same/different value as the switch\n * expression.\n *\n * Insert the sub-tree when the expression evaluates to the same value as the enclosing switch\n * expression.\n *\n * If multiple match expressions match the switch expression value, all of them are displayed.\n *\n * See {\\@link NgSwitch} for more details and example.\n *\n *\n */\nclass NgSwitchCase {\n    /**\n     * @param {?} viewContainer\n     * @param {?} templateRef\n     * @param {?} ngSwitch\n     */\n    constructor(viewContainer, templateRef, ngSwitch) {\n        this.ngSwitch = ngSwitch;\n        ngSwitch._addCase();\n        this._view = new SwitchView(viewContainer, templateRef);\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() { this._view.enforceState(this.ngSwitch._matchCase(this.ngSwitchCase)); }\n}\nNgSwitchCase.decorators = [\n    { type: Directive, args: [{ selector: '[ngSwitchCase]' },] }\n];\n/** @nocollapse */\nNgSwitchCase.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: NgSwitch, decorators: [{ type: Host }] }\n];\nNgSwitchCase.propDecorators = {\n    ngSwitchCase: [{ type: Input }]\n};\n/**\n * \\@ngModule CommonModule\n * \\@usageNotes\n * ```\n * <container-element [ngSwitch]=\"switch_expression\">\n *   <some-element *ngSwitchCase=\"match_expression_1\">...</some-element>\n *   <some-other-element *ngSwitchDefault>...</some-other-element>\n * </container-element>\n * ```\n *\n * \\@description\n *\n * Creates a view that is added to the parent {\\@link NgSwitch} when no case expressions\n * match the switch expression.\n *\n * Insert the sub-tree when no case expressions evaluate to the same value as the enclosing switch\n * expression.\n *\n * See {\\@link NgSwitch} for more details and example.\n *\n *\n */\nclass NgSwitchDefault {\n    /**\n     * @param {?} viewContainer\n     * @param {?} templateRef\n     * @param {?} ngSwitch\n     */\n    constructor(viewContainer, templateRef, ngSwitch) {\n        ngSwitch._addDefault(new SwitchView(viewContainer, templateRef));\n    }\n}\nNgSwitchDefault.decorators = [\n    { type: Directive, args: [{ selector: '[ngSwitchDefault]' },] }\n];\n/** @nocollapse */\nNgSwitchDefault.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: NgSwitch, decorators: [{ type: Host }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">there is nothing</ng-template>\n *   <ng-template ngPluralCase=\"=1\">there is one</ng-template>\n *   <ng-template ngPluralCase=\"few\">there are a few</ng-template>\n * </some-element>\n * ```\n *\n * \\@description\n *\n * Adds / removes DOM sub-trees based on a numeric value. Tailored for pluralization.\n *\n * Displays DOM sub-trees that match the switch expression value, or failing that, DOM sub-trees\n * that match the switch expression's pluralization category.\n *\n * To use this directive you must provide a container element that sets the `[ngPlural]` attribute\n * to a switch expression. Inner elements with a `[ngPluralCase]` will display based on their\n * expression:\n * - if `[ngPluralCase]` is set to a value starting with `=`, it will only display if the value\n *   matches the switch expression exactly,\n * - otherwise, the view will be treated as a \"category match\", and will only display if exact\n *   value matches aren't found and the value maps to its category for the defined locale.\n *\n * See http://cldr.unicode.org/index/cldr-spec/plural-rules\n *\n * \\@experimental\n */\nclass NgPlural {\n    /**\n     * @param {?} _localization\n     */\n    constructor(_localization) {\n        this._localization = _localization;\n        this._caseViews = {};\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set ngPlural(value) {\n        this._switchValue = value;\n        this._updateView();\n    }\n    /**\n     * @param {?} value\n     * @param {?} switchView\n     * @return {?}\n     */\n    addCase(value, switchView) { this._caseViews[value] = switchView; }\n    /**\n     * @return {?}\n     */\n    _updateView() {\n        this._clearViews();\n        /** @type {?} */\n        const cases = Object.keys(this._caseViews);\n        /** @type {?} */\n        const key = getPluralCategory(this._switchValue, cases, this._localization);\n        this._activateView(this._caseViews[key]);\n    }\n    /**\n     * @return {?}\n     */\n    _clearViews() {\n        if (this._activeView)\n            this._activeView.destroy();\n    }\n    /**\n     * @param {?} view\n     * @return {?}\n     */\n    _activateView(view) {\n        if (view) {\n            this._activeView = view;\n            this._activeView.create();\n        }\n    }\n}\nNgPlural.decorators = [\n    { type: Directive, args: [{ selector: '[ngPlural]' },] }\n];\n/** @nocollapse */\nNgPlural.ctorParameters = () => [\n    { type: NgLocalization }\n];\nNgPlural.propDecorators = {\n    ngPlural: [{ type: Input }]\n};\n/**\n * \\@ngModule CommonModule\n *\n * \\@description\n *\n * Creates a view that will be added/removed from the parent {\\@link NgPlural} when the\n * given expression matches the plural expression according to CLDR rules.\n *\n * \\@usageNotes\n * ```\n * <some-element [ngPlural]=\"value\">\n *   <ng-template ngPluralCase=\"=0\">...</ng-template>\n *   <ng-template ngPluralCase=\"other\">...</ng-template>\n * </some-element>\n * ```\n *\n * See {\\@link NgPlural} for more details and example.\n *\n * \\@experimental\n */\nclass NgPluralCase {\n    /**\n     * @param {?} value\n     * @param {?} template\n     * @param {?} viewContainer\n     * @param {?} ngPlural\n     */\n    constructor(value, template, viewContainer, ngPlural) {\n        this.value = value;\n        /** @type {?} */\n        const isANumber = !isNaN(Number(value));\n        ngPlural.addCase(isANumber ? `=${value}` : value, new SwitchView(viewContainer, template));\n    }\n}\nNgPluralCase.decorators = [\n    { type: Directive, args: [{ selector: '[ngPluralCase]' },] }\n];\n/** @nocollapse */\nNgPluralCase.ctorParameters = () => [\n    { type: String, decorators: [{ type: Attribute, args: ['ngPluralCase',] }] },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: NgPlural, decorators: [{ type: Host }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n *\n * \\@usageNotes\n * ```\n * <some-element [ngStyle]=\"{'font-style': styleExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"{'max-width.px': widthExp}\">...</some-element>\n *\n * <some-element [ngStyle]=\"objExp\">...</some-element>\n * ```\n *\n * \\@description\n *\n * Update an HTML element styles.\n *\n * The styles are updated according to the value of the expression evaluation:\n * - keys are style names with an optional `.<unit>` suffix (ie 'top.px', 'font-style.em'),\n * - values are the values assigned to those properties (expressed in the given unit).\n *\n *\n */\nclass NgStyle {\n    /**\n     * @param {?} _differs\n     * @param {?} _ngEl\n     * @param {?} _renderer\n     */\n    constructor(_differs, _ngEl, _renderer) {\n        this._differs = _differs;\n        this._ngEl = _ngEl;\n        this._renderer = _renderer;\n    }\n    /**\n     * @param {?} values\n     * @return {?}\n     */\n    set ngStyle(values) {\n        this._ngStyle = values;\n        if (!this._differ && values) {\n            this._differ = this._differs.find(values).create();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ) {\n            /** @type {?} */\n            const changes = this._differ.diff(this._ngStyle);\n            if (changes) {\n                this._applyChanges(changes);\n            }\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        changes.forEachRemovedItem((record) => this._setStyle(record.key, null));\n        changes.forEachAddedItem((record) => this._setStyle(record.key, record.currentValue));\n        changes.forEachChangedItem((record) => this._setStyle(record.key, record.currentValue));\n    }\n    /**\n     * @param {?} nameAndUnit\n     * @param {?} value\n     * @return {?}\n     */\n    _setStyle(nameAndUnit, value) {\n        const [name, unit] = nameAndUnit.split('.');\n        value = value != null && unit ? `${value}${unit}` : value;\n        if (value != null) {\n            this._renderer.setStyle(this._ngEl.nativeElement, name, /** @type {?} */ (value));\n        }\n        else {\n            this._renderer.removeStyle(this._ngEl.nativeElement, name);\n        }\n    }\n}\nNgStyle.decorators = [\n    { type: Directive, args: [{ selector: '[ngStyle]' },] }\n];\n/** @nocollapse */\nNgStyle.ctorParameters = () => [\n    { type: KeyValueDiffers },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nNgStyle.propDecorators = {\n    ngStyle: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n *\n * \\@description\n *\n * Inserts an embedded view from a prepared `TemplateRef`.\n *\n * You can attach a context object to the `EmbeddedViewRef` by setting `[ngTemplateOutletContext]`.\n * `[ngTemplateOutletContext]` should be an object, the object's keys will be available for binding\n * by the local template `let` declarations.\n *\n * \\@usageNotes\n * ```\n * <ng-container *ngTemplateOutlet=\"templateRefExp; context: contextExp\"></ng-container>\n * ```\n *\n * Using the key `$implicit` in the context object will set its value as default.\n *\n * ### Example\n *\n * {\\@example common/ngTemplateOutlet/ts/module.ts region='NgTemplateOutlet'}\n *\n */\nclass NgTemplateOutlet {\n    /**\n     * @param {?} _viewContainerRef\n     */\n    constructor(_viewContainerRef) {\n        this._viewContainerRef = _viewContainerRef;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const recreateView = this._shouldRecreateView(changes);\n        if (recreateView) {\n            if (this._viewRef) {\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._viewRef));\n            }\n            if (this.ngTemplateOutlet) {\n                this._viewRef = this._viewContainerRef.createEmbeddedView(this.ngTemplateOutlet, this.ngTemplateOutletContext);\n            }\n        }\n        else {\n            if (this._viewRef && this.ngTemplateOutletContext) {\n                this._updateExistingContext(this.ngTemplateOutletContext);\n            }\n        }\n    }\n    /**\n     * We need to re-create existing embedded view if:\n     * - templateRef has changed\n     * - context has changes\n     *\n     * We mark context object as changed when the corresponding object\n     * shape changes (new properties are added or existing properties are removed).\n     * In other words we consider context with the same properties as \"the same\" even\n     * if object reference changes (see https://github.com/angular/angular/issues/13407).\n     * @param {?} changes\n     * @return {?}\n     */\n    _shouldRecreateView(changes) {\n        /** @type {?} */\n        const ctxChange = changes['ngTemplateOutletContext'];\n        return !!changes['ngTemplateOutlet'] || (ctxChange && this._hasContextShapeChanged(ctxChange));\n    }\n    /**\n     * @param {?} ctxChange\n     * @return {?}\n     */\n    _hasContextShapeChanged(ctxChange) {\n        /** @type {?} */\n        const prevCtxKeys = Object.keys(ctxChange.previousValue || {});\n        /** @type {?} */\n        const currCtxKeys = Object.keys(ctxChange.currentValue || {});\n        if (prevCtxKeys.length === currCtxKeys.length) {\n            for (let propName of currCtxKeys) {\n                if (prevCtxKeys.indexOf(propName) === -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    _updateExistingContext(ctx) {\n        for (let propName of Object.keys(ctx)) {\n            (/** @type {?} */ (this._viewRef.context))[propName] = (/** @type {?} */ (this.ngTemplateOutletContext))[propName];\n        }\n    }\n}\nNgTemplateOutlet.decorators = [\n    { type: Directive, args: [{ selector: '[ngTemplateOutlet]' },] }\n];\n/** @nocollapse */\nNgTemplateOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\nNgTemplateOutlet.propDecorators = {\n    ngTemplateOutletContext: [{ type: Input }],\n    ngTemplateOutlet: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A collection of Angular directives that are likely to be used in each and every Angular\n * application.\n  @type {?} */\nconst COMMON_DIRECTIVES = [\n    NgClass,\n    NgComponentOutlet,\n    NgForOf,\n    NgIf,\n    NgTemplateOutlet,\n    NgStyle,\n    NgSwitch,\n    NgSwitchCase,\n    NgSwitchDefault,\n    NgPlural,\n    NgPluralCase,\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} type\n * @param {?} value\n * @return {?}\n */\nfunction invalidPipeArgumentError(type, value) {\n    return Error(`InvalidPipeArgument: '${value}' for pipe '${ɵstringify(type)}'`);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NumberFormatter {\n    /**\n     * @param {?} num\n     * @param {?} locale\n     * @param {?} style\n     * @param {?=} opts\n     * @return {?}\n     */\n    static format(num, locale, style, opts = {}) {\n        const { minimumIntegerDigits, minimumFractionDigits, maximumFractionDigits, currency, currencyAsSymbol = false } = opts;\n        /** @type {?} */\n        const options = {\n            minimumIntegerDigits,\n            minimumFractionDigits,\n            maximumFractionDigits,\n            style: NumberFormatStyle[style].toLowerCase()\n        };\n        if (style == NumberFormatStyle.Currency) {\n            options.currency = typeof currency == 'string' ? currency : undefined;\n            options.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';\n        }\n        return new Intl.NumberFormat(locale, options).format(num);\n    }\n}\n/** @type {?} */\nconst DATE_FORMATS_SPLIT$1 = /((?:[^yMLdHhmsazZEwGjJ']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|L+|d+|H+|h+|J+|j+|m+|s+|a|z|Z|G+|w+))(.*)/;\n/** @type {?} */\nconst PATTERN_ALIASES = {\n    // Keys are quoted so they do not get renamed during closure compilation.\n    'yMMMdjms': datePartGetterFactory(combine([\n        digitCondition('year', 1),\n        nameCondition('month', 3),\n        digitCondition('day', 1),\n        digitCondition('hour', 1),\n        digitCondition('minute', 1),\n        digitCondition('second', 1),\n    ])),\n    'yMdjm': datePartGetterFactory(combine([\n        digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1),\n        digitCondition('hour', 1), digitCondition('minute', 1)\n    ])),\n    'yMMMMEEEEd': datePartGetterFactory(combine([\n        digitCondition('year', 1), nameCondition('month', 4), nameCondition('weekday', 4),\n        digitCondition('day', 1)\n    ])),\n    'yMMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 4), digitCondition('day', 1)])),\n    'yMMMd': datePartGetterFactory(combine([digitCondition('year', 1), nameCondition('month', 3), digitCondition('day', 1)])),\n    'yMd': datePartGetterFactory(combine([digitCondition('year', 1), digitCondition('month', 1), digitCondition('day', 1)])),\n    'jms': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('second', 1), digitCondition('minute', 1)])),\n    'jm': datePartGetterFactory(combine([digitCondition('hour', 1), digitCondition('minute', 1)]))\n};\n/** @type {?} */\nconst DATE_FORMATS$1 = {\n    // Keys are quoted so they do not get renamed.\n    'yyyy': datePartGetterFactory(digitCondition('year', 4)),\n    'yy': datePartGetterFactory(digitCondition('year', 2)),\n    'y': datePartGetterFactory(digitCondition('year', 1)),\n    'MMMM': datePartGetterFactory(nameCondition('month', 4)),\n    'MMM': datePartGetterFactory(nameCondition('month', 3)),\n    'MM': datePartGetterFactory(digitCondition('month', 2)),\n    'M': datePartGetterFactory(digitCondition('month', 1)),\n    'LLLL': datePartGetterFactory(nameCondition('month', 4)),\n    'L': datePartGetterFactory(nameCondition('month', 1)),\n    'dd': datePartGetterFactory(digitCondition('day', 2)),\n    'd': datePartGetterFactory(digitCondition('day', 1)),\n    'HH': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), false)))),\n    'H': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), false))),\n    'hh': digitModifier(hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 2), true)))),\n    'h': hourExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'jj': datePartGetterFactory(digitCondition('hour', 2)),\n    'j': datePartGetterFactory(digitCondition('hour', 1)),\n    'mm': digitModifier(datePartGetterFactory(digitCondition('minute', 2))),\n    'm': datePartGetterFactory(digitCondition('minute', 1)),\n    'ss': digitModifier(datePartGetterFactory(digitCondition('second', 2))),\n    's': datePartGetterFactory(digitCondition('second', 1)),\n    // while ISO 8601 requires fractions to be prefixed with `.` or `,`\n    // we can be just safely rely on using `sss` since we currently don't support single or two digit\n    // fractions\n    'sss': datePartGetterFactory(digitCondition('second', 3)),\n    'EEEE': datePartGetterFactory(nameCondition('weekday', 4)),\n    'EEE': datePartGetterFactory(nameCondition('weekday', 3)),\n    'EE': datePartGetterFactory(nameCondition('weekday', 2)),\n    'E': datePartGetterFactory(nameCondition('weekday', 1)),\n    'a': hourClockExtractor(datePartGetterFactory(hour12Modify(digitCondition('hour', 1), true))),\n    'Z': timeZoneGetter$1('short'),\n    'z': timeZoneGetter$1('long'),\n    'ww': datePartGetterFactory({}),\n    // Week of year, padded (00-53). Week 01 is the week with the\n    // first Thursday of the year. not support ?\n    'w': datePartGetterFactory({}),\n    // Week of year (0-53). Week 1 is the week with the first Thursday\n    // of the year not support ?\n    'G': datePartGetterFactory(nameCondition('era', 1)),\n    'GG': datePartGetterFactory(nameCondition('era', 2)),\n    'GGG': datePartGetterFactory(nameCondition('era', 3)),\n    'GGGG': datePartGetterFactory(nameCondition('era', 4))\n};\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction digitModifier(inner) {\n    return function (date, locale) {\n        /** @type {?} */\n        const result = inner(date, locale);\n        return result.length == 1 ? '0' + result : result;\n    };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourClockExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[1]; };\n}\n/**\n * @param {?} inner\n * @return {?}\n */\nfunction hourExtractor(inner) {\n    return function (date, locale) { return inner(date, locale).split(' ')[0]; };\n}\n/**\n * @param {?} date\n * @param {?} locale\n * @param {?} options\n * @return {?}\n */\nfunction intlDateFormat(date, locale, options) {\n    return new Intl.DateTimeFormat(locale, options).format(date).replace(/[\\u200e\\u200f]/g, '');\n}\n/**\n * @param {?} timezone\n * @return {?}\n */\nfunction timeZoneGetter$1(timezone) {\n    /** @type {?} */\n    const options = { hour: '2-digit', hour12: false, timeZoneName: timezone };\n    return function (date, locale) {\n        /** @type {?} */\n        const result = intlDateFormat(date, locale, options);\n        // Then extract first 3 letters that related to hours\n        return result ? result.substring(3) : '';\n    };\n}\n/**\n * @param {?} options\n * @param {?} value\n * @return {?}\n */\nfunction hour12Modify(options, value) {\n    options.hour12 = value;\n    return options;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction digitCondition(prop, len) {\n    /** @type {?} */\n    const result = {};\n    result[prop] = len === 2 ? '2-digit' : 'numeric';\n    return result;\n}\n/**\n * @param {?} prop\n * @param {?} len\n * @return {?}\n */\nfunction nameCondition(prop, len) {\n    /** @type {?} */\n    const result = {};\n    if (len < 4) {\n        result[prop] = len > 1 ? 'short' : 'narrow';\n    }\n    else {\n        result[prop] = 'long';\n    }\n    return result;\n}\n/**\n * @param {?} options\n * @return {?}\n */\nfunction combine(options) {\n    return options.reduce((merged, opt) => (Object.assign({}, merged, opt)), {});\n}\n/**\n * @param {?} ret\n * @return {?}\n */\nfunction datePartGetterFactory(ret) {\n    return (date, locale) => intlDateFormat(date, locale, ret);\n}\n/** @type {?} */\nconst DATE_FORMATTER_CACHE = new Map();\n/**\n * @param {?} format\n * @param {?} date\n * @param {?} locale\n * @return {?}\n */\nfunction dateFormatter(format, date, locale) {\n    /** @type {?} */\n    const fn = PATTERN_ALIASES[format];\n    if (fn)\n        return fn(date, locale);\n    /** @type {?} */\n    const cacheKey = format;\n    /** @type {?} */\n    let parts = DATE_FORMATTER_CACHE.get(cacheKey);\n    if (!parts) {\n        parts = [];\n        /** @type {?} */\n        let match;\n        DATE_FORMATS_SPLIT$1.exec(format);\n        /** @type {?} */\n        let _format = format;\n        while (_format) {\n            match = DATE_FORMATS_SPLIT$1.exec(_format);\n            if (match) {\n                parts = parts.concat(match.slice(1));\n                _format = /** @type {?} */ ((parts.pop()));\n            }\n            else {\n                parts.push(_format);\n                _format = null;\n            }\n        }\n        DATE_FORMATTER_CACHE.set(cacheKey, parts);\n    }\n    return parts.reduce((text, part) => {\n        /** @type {?} */\n        const fn = DATE_FORMATS$1[part];\n        return text + (fn ? fn(date, locale) : partToTime(part));\n    }, '');\n}\n/**\n * @param {?} part\n * @return {?}\n */\nfunction partToTime(part) {\n    return part === '\\'\\'' ? '\\'' : part.replace(/(^'|'$)/g, '').replace(/''/g, '\\'');\n}\nclass DateFormatter$1 {\n    /**\n     * @param {?} date\n     * @param {?} locale\n     * @param {?} pattern\n     * @return {?}\n     */\n    static format(date, locale, pattern) {\n        return dateFormatter(pattern, date, locale);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a date according to locale rules.\n *\n * Where:\n * - `expression` is a date object or a number (milliseconds since UTC epoch) or an ISO string\n * (https://www.w3.org/TR/NOTE-datetime).\n * - `format` indicates which date/time components to include. The format can be predefined as\n *   shown below or custom as shown in the table.\n *   - `'medium'`: equivalent to `'yMMMdjms'` (e.g. `Sep 3, 2010, 12:05:08 PM` for `en-US`)\n *   - `'short'`: equivalent to `'yMdjm'` (e.g. `9/3/2010, 12:05 PM` for `en-US`)\n *   - `'fullDate'`: equivalent to `'yMMMMEEEEd'` (e.g. `Friday, September 3, 2010` for `en-US`)\n *   - `'longDate'`: equivalent to `'yMMMMd'` (e.g. `September 3, 2010` for `en-US`)\n *   - `'mediumDate'`: equivalent to `'yMMMd'` (e.g. `Sep 3, 2010` for `en-US`)\n *   - `'shortDate'`: equivalent to `'yMd'` (e.g. `9/3/2010` for `en-US`)\n *   - `'mediumTime'`: equivalent to `'jms'` (e.g. `12:05:08 PM` for `en-US`)\n *   - `'shortTime'`: equivalent to `'jm'` (e.g. `12:05 PM` for `en-US`)\n *\n *\n *  | Component | Symbol | Narrow | Short Form   | Long Form         | Numeric   | 2-digit   |\n *  |-----------|:------:|--------|--------------|-------------------|-----------|-----------|\n *  | era       |   G    | G (A)  | GGG (AD)     | GGGG (Anno Domini)| -         | -         |\n *  | year      |   y    | -      | -            | -                 | y (2015)  | yy (15)   |\n *  | month     |   M    | L (S)  | MMM (Sep)    | MMMM (September)  | M (9)     | MM (09)   |\n *  | day       |   d    | -      | -            | -                 | d (3)     | dd (03)   |\n *  | weekday   |   E    | E (S)  | EEE (Sun)    | EEEE (Sunday)     | -         | -         |\n *  | hour      |   j    | -      | -            | -                 | j (13)    | jj (13)   |\n *  | hour12    |   h    | -      | -            | -                 | h (1 PM)  | hh (01 PM)|\n *  | hour24    |   H    | -      | -            | -                 | H (13)    | HH (13)   |\n *  | minute    |   m    | -      | -            | -                 | m (5)     | mm (05)   |\n *  | second    |   s    | -      | -            | -                 | s (9)     | ss (09)   |\n *  | timezone  |   z    | -      | -            | z (Pacific Standard Time)| -  | -         |\n *  | timezone  |   Z    | -      | Z (GMT-8:00) | -                 | -         | -         |\n *  | timezone  |   a    | -      | a (PM)       | -                 | -         | -         |\n *\n * In javascript, only the components specified will be respected (not the ordering,\n * punctuations, ...) and details of the formatting will be dependent on the locale.\n *\n * Timezone of the formatted text will be the local system timezone of the end-user's machine.\n *\n * When the expression is a ISO string without time (e.g. 2016-09-19) the time zone offset is not\n * applied and the formatted text will have the same day, month and year of the expression.\n *\n * WARNINGS:\n * - this pipe is marked as pure hence it will not be re-evaluated when the input is mutated.\n *   Instead users should treat the date as an immutable object and change the reference when the\n *   pipe needs to re-run (this is to avoid reformatting the date on every change detection run\n *   which would be an expensive operation).\n * - this pipe uses the Internationalization API. Therefore it is only reliable in Chrome and Opera\n *   browsers.\n *\n * \\@usageNotes\n *\n * ### Examples\n *\n * Assuming `dateObj` is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08)\n * in the _local_ time and locale is 'en-US':\n *\n * {\\@example common/pipes/ts/date_pipe.ts region='DeprecatedDatePipe'}\n *\n *\n */\nclass DeprecatedDatePipe {\n    /**\n     * @param {?} _locale\n     */\n    constructor(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} pattern\n     * @return {?}\n     */\n    transform(value, pattern = 'mediumDate') {\n        if (value == null || value === '' || value !== value)\n            return null;\n        /** @type {?} */\n        let date;\n        if (typeof value === 'string') {\n            value = value.trim();\n        }\n        if (isDate$1(value)) {\n            date = value;\n        }\n        else if (!isNaN(value - parseFloat(value))) {\n            date = new Date(parseFloat(value));\n        }\n        else if (typeof value === 'string' && /^(\\d{4}-\\d{1,2}-\\d{1,2})$/.test(value)) {\n            const [y, m, d] = value.split('-').map((val) => parseInt(val, 10));\n            date = new Date(y, m - 1, d);\n        }\n        else {\n            date = new Date(value);\n        }\n        if (!isDate$1(date)) {\n            /** @type {?} */\n            let match;\n            if ((typeof value === 'string') && (match = value.match(ISO8601_DATE_REGEX))) {\n                date = isoStringToDate(match);\n            }\n            else {\n                throw invalidPipeArgumentError(DeprecatedDatePipe, value);\n            }\n        }\n        return DateFormatter$1.format(date, this._locale, DeprecatedDatePipe._ALIASES[pattern] || pattern);\n    }\n}\n/**\n * \\@internal\n */\nDeprecatedDatePipe._ALIASES = {\n    'medium': 'yMMMdjms',\n    'short': 'yMdjm',\n    'fullDate': 'yMMMMEEEEd',\n    'longDate': 'yMMMMd',\n    'mediumDate': 'yMMMd',\n    'shortDate': 'yMd',\n    'mediumTime': 'jms',\n    'shortTime': 'jm'\n};\nDeprecatedDatePipe.decorators = [\n    { type: Pipe, args: [{ name: 'date', pure: true },] }\n];\n/** @nocollapse */\nDeprecatedDatePipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDate$1(value) {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} pipe\n * @param {?} locale\n * @param {?} value\n * @param {?} style\n * @param {?=} digits\n * @param {?=} currency\n * @param {?=} currencyAsSymbol\n * @return {?}\n */\nfunction formatNumber$1(pipe, locale, value, style, digits, currency = null, currencyAsSymbol = false) {\n    if (value == null)\n        return null;\n    // Convert strings to numbers\n    value = typeof value === 'string' && !isNaN(+value - parseFloat(value)) ? +value : value;\n    if (typeof value !== 'number') {\n        throw invalidPipeArgumentError(pipe, value);\n    }\n    /** @type {?} */\n    let minInt;\n    /** @type {?} */\n    let minFraction;\n    /** @type {?} */\n    let maxFraction;\n    if (style !== NumberFormatStyle.Currency) {\n        // rely on Intl default for currency\n        minInt = 1;\n        minFraction = 0;\n        maxFraction = 3;\n    }\n    if (digits) {\n        /** @type {?} */\n        const parts = digits.match(NUMBER_FORMAT_REGEXP);\n        if (parts === null) {\n            throw new Error(`${digits} is not a valid digit info for number pipes`);\n        }\n        if (parts[1] != null) { // min integer digits\n            // min integer digits\n            minInt = parseIntAutoRadix(parts[1]);\n        }\n        if (parts[3] != null) { // min fraction digits\n            // min fraction digits\n            minFraction = parseIntAutoRadix(parts[3]);\n        }\n        if (parts[5] != null) { // max fraction digits\n            // max fraction digits\n            maxFraction = parseIntAutoRadix(parts[5]);\n        }\n    }\n    return NumberFormatter.format(/** @type {?} */ (value), locale, style, {\n        minimumIntegerDigits: minInt,\n        minimumFractionDigits: minFraction,\n        maximumFractionDigits: maxFraction,\n        currency: currency,\n        currencyAsSymbol: currencyAsSymbol,\n    });\n}\n/**\n * Formats a number as text. Group sizing and separator and other locale-specific\n * configurations are based on the active locale.\n *\n * where `expression` is a number:\n *  - `digitInfo` is a `string` which has a following format: <br>\n *     <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>\n *   - `minIntegerDigits` is the minimum number of integer digits to use. Defaults to `1`.\n *   - `minFractionDigits` is the minimum number of digits after fraction. Defaults to `0`.\n *   - `maxFractionDigits` is the maximum number of digits after fraction. Defaults to `3`.\n *\n * For more information on the acceptable range for each of these numbers and other\n * details see your native internationalization library.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/number_pipe.ts region='DeprecatedNumberPipe'}\n *\n * \\@ngModule CommonModule\n */\nclass DeprecatedDecimalPipe {\n    /**\n     * @param {?} _locale\n     */\n    constructor(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} digits\n     * @return {?}\n     */\n    transform(value, digits) {\n        return formatNumber$1(DeprecatedDecimalPipe, this._locale, value, NumberFormatStyle.Decimal, digits);\n    }\n}\nDeprecatedDecimalPipe.decorators = [\n    { type: Pipe, args: [{ name: 'number' },] }\n];\n/** @nocollapse */\nDeprecatedDecimalPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/**\n * \\@ngModule CommonModule\n *\n * \\@description\n *\n * Formats a number as percentage according to locale rules.\n *\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/percent_pipe.ts region='DeprecatedPercentPipe'}\n *\n *\n */\nclass DeprecatedPercentPipe {\n    /**\n     * @param {?} _locale\n     */\n    constructor(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} digits\n     * @return {?}\n     */\n    transform(value, digits) {\n        return formatNumber$1(DeprecatedPercentPipe, this._locale, value, NumberFormatStyle.Percent, digits);\n    }\n}\nDeprecatedPercentPipe.decorators = [\n    { type: Pipe, args: [{ name: 'percent' },] }\n];\n/** @nocollapse */\nDeprecatedPercentPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a number as currency using locale rules.\n *\n * Use `currency` to format a number as currency.\n *\n * - `currencyCode` is the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code, such\n *    as `USD` for the US dollar and `EUR` for the euro.\n * - `symbolDisplay` is a boolean indicating whether to use the currency symbol or code.\n *   - `true`: use symbol (e.g. `$`).\n *   - `false`(default): use code (e.g. `USD`).\n * - `digitInfo` See {\\@link DecimalPipe} for detailed description.\n *\n * WARNING: this pipe uses the Internationalization API which is not yet available in all browsers\n * and may require a polyfill. See [Browser Support](guide/browser-support) for details.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/currency_pipe.ts region='DeprecatedCurrencyPipe'}\n *\n *\n */\nclass DeprecatedCurrencyPipe {\n    /**\n     * @param {?} _locale\n     */\n    constructor(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value\n     * @param {?=} currencyCode\n     * @param {?=} symbolDisplay\n     * @param {?=} digits\n     * @return {?}\n     */\n    transform(value, currencyCode = 'USD', symbolDisplay = false, digits) {\n        return formatNumber$1(DeprecatedCurrencyPipe, this._locale, value, NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);\n    }\n}\nDeprecatedCurrencyPipe.decorators = [\n    { type: Pipe, args: [{ name: 'currency' },] }\n];\n/** @nocollapse */\nDeprecatedCurrencyPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A collection of deprecated i18n pipes that require intl api\n *\n * @deprecated from v5\n  @type {?} */\nconst COMMON_DEPRECATED_I18N_PIPES = [DeprecatedDecimalPipe, DeprecatedPercentPipe, DeprecatedCurrencyPipe, DeprecatedDatePipe];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ObservableStrategy {\n    /**\n     * @param {?} async\n     * @param {?} updateLatestValue\n     * @return {?}\n     */\n    createSubscription(async, updateLatestValue) {\n        return async.subscribe({ next: updateLatestValue, error: (e) => { throw e; } });\n    }\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    dispose(subscription) { subscription.unsubscribe(); }\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    onDestroy(subscription) { subscription.unsubscribe(); }\n}\nclass PromiseStrategy {\n    /**\n     * @param {?} async\n     * @param {?} updateLatestValue\n     * @return {?}\n     */\n    createSubscription(async, updateLatestValue) {\n        return async.then(updateLatestValue, e => { throw e; });\n    }\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    dispose(subscription) { }\n    /**\n     * @param {?} subscription\n     * @return {?}\n     */\n    onDestroy(subscription) { }\n}\n/** @type {?} */\nconst _promiseStrategy = new PromiseStrategy();\n/** @type {?} */\nconst _observableStrategy = new ObservableStrategy();\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Unwraps a value from an asynchronous primitive.\n *\n * The `async` pipe subscribes to an `Observable` or `Promise` and returns the latest value it has\n * emitted. When a new value is emitted, the `async` pipe marks the component to be checked for\n * changes. When the component gets destroyed, the `async` pipe unsubscribes automatically to avoid\n * potential memory leaks.\n *\n * \\@usageNotes\n *\n * ### Examples\n *\n * This example binds a `Promise` to the view. Clicking the `Resolve` button resolves the\n * promise.\n *\n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipePromise'}\n *\n * It's also possible to use `async` with Observables. The example below binds the `time` Observable\n * to the view. The Observable continuously updates the view with the current time.\n *\n * {\\@example common/pipes/ts/async_pipe.ts region='AsyncPipeObservable'}\n *\n */\nclass AsyncPipe {\n    /**\n     * @param {?} _ref\n     */\n    constructor(_ref) {\n        this._ref = _ref;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n        this._strategy = /** @type {?} */ ((null));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    transform(obj) {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.transform(/** @type {?} */ (obj));\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _subscribe(obj) {\n        this._obj = obj;\n        this._strategy = this._selectStrategy(obj);\n        this._subscription = this._strategy.createSubscription(obj, (value) => this._updateLatestValue(obj, value));\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _selectStrategy(obj) {\n        if (ɵisPromise(obj)) {\n            return _promiseStrategy;\n        }\n        if (ɵisObservable(obj)) {\n            return _observableStrategy;\n        }\n        throw invalidPipeArgumentError(AsyncPipe, obj);\n    }\n    /**\n     * @return {?}\n     */\n    _dispose() {\n        this._strategy.dispose(/** @type {?} */ ((this._subscription)));\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n    /**\n     * @param {?} async\n     * @param {?} value\n     * @return {?}\n     */\n    _updateLatestValue(async, value) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\nAsyncPipe.decorators = [\n    { type: Pipe, args: [{ name: 'async', pure: false },] }\n];\n/** @nocollapse */\nAsyncPipe.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Transforms text to all lower case.\n *\n * @see `UpperCasePipe`\n * @see `TitleCasePipe`\n * \\@usageNotes\n *\n * The following example defines a view that allows the user to enter\n * text, and then uses the pipe to convert the input text to all lower case.\n *\n * <code-example path=\"common/pipes/ts/lowerupper_pipe.ts\" region='LowerUpperPipe'></code-example>\n *\n * \\@ngModule CommonModule\n */\nclass LowerCasePipe {\n    /**\n     * @param {?} value The string to transform to lower case.\n     * @return {?}\n     */\n    transform(value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(LowerCasePipe, value);\n        }\n        return value.toLowerCase();\n    }\n}\nLowerCasePipe.decorators = [\n    { type: Pipe, args: [{ name: 'lowercase' },] }\n];\n/** @type {?} */\nconst unicodeWordMatch = /(?:[A-Za-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF40\\uDF42-\\uDF49\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D])\\S*/g;\n/**\n * Transforms text to title case.\n * Capitalizes the first letter of each word, and transforms the\n * rest of the word to lower case.\n * Words are delimited by any whitespace character, such as a space, tab, or line-feed character.\n *\n * @see `LowerCasePipe`\n * @see `UpperCasePipe`\n *\n * \\@usageNotes\n * The following example shows the result of transforming various strings into title case.\n *\n * <code-example path=\"common/pipes/ts/titlecase_pipe.ts\" region='TitleCasePipe'></code-example>\n *\n * \\@ngModule CommonModule\n */\nclass TitleCasePipe {\n    /**\n     * @param {?} value The string to transform to title case.\n     * @return {?}\n     */\n    transform(value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(TitleCasePipe, value);\n        }\n        return value.replace(unicodeWordMatch, (txt => txt[0].toUpperCase() + txt.substr(1).toLowerCase()));\n    }\n}\nTitleCasePipe.decorators = [\n    { type: Pipe, args: [{ name: 'titlecase' },] }\n];\n/**\n * Transforms text to all upper case.\n * @see `LowerCasePipe`\n * @see `TitleCasePipe`\n *\n * \\@ngModule CommonModule\n */\nclass UpperCasePipe {\n    /**\n     * @param {?} value The string to transform to upper case.\n     * @return {?}\n     */\n    transform(value) {\n        if (!value)\n            return value;\n        if (typeof value !== 'string') {\n            throw invalidPipeArgumentError(UpperCasePipe, value);\n        }\n        return value.toUpperCase();\n    }\n}\nUpperCasePipe.decorators = [\n    { type: Pipe, args: [{ name: 'uppercase' },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Formats a date value according to locale rules.\n *\n * Only the `en-US` locale data comes with Angular. To localize dates\n * in another language, you must import the corresponding locale data.\n * See the [I18n guide](guide/i18n#i18n-pipes) for more information.\n *\n * @see `formatDate()`\n *\n *\n * \\@usageNotes\n *\n * The result of this pipe is not reevaluated when the input is mutated. To avoid the need to\n * reformat the date on every change-detection cycle, treat the date as an immutable object\n * and change the reference when the pipe needs to run again.\n *\n * ### Pre-defined format options\n *\n * Examples are given in `en-US` locale.\n *\n * - `'short'`: equivalent to `'M/d/yy, h:mm a'` (`6/15/15, 9:03 AM`).\n * - `'medium'`: equivalent to `'MMM d, y, h:mm:ss a'` (`Jun 15, 2015, 9:03:01 AM`).\n * - `'long'`: equivalent to `'MMMM d, y, h:mm:ss a z'` (`June 15, 2015 at 9:03:01 AM\n * GMT+1`).\n * - `'full'`: equivalent to `'EEEE, MMMM d, y, h:mm:ss a zzzz'` (`Monday, June 15, 2015 at\n * 9:03:01 AM GMT+01:00`).\n * - `'shortDate'`: equivalent to `'M/d/yy'` (`6/15/15`).\n * - `'mediumDate'`: equivalent to `'MMM d, y'` (`Jun 15, 2015`).\n * - `'longDate'`: equivalent to `'MMMM d, y'` (`June 15, 2015`).\n * - `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` (`Monday, June 15, 2015`).\n * - `'shortTime'`: equivalent to `'h:mm a'` (`9:03 AM`).\n * - `'mediumTime'`: equivalent to `'h:mm:ss a'` (`9:03:01 AM`).\n * - `'longTime'`: equivalent to `'h:mm:ss a z'` (`9:03:01 AM GMT+1`).\n * - `'fullTime'`: equivalent to `'h:mm:ss a zzzz'` (`9:03:01 AM GMT+01:00`).\n *\n * ### Custom format options\n *\n * You can construct a format string using symbols to specify the components\n * of a date-time value, as described in the following table.\n * Format details depend on the locale.\n * Fields marked with (*) are only available in the extra data set for the given locale.\n *\n *  | Field type         | Format      | Description                                                   | Example Value                                              |\n *  |--------------------|-------------|---------------------------------------------------------------|------------------------------------------------------------|\n *  | Era                | G, GG & GGG | Abbreviated                                                   | AD                                                         |\n *  |                    | GGGG        | Wide                                                          | Anno Domini                                                |\n *  |                    | GGGGG       | Narrow                                                        | A                                                          |\n *  | Year               | y           | Numeric: minimum digits                                       | 2, 20, 201, 2017, 20173                                    |\n *  |                    | yy          | Numeric: 2 digits + zero padded                               | 02, 20, 01, 17, 73                                         |\n *  |                    | yyy         | Numeric: 3 digits + zero padded                               | 002, 020, 201, 2017, 20173                                 |\n *  |                    | yyyy        | Numeric: 4 digits or more + zero padded                       | 0002, 0020, 0201, 2017, 20173                              |\n *  | Month              | M           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | MM          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | MMM         | Abbreviated                                                   | Sep                                                        |\n *  |                    | MMMM        | Wide                                                          | September                                                  |\n *  |                    | MMMMM       | Narrow                                                        | S                                                          |\n *  | Month standalone   | L           | Numeric: 1 digit                                              | 9, 12                                                      |\n *  |                    | LL          | Numeric: 2 digits + zero padded                               | 09, 12                                                     |\n *  |                    | LLL         | Abbreviated                                                   | Sep                                                        |\n *  |                    | LLLL        | Wide                                                          | September                                                  |\n *  |                    | LLLLL       | Narrow                                                        | S                                                          |\n *  | Week of year       | w           | Numeric: minimum digits                                       | 1... 53                                                    |\n *  |                    | ww          | Numeric: 2 digits + zero padded                               | 01... 53                                                   |\n *  | Week of month      | W           | Numeric: 1 digit                                              | 1... 5                                                     |\n *  | Day of month       | d           | Numeric: minimum digits                                       | 1                                                          |\n *  |                    | dd          | Numeric: 2 digits + zero padded                               | 01                                                          |\n *  | Week day           | E, EE & EEE | Abbreviated                                                   | Tue                                                        |\n *  |                    | EEEE        | Wide                                                          | Tuesday                                                    |\n *  |                    | EEEEE       | Narrow                                                        | T                                                          |\n *  |                    | EEEEEE      | Short                                                         | Tu                                                         |\n *  | Period             | a, aa & aaa | Abbreviated                                                   | am/pm or AM/PM                                             |\n *  |                    | aaaa        | Wide (fallback to `a` when missing)                           | ante meridiem/post meridiem                                |\n *  |                    | aaaaa       | Narrow                                                        | a/p                                                        |\n *  | Period*            | B, BB & BBB | Abbreviated                                                   | mid.                                                       |\n *  |                    | BBBB        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | BBBBB       | Narrow                                                        | md                                                         |\n *  | Period standalone* | b, bb & bbb | Abbreviated                                                   | mid.                                                       |\n *  |                    | bbbb        | Wide                                                          | am, pm, midnight, noon, morning, afternoon, evening, night |\n *  |                    | bbbbb       | Narrow                                                        | md                                                         |\n *  | Hour 1-12          | h           | Numeric: minimum digits                                       | 1, 12                                                      |\n *  |                    | hh          | Numeric: 2 digits + zero padded                               | 01, 12                                                     |\n *  | Hour 0-23          | H           | Numeric: minimum digits                                       | 0, 23                                                      |\n *  |                    | HH          | Numeric: 2 digits + zero padded                               | 00, 23                                                     |\n *  | Minute             | m           | Numeric: minimum digits                                       | 8, 59                                                      |\n *  |                    | mm          | Numeric: 2 digits + zero padded                               | 08, 59                                                     |\n *  | Second             | s           | Numeric: minimum digits                                       | 0... 59                                                    |\n *  |                    | ss          | Numeric: 2 digits + zero padded                               | 00... 59                                                   |\n *  | Fractional seconds | S           | Numeric: 1 digit                                              | 0... 9                                                     |\n *  |                    | SS          | Numeric: 2 digits + zero padded                               | 00... 99                                                   |\n *  |                    | SSS         | Numeric: 3 digits + zero padded (= milliseconds)              | 000... 999                                                 |\n *  | Zone               | z, zz & zzz | Short specific non location format (fallback to O)            | GMT-8                                                      |\n *  |                    | zzzz        | Long specific non location format (fallback to OOOO)          | GMT-08:00                                                  |\n *  |                    | Z, ZZ & ZZZ | ISO8601 basic format                                          | -0800                                                      |\n *  |                    | ZZZZ        | Long localized GMT format                                     | GMT-8:00                                                   |\n *  |                    | ZZZZZ       | ISO8601 extended format + Z indicator for offset 0 (= XXXXX)  | -08:00                                                     |\n *  |                    | O, OO & OOO | Short localized GMT format                                    | GMT-8                                                      |\n *  |                    | OOOO        | Long localized GMT format                                     | GMT-08:00                                                  |\n *\n * Note that timezone correction is not applied to an ISO string that has no time component, such as \"2016-09-19\"\n *\n * ### Format examples\n *\n * These examples transform a date into various formats,\n * assuming that `dateObj` is a JavaScript `Date` object for\n * year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11,\n * given in the local time for the `en-US` locale.\n *\n * ```\n * {{ dateObj | date }}               // output is 'Jun 15, 2015'\n * {{ dateObj | date:'medium' }}      // output is 'Jun 15, 2015, 9:43:11 PM'\n * {{ dateObj | date:'shortTime' }}   // output is '9:43 PM'\n * {{ dateObj | date:'mmss' }}        // output is '43:11'\n * ```\n *\n * ### Usage example\n *\n * The following component uses a date pipe to display the current date in different formats.\n *\n * ```\n * \\@Component({\n *  selector: 'date-pipe',\n *  template: `<div>\n *    <p>Today is {{today | date}}</p>\n *    <p>Or if you prefer, {{today | date:'fullDate'}}</p>\n *    <p>The time is {{today | date:'h:mm a z'}}</p>\n *  </div>`\n * })\n * // Get the current date and time as a date-time value.\n * export class DatePipeComponent {\n *   today: number = Date.now();\n * }\n * ```\n *\n */\nclass DatePipe {\n    /**\n     * @param {?} locale\n     */\n    constructor(locale) {\n        this.locale = locale;\n    }\n    /**\n     * @param {?} value The date expression: a `Date` object,  a number\n     * (milliseconds since UTC epoch), or an ISO string (https://www.w3.org/TR/NOTE-datetime).\n     * @param {?=} format The date/time components to include, using predefined options or a\n     * custom format string.\n     * @param {?=} timezone A timezone offset (such as `'+0430'`), or a standard\n     * UTC/GMT or continental US timezone abbreviation. Default is\n     * the local system timezone of the end-user's machine.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?} A date string in the desired format.\n     */\n    transform(value, format = 'mediumDate', timezone, locale) {\n        if (value == null || value === '' || value !== value)\n            return null;\n        try {\n            return formatDate(value, format, locale || this.locale, timezone);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DatePipe, error.message);\n        }\n    }\n}\nDatePipe.decorators = [\n    { type: Pipe, args: [{ name: 'date', pure: true },] }\n];\n/** @nocollapse */\nDatePipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _INTERPOLATION_REGEXP = /#/g;\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Maps a value to a string that pluralizes the value according to locale rules.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nPluralPipeComponent'}\n *\n * \\@experimental\n */\nclass I18nPluralPipe {\n    /**\n     * @param {?} _localization\n     */\n    constructor(_localization) {\n        this._localization = _localization;\n    }\n    /**\n     * @param {?} value the number to be formatted\n     * @param {?} pluralMap an object that mimics the ICU format, see\n     * http://userguide.icu-project.org/formatparse/messages.\n     * @param {?=} locale a `string` defining the locale to use (uses the current {\\@link LOCALE_ID} by\n     * default).\n     * @return {?}\n     */\n    transform(value, pluralMap, locale) {\n        if (value == null)\n            return '';\n        if (typeof pluralMap !== 'object' || pluralMap === null) {\n            throw invalidPipeArgumentError(I18nPluralPipe, pluralMap);\n        }\n        /** @type {?} */\n        const key = getPluralCategory(value, Object.keys(pluralMap), this._localization, locale);\n        return pluralMap[key].replace(_INTERPOLATION_REGEXP, value.toString());\n    }\n}\nI18nPluralPipe.decorators = [\n    { type: Pipe, args: [{ name: 'i18nPlural', pure: true },] }\n];\n/** @nocollapse */\nI18nPluralPipe.ctorParameters = () => [\n    { type: NgLocalization }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Generic selector that displays the string that matches the current value.\n *\n * If none of the keys of the `mapping` match the `value`, then the content\n * of the `other` key is returned when present, otherwise an empty string is returned.\n *\n * \\@usageNotes\n *\n * ### Example\n *\n * {\\@example common/pipes/ts/i18n_pipe.ts region='I18nSelectPipeComponent'}\n *\n * \\@experimental\n */\nclass I18nSelectPipe {\n    /**\n     * @param {?} value a string to be internationalized.\n     * @param {?} mapping an object that indicates the text that should be displayed\n     * for different values of the provided `value`.\n     * @return {?}\n     */\n    transform(value, mapping) {\n        if (value == null)\n            return '';\n        if (typeof mapping !== 'object' || typeof value !== 'string') {\n            throw invalidPipeArgumentError(I18nSelectPipe, mapping);\n        }\n        if (mapping.hasOwnProperty(value)) {\n            return mapping[value];\n        }\n        if (mapping.hasOwnProperty('other')) {\n            return mapping['other'];\n        }\n        return '';\n    }\n}\nI18nSelectPipe.decorators = [\n    { type: Pipe, args: [{ name: 'i18nSelect', pure: true },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Converts a value into its JSON-format representation.  Useful for debugging.\n *\n * \\@usageNotes\n *\n * The following component uses a JSON pipe to convert an object\n * to JSON format, and displays the string in both formats for comparison.\n *\n * {\\@example common/pipes/ts/json_pipe.ts region='JsonPipe'}\n *\n */\nclass JsonPipe {\n    /**\n     * @param {?} value A value of any type to convert into a JSON-format string.\n     * @return {?}\n     */\n    transform(value) { return JSON.stringify(value, null, 2); }\n}\nJsonPipe.decorators = [\n    { type: Pipe, args: [{ name: 'json', pure: false },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @template K, V\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nfunction makeKeyValuePair(key, value) {\n    return { key: key, value: value };\n}\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Transforms Object or Map into an array of key value pairs.\n *\n * The output array will be ordered by keys.\n * By default the comparator will be by Unicode point value.\n * You can optionally pass a compareFn if your keys are complex types.\n *\n * \\@usageNotes\n * ### Examples\n *\n * This examples show how an Object or a Map and be iterated by ngFor with the use of this keyvalue\n * pipe.\n *\n * {\\@example common/pipes/ts/keyvalue_pipe.ts region='KeyValuePipe'}\n */\nclass KeyValuePipe {\n    /**\n     * @param {?} differs\n     */\n    constructor(differs) {\n        this.differs = differs;\n    }\n    /**\n     * @template K, V\n     * @param {?} input\n     * @param {?=} compareFn\n     * @return {?}\n     */\n    transform(input, compareFn = defaultComparator) {\n        if (!input || (!(input instanceof Map) && typeof input !== 'object')) {\n            return null;\n        }\n        if (!this.differ) {\n            // make a differ for whatever type we've been passed in\n            this.differ = this.differs.find(input).create();\n        }\n        /** @type {?} */\n        const differChanges = this.differ.diff(/** @type {?} */ (input));\n        if (differChanges) {\n            this.keyValues = [];\n            differChanges.forEachItem((r) => {\n                this.keyValues.push(makeKeyValuePair(r.key, /** @type {?} */ ((r.currentValue))));\n            });\n            this.keyValues.sort(compareFn);\n        }\n        return this.keyValues;\n    }\n}\nKeyValuePipe.decorators = [\n    { type: Pipe, args: [{ name: 'keyvalue', pure: false },] }\n];\n/** @nocollapse */\nKeyValuePipe.ctorParameters = () => [\n    { type: KeyValueDiffers }\n];\n/**\n * @template K, V\n * @param {?} keyValueA\n * @param {?} keyValueB\n * @return {?}\n */\nfunction defaultComparator(keyValueA, keyValueB) {\n    /** @type {?} */\n    const a = keyValueA.key;\n    /** @type {?} */\n    const b = keyValueB.key;\n    // if same exit with 0;\n    if (a === b)\n        return 0;\n    // make sure that undefined are at the end of the sort.\n    if (a === undefined)\n        return 1;\n    if (b === undefined)\n        return -1;\n    // make sure that nulls are at the end of the sort.\n    if (a === null)\n        return 1;\n    if (b === null)\n        return -1;\n    if (typeof a == 'string' && typeof b == 'string') {\n        return a < b ? -1 : 1;\n    }\n    if (typeof a == 'number' && typeof b == 'number') {\n        return a - b;\n    }\n    if (typeof a == 'boolean' && typeof b == 'boolean') {\n        return a < b ? -1 : 1;\n    }\n    /** @type {?} */\n    const aString = String(a);\n    /** @type {?} */\n    const bString = String(b);\n    return aString == bString ? 0 : aString < bString ? -1 : 1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Transforms a number into a string,\n * formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * If no parameters are specified, the function rounds off to the nearest value using this\n * [rounding method](https://en.wikibooks.org/wiki/Arithmetic/Rounding).\n * The behavior differs from that of the JavaScript ```Math.round()``` function.\n * In the following case for example, the pipe rounds down where\n * ```Math.round()``` rounds up:\n *\n * ```html\n * -2.5 | number:'1.0-0'\n * > -3\n * Math.round(-2.5)\n * > -2\n * ```\n *\n * @see `formatNumber()`\n *\n * \\@usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * ### Example\n *\n * <code-example path=\"common/pipes/ts/number_pipe.ts\" region='NumberPipe'></code-example>\n *\n */\nclass DecimalPipe {\n    /**\n     * @param {?} _locale\n     */\n    constructor(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     * @param {?} value The number to be formatted.\n     * @param {?=} digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?}\n     */\n    transform(value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            /** @type {?} */\n            const num = strToNumber(value);\n            return formatNumber(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(DecimalPipe, error.message);\n        }\n    }\n}\nDecimalPipe.decorators = [\n    { type: Pipe, args: [{ name: 'number' },] }\n];\n/** @nocollapse */\nDecimalPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Transforms a number to a percentage\n * string, formatted according to locale rules that determine group sizing and\n * separator, decimal-point character, and other locale-specific\n * configurations.\n *\n * @see `formatPercent()`\n *\n * \\@usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/percent_pipe.ts\" region='PercentPipe'></code-example>\n *\n *\n */\nclass PercentPipe {\n    /**\n     * @param {?} _locale\n     */\n    constructor(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     *\n     * @param {?} value The number to be formatted as a percentage.\n     * @param {?=} digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?}\n     */\n    transform(value, digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        try {\n            /** @type {?} */\n            const num = strToNumber(value);\n            return formatPercent(num, locale, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(PercentPipe, error.message);\n        }\n    }\n}\nPercentPipe.decorators = [\n    { type: Pipe, args: [{ name: 'percent' },] }\n];\n/** @nocollapse */\nPercentPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Transforms a number to a currency string, formatted according to locale rules\n * that determine group sizing and separator, decimal-point character,\n * and other locale-specific configurations.\n *\n * @see `getCurrencySymbol()`\n * @see `formatCurrency()`\n *\n * \\@usageNotes\n * The following code shows how the pipe transforms numbers\n * into text strings, according to various format specifications,\n * where the caller's default locale is `en-US`.\n *\n * <code-example path=\"common/pipes/ts/currency_pipe.ts\" region='CurrencyPipe'></code-example>\n *\n *\n */\nclass CurrencyPipe {\n    /**\n     * @param {?} _locale\n     */\n    constructor(_locale) {\n        this._locale = _locale;\n    }\n    /**\n     *\n     * @param {?} value The number to be formatted as currency.\n     * @param {?=} currencyCode The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code,\n     * such as `USD` for the US dollar and `EUR` for the euro.\n     * @param {?=} display The format for the currency indicator. One of the following:\n     *   - `code`: Show the code (such as `USD`).\n     *   - `symbol`(default): Show the symbol (such as `$`).\n     *   - `symbol-narrow`: Use the narrow symbol for locales that have two symbols for their\n     * currency.\n     * For example, the Canadian dollar CAD has the symbol `CA$` and the symbol-narrow `$`. If the\n     * locale has no narrow symbol, uses the standard symbol for the locale.\n     *   - String: Use the given string value instead of a code or a symbol.\n     * For example, an empty string will suppress the currency & symbol.\n     *   - Boolean (marked deprecated in v5): `true` for symbol and false for `code`.\n     *\n     * @param {?=} digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * If not provided, the number will be formatted with the proper amount of digits,\n     * depending on what the [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) specifies.\n     * For example, the Canadian dollar has 2 digits, whereas the Chilean peso has none.\n     * @param {?=} locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `LOCALE_ID`, which is `en-US` by default.\n     * See [Setting your app locale](guide/i18n#setting-up-the-locale-of-your-app).\n     * @return {?}\n     */\n    transform(value, currencyCode, display = 'symbol', digitsInfo, locale) {\n        if (isEmpty(value))\n            return null;\n        locale = locale || this._locale;\n        if (typeof display === 'boolean') {\n            if (/** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn(`Warning: the currency pipe has been changed in Angular v5. The symbolDisplay option (third parameter) is now a string instead of a boolean. The accepted values are \"code\", \"symbol\" or \"symbol-narrow\".`);\n            }\n            display = display ? 'symbol' : 'code';\n        }\n        /** @type {?} */\n        let currency = currencyCode || 'USD';\n        if (display !== 'code') {\n            if (display === 'symbol' || display === 'symbol-narrow') {\n                currency = getCurrencySymbol(currency, display === 'symbol' ? 'wide' : 'narrow', locale);\n            }\n            else {\n                currency = display;\n            }\n        }\n        try {\n            /** @type {?} */\n            const num = strToNumber(value);\n            return formatCurrency(num, locale, currency, currencyCode, digitsInfo);\n        }\n        catch (error) {\n            throw invalidPipeArgumentError(CurrencyPipe, error.message);\n        }\n    }\n}\nCurrencyPipe.decorators = [\n    { type: Pipe, args: [{ name: 'currency' },] }\n];\n/** @nocollapse */\nCurrencyPipe.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmpty(value) {\n    return value == null || value === '' || value !== value;\n}\n/**\n * Transforms a string into a number (if needed).\n * @param {?} value\n * @return {?}\n */\nfunction strToNumber(value) {\n    // Convert strings to numbers\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n    if (typeof value !== 'number') {\n        throw new Error(`${value} is not a number`);\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@ngModule CommonModule\n * \\@description\n *\n * Creates a new `Array` or `String` containing a subset (slice) of the elements.\n *\n * \\@usageNotes\n *\n * All behavior is based on the expected behavior of the JavaScript API `Array.prototype.slice()`\n * and `String.prototype.slice()`.\n *\n * When operating on an `Array`, the returned `Array` is always a copy even when all\n * the elements are being returned.\n *\n * When operating on a blank value, the pipe returns the blank value.\n *\n * ### List Example\n *\n * This `ngFor` example:\n *\n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_list'}\n *\n * produces the following:\n *\n * ```html\n * <li>b</li>\n * <li>c</li>\n * ```\n *\n * ### String Examples\n *\n * {\\@example common/pipes/ts/slice_pipe.ts region='SlicePipe_string'}\n *\n */\nclass SlicePipe {\n    /**\n     * @param {?} value a list or a string to be sliced.\n     * @param {?} start the starting index of the subset to return:\n     *   - **a positive integer**: return the item at `start` index and all items after\n     *     in the list or string expression.\n     *   - **a negative integer**: return the item at `start` index from the end and all items after\n     *     in the list or string expression.\n     *   - **if positive and greater than the size of the expression**: return an empty list or\n     * string.\n     *   - **if negative and greater than the size of the expression**: return entire list or string.\n     * @param {?=} end the ending index of the subset to return:\n     *   - **omitted**: return all items until the end.\n     *   - **if positive**: return all items before `end` index of the list or string.\n     *   - **if negative**: return all items before `end` index from the end of the list or string.\n     * @return {?}\n     */\n    transform(value, start, end) {\n        if (value == null)\n            return value;\n        if (!this.supports(value)) {\n            throw invalidPipeArgumentError(SlicePipe, value);\n        }\n        return value.slice(start, end);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    supports(obj) { return typeof obj === 'string' || Array.isArray(obj); }\n}\nSlicePipe.decorators = [\n    { type: Pipe, args: [{ name: 'slice', pure: false },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A collection of Angular pipes that are likely to be used in each and every application.\n  @type {?} */\nconst COMMON_PIPES = [\n    AsyncPipe,\n    UpperCasePipe,\n    LowerCasePipe,\n    JsonPipe,\n    SlicePipe,\n    DecimalPipe,\n    PercentPipe,\n    TitleCasePipe,\n    CurrencyPipe,\n    DatePipe,\n    I18nPluralPipe,\n    I18nSelectPipe,\n    KeyValuePipe,\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Exports all the basic Angular directives and pipes,\n * such as `NgIf`, `NgForOf`, `DecimalPipe`, and so on.\n * Re-exported by `BrowserModule`, which is included automatically in the root\n * `AppModule` when you create a new app with the CLI `new` command.\n *\n * * The `providers` options configure the NgModule's injector to provide\n * localization dependencies to members.\n * * The `exports` options make the declared directives and pipes available for import\n * by other NgModules.\n *\n */\nclass CommonModule {\n}\nCommonModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMMON_DIRECTIVES, COMMON_PIPES],\n                exports: [COMMON_DIRECTIVES, COMMON_PIPES],\n                providers: [\n                    { provide: NgLocalization, useClass: NgLocaleLocalization },\n                ],\n            },] }\n];\nconst ɵ0 = getPluralCase;\n/**\n * A module that contains the deprecated i18n pipes.\n *\n * @deprecated from v5\n */\nclass DeprecatedI18NPipesModule {\n}\nDeprecatedI18NPipesModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [COMMON_DEPRECATED_I18N_PIPES],\n                exports: [COMMON_DEPRECATED_I18N_PIPES],\n                providers: [{ provide: DEPRECATED_PLURAL_FN, useValue: ɵ0 }],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n *\n  @type {?} */\nconst DOCUMENT = new InjectionToken('DocumentToken');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst PLATFORM_BROWSER_ID = 'browser';\n/** @type {?} */\nconst PLATFORM_SERVER_ID = 'server';\n/** @type {?} */\nconst PLATFORM_WORKER_APP_ID = 'browserWorkerApp';\n/** @type {?} */\nconst PLATFORM_WORKER_UI_ID = 'browserWorkerUi';\n/**\n * Returns whether a platform id represents a browser platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nfunction isPlatformBrowser(platformId) {\n    return platformId === PLATFORM_BROWSER_ID;\n}\n/**\n * Returns whether a platform id represents a server platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nfunction isPlatformServer(platformId) {\n    return platformId === PLATFORM_SERVER_ID;\n}\n/**\n * Returns whether a platform id represents a web worker app platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nfunction isPlatformWorkerApp(platformId) {\n    return platformId === PLATFORM_WORKER_APP_ID;\n}\n/**\n * Returns whether a platform id represents a web worker UI platform.\n * \\@experimental\n * @param {?} platformId\n * @return {?}\n */\nfunction isPlatformWorkerUi(platformId) {\n    return platformId === PLATFORM_WORKER_UI_ID;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VERSION = new Version('6.1.10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Manages the scroll position.\n * @abstract\n */\nclass ViewportScroller {\n}\n/** @nocollapse */\n/** @nocollapse */ ViewportScroller.ngInjectableDef = defineInjectable({ providedIn: 'root', factory: () => new BrowserViewportScroller(inject(DOCUMENT), window) });\n/**\n * Manages the scroll position.\n */\nclass BrowserViewportScroller {\n    /**\n     * @param {?} document\n     * @param {?} window\n     */\n    constructor(document, window) {\n        this.document = document;\n        this.window = window;\n        this.offset = () => [0, 0];\n    }\n    /**\n     * Configures the top offset used when scrolling to an anchor.\n     *\n     * * When given a number, the service will always use the number.\n     * * When given a function, the service will invoke the function every time it restores scroll\n     * position.\n     * @param {?} offset\n     * @return {?}\n     */\n    setOffset(offset) {\n        if (Array.isArray(offset)) {\n            this.offset = () => offset;\n        }\n        else {\n            this.offset = offset;\n        }\n    }\n    /**\n     * Returns the current scroll position.\n     * @return {?}\n     */\n    getScrollPosition() {\n        if (this.supportScrollRestoration()) {\n            return [this.window.scrollX, this.window.scrollY];\n        }\n        else {\n            return [0, 0];\n        }\n    }\n    /**\n     * Sets the scroll position.\n     * @param {?} position\n     * @return {?}\n     */\n    scrollToPosition(position) {\n        if (this.supportScrollRestoration()) {\n            this.window.scrollTo(position[0], position[1]);\n        }\n    }\n    /**\n     * Scrolls to the provided anchor.\n     * @param {?} anchor\n     * @return {?}\n     */\n    scrollToAnchor(anchor) {\n        if (this.supportScrollRestoration()) {\n            /** @type {?} */\n            const elSelectedById = this.document.querySelector(`#${anchor}`);\n            if (elSelectedById) {\n                this.scrollToElement(elSelectedById);\n                return;\n            }\n            /** @type {?} */\n            const elSelectedByName = this.document.querySelector(`[name='${anchor}']`);\n            if (elSelectedByName) {\n                this.scrollToElement(elSelectedByName);\n                return;\n            }\n        }\n    }\n    /**\n     * Disables automatic scroll restoration provided by the browser.\n     * @param {?} scrollRestoration\n     * @return {?}\n     */\n    setHistoryScrollRestoration(scrollRestoration) {\n        if (this.supportScrollRestoration()) {\n            /** @type {?} */\n            const history = this.window.history;\n            if (history && history.scrollRestoration) {\n                history.scrollRestoration = scrollRestoration;\n            }\n        }\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    scrollToElement(el) {\n        /** @type {?} */\n        const rect = el.getBoundingClientRect();\n        /** @type {?} */\n        const left = rect.left + this.window.pageXOffset;\n        /** @type {?} */\n        const top = rect.top + this.window.pageYOffset;\n        /** @type {?} */\n        const offset = this.offset();\n        this.window.scrollTo(left - offset[0], top - offset[1]);\n    }\n    /**\n     * We only support scroll restoration when we can get a hold of window.\n     * This means that we do not support this behavior when running in a web worker.\n     *\n     * Lifting this restriction right now would require more changes in the dom adapter.\n     * Since webworkers aren't widely used, we will lift it once RouterScroller is\n     * battle-tested.\n     * @return {?}\n     */\n    supportScrollRestoration() {\n        try {\n            return !!this.window && !!this.window.scrollTo;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n}\n/**\n * Provides an empty implementation of the viewport scroller. This will\n * live in \\@angular/common as it will be used by both platform-server and platform-webworker.\n */\nclass NullViewportScroller {\n    /**\n     * Empty implementation\n     * @param {?} offset\n     * @return {?}\n     */\n    setOffset(offset) { }\n    /**\n     * Empty implementation\n     * @return {?}\n     */\n    getScrollPosition() { return [0, 0]; }\n    /**\n     * Empty implementation\n     * @param {?} position\n     * @return {?}\n     */\n    scrollToPosition(position) { }\n    /**\n     * Empty implementation\n     * @param {?} anchor\n     * @return {?}\n     */\n    scrollToAnchor(anchor) { }\n    /**\n     * Empty implementation\n     * @param {?} scrollRestoration\n     * @return {?}\n     */\n    setHistoryScrollRestoration(scrollRestoration) { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { COMMON_DIRECTIVES as ɵangular_packages_common_common_e, findLocaleData as ɵangular_packages_common_common_d, DEPRECATED_PLURAL_FN as ɵangular_packages_common_common_a, getPluralCase as ɵangular_packages_common_common_b, COMMON_DEPRECATED_I18N_PIPES as ɵangular_packages_common_common_g, COMMON_PIPES as ɵangular_packages_common_common_f, registerLocaleData as ɵregisterLocaleData, formatDate, formatCurrency, formatNumber, formatPercent, NgLocaleLocalization, NgLocalization, registerLocaleData, Plural, NumberFormatStyle, FormStyle, TranslationWidth, FormatWidth, NumberSymbol, WeekDay, getNumberOfCurrencyDigits, getCurrencySymbol, getLocaleDayPeriods, getLocaleDayNames, getLocaleMonthNames, getLocaleId, getLocaleEraNames, getLocaleWeekEndRange, getLocaleFirstDayOfWeek, getLocaleDateFormat, getLocaleDateTimeFormat, getLocaleExtraDayPeriodRules, getLocaleExtraDayPeriods, getLocalePluralCase, getLocaleTimeFormat, getLocaleNumberSymbol, getLocaleNumberFormat, getLocaleCurrencyName, getLocaleCurrencySymbol, parseCookieValue as ɵparseCookieValue, CommonModule, DeprecatedI18NPipesModule, NgClass, NgForOf, NgForOfContext, NgIf, NgIfContext, NgPlural, NgPluralCase, NgStyle, NgSwitch, NgSwitchCase, NgSwitchDefault, NgTemplateOutlet, NgComponentOutlet, DOCUMENT, AsyncPipe, DatePipe, I18nPluralPipe, I18nSelectPipe, JsonPipe, LowerCasePipe, CurrencyPipe, DecimalPipe, PercentPipe, SlicePipe, UpperCasePipe, TitleCasePipe, KeyValuePipe, DeprecatedDatePipe, DeprecatedCurrencyPipe, DeprecatedDecimalPipe, DeprecatedPercentPipe, PLATFORM_BROWSER_ID as ɵPLATFORM_BROWSER_ID, PLATFORM_SERVER_ID as ɵPLATFORM_SERVER_ID, PLATFORM_WORKER_APP_ID as ɵPLATFORM_WORKER_APP_ID, PLATFORM_WORKER_UI_ID as ɵPLATFORM_WORKER_UI_ID, isPlatformBrowser, isPlatformServer, isPlatformWorkerApp, isPlatformWorkerUi, VERSION, ViewportScroller, NullViewportScroller as ɵNullViewportScroller, PlatformLocation, LOCATION_INITIALIZED, LocationStrategy, APP_BASE_HREF, HashLocationStrategy, PathLocationStrategy, Location };\n//# sourceMappingURL=common.js.map\n","import { Observable } from '../Observable';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport const subscribeTo = (result) => {\n    if (result instanceof Observable) {\n        return (subscriber) => {\n            if (result._isScalar) {\n                subscriber.next(result.value);\n                subscriber.complete();\n                return undefined;\n            }\n            else {\n                return result.subscribe(subscriber);\n            }\n        };\n    }\n    else if (isArrayLike(result)) {\n        return subscribeToArray(result);\n    }\n    else if (isPromise(result)) {\n        return subscribeToPromise(result);\n    }\n    else if (result && typeof result[Symbol_iterator] === 'function') {\n        return subscribeToIterable(result);\n    }\n    else if (result && typeof result[Symbol_observable] === 'function') {\n        return subscribeToObservable(result);\n    }\n    else {\n        const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n        const msg = `You provided ${value} where a stream was expected.`\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        throw new TypeError(msg);\n    }\n};\n//# sourceMappingURL=subscribeTo.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { EmptyError } from '../util/EmptyError';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * <img src=\"./img/first.png\" width=\"100%\">\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a `resultSelector` function to produce the output value from\n * the input value, and a `defaultValue` to emit in case the source completes\n * before it is able to emit a valid value. Throws an error if `defaultValue`\n * was not provided and a matching element is not found.\n *\n * @example <caption>Emit only the first click that happens on the DOM</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Emits the first click that happens on a DIV</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.first(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first(predicate, defaultValue) {\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(predicate ? filter((v, i) => predicate(v, i, source)) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(() => new EmptyError()));\n}\n//# sourceMappingURL=first.js.map","import { Observable } from '../Observable';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge(...observables) {\n    let concurrent = Number.POSITIVE_INFINITY;\n    let scheduler = null;\n    let last = observables[observables.length - 1];\n    if (isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n        return observables[0];\n    }\n    return mergeAll(concurrent)(fromArray(observables, scheduler));\n}\n//# sourceMappingURL=merge.js.map","import { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification {\n    constructor(kind, value, error) {\n        this.kind = kind;\n        this.value = value;\n        this.error = error;\n        this.hasValue = kind === 'N';\n    }\n    /**\n     * Delivers to the given `observer` the value wrapped by this Notification.\n     * @param {Observer} observer\n     * @return\n     */\n    observe(observer) {\n        switch (this.kind) {\n            case 'N':\n                return observer.next && observer.next(this.value);\n            case 'E':\n                return observer.error && observer.error(this.error);\n            case 'C':\n                return observer.complete && observer.complete();\n        }\n    }\n    /**\n     * Given some {@link Observer} callbacks, deliver the value represented by the\n     * current Notification to the correctly corresponding callback.\n     * @param {function(value: T): void} next An Observer `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    do(next, error, complete) {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return next && next(this.value);\n            case 'E':\n                return error && error(this.error);\n            case 'C':\n                return complete && complete();\n        }\n    }\n    /**\n     * Takes an Observer or its individual callback functions, and calls `observe`\n     * or `do` methods accordingly.\n     * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n     * the `next` callback.\n     * @param {function(err: any): void} [error] An Observer `error` callback.\n     * @param {function(): void} [complete] An Observer `complete` callback.\n     * @return {any}\n     */\n    accept(nextOrObserver, error, complete) {\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\n            return this.observe(nextOrObserver);\n        }\n        else {\n            return this.do(nextOrObserver, error, complete);\n        }\n    }\n    /**\n     * Returns a simple Observable that just delivers the notification represented\n     * by this Notification instance.\n     * @return {any}\n     */\n    toObservable() {\n        const kind = this.kind;\n        switch (kind) {\n            case 'N':\n                return of(this.value);\n            case 'E':\n                return throwError(this.error);\n            case 'C':\n                return empty();\n        }\n        throw new Error('unexpected notification kind value');\n    }\n    /**\n     * A shortcut to create a Notification instance of the type `next` from a\n     * given value.\n     * @param {T} value The `next` value.\n     * @return {Notification<T>} The \"next\" Notification representing the\n     * argument.\n     * @nocollapse\n     */\n    static createNext(value) {\n        if (typeof value !== 'undefined') {\n            return new Notification('N', value);\n        }\n        return Notification.undefinedValueNotification;\n    }\n    /**\n     * A shortcut to create a Notification instance of the type `error` from a\n     * given error.\n     * @param {any} [err] The `error` error.\n     * @return {Notification<T>} The \"error\" Notification representing the\n     * argument.\n     * @nocollapse\n     */\n    static createError(err) {\n        return new Notification('E', undefined, err);\n    }\n    /**\n     * A shortcut to create a Notification instance of the type `complete`.\n     * @return {Notification<any>} The valueless \"complete\" Notification.\n     * @nocollapse\n     */\n    static createComplete() {\n        return Notification.completeNotification;\n    }\n}\nNotification.completeNotification = new Notification('C');\nNotification.undefinedValueNotification = new Notification('N', undefined);\n//# sourceMappingURL=Notification.js.map","import { tap } from './tap';\nimport { EmptyError } from '../util/EmptyError';\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link ErrorEmpty}.\n *\n * @example\n *\n * const click$ = fromEvent(button, 'click');\n *\n * clicks$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the button was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); },\n * });\n * @param {Function} [errorFactory] A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport const throwIfEmpty = (errorFactory = defaultErrorFactory) => tap({\n    hasValue: false,\n    next() { this.hasValue = true; },\n    complete() {\n        if (!this.hasValue) {\n            throw errorFactory();\n        }\n    }\n});\nfunction defaultErrorFactory() {\n    return new EmptyError();\n}\n//# sourceMappingURL=throwIfEmpty.js.map","import { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.destination = destination;\n    }\n}\n/**\n * @class Subject<T>\n */\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    [rxSubscriberSymbol]() {\n        return new SubjectSubscriber(this);\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    next(value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            const { observers } = this;\n            const len = observers.length;\n            const copy = observers.slice();\n            for (let i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    }\n    error(err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    }\n    complete() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        const { observers } = this;\n        const len = observers.length;\n        const copy = observers.slice();\n        for (let i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    }\n    unsubscribe() {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _trySubscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return super._trySubscribe(subscriber);\n        }\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\n/**@nocollapse */\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        const { destination } = this;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    }\n    error(err) {\n        const { destination } = this;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    }\n    complete() {\n        const { destination } = this;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        const { source } = this;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    }\n}\n//# sourceMappingURL=Subject.js.map","import { Observable } from '../Observable';\nexport function scalar(value) {\n    const result = new Observable(subscriber => {\n        subscriber.next(value);\n        subscriber.complete();\n    });\n    result._isScalar = true;\n    result.value = value;\n    return result;\n}\n//# sourceMappingURL=scalar.js.map","export function isObject(x) {\n    return x != null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map","/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an {@link Action}.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        this.SchedulerAction = SchedulerAction;\n        this.now = now;\n    }\n    /**\n     * Schedules a function, `work`, for execution. May happen at some point in\n     * the future, according to the `delay` parameter, if specified. May be passed\n     * some context object, `state`, which will be passed to the `work` function.\n     *\n     * The given arguments will be processed an stored as an Action object in a\n     * queue of actions.\n     *\n     * @param {function(state: ?T): ?Subscription} work A function representing a\n     * task, or some unit of work to be executed by the Scheduler.\n     * @param {number} [delay] Time to wait before executing the work, where the\n     * time unit is implicit and defined by the Scheduler itself.\n     * @param {T} [state] Some contextual data that the `work` function uses when\n     * called by the Scheduler.\n     * @return {Subscription} A subscription in order to be able to unsubscribe\n     * the scheduled work.\n     */\n    schedule(work, delay = 0, state) {\n        return new this.SchedulerAction(this, work).schedule(state, delay);\n    }\n}\n/** @nocollapse */\nScheduler.now = Date.now ? Date.now : () => +new Date();\n//# sourceMappingURL=Scheduler.js.map","/**\n * An error thrown when duetime elapses.\n *\n * @see {@link timeout}\n *\n * @class TimeoutError\n */\nexport class TimeoutError extends Error {\n    constructor() {\n        super('Timeout has occurred');\n        Object.setPrototypeOf(this, TimeoutError.prototype);\n    }\n}\n//# sourceMappingURL=TimeoutError.js.map","import { isArray } from './isArray';\nexport function isNumeric(val) {\n    // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    // adding 1 corrects loss of precision from parseFloat (#15100)\n    return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n//# sourceMappingURL=isNumeric.js.map","import { Subscription } from './Subscription';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription extends Subscription {\n    constructor(subject, subscriber) {\n        super();\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        const subject = this.subject;\n        const observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        const subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    }\n}\n//# sourceMappingURL=SubjectSubscription.js.map","import { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber extends Subscriber {\n    constructor(parent, outerValue, outerIndex) {\n        super();\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    _next(value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    }\n    _error(error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    }\n}\n//# sourceMappingURL=InnerSubscriber.js.map","import { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeTo } from './subscribeTo';\nexport function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    const destination = new InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    return subscribeTo(result)(destination);\n}\n//# sourceMappingURL=subscribeToResult.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar breadcrumbs_component_1 = require(\"./breadcrumbs.component\");\nvar router_1 = require(\"@angular/router\");\nvar platform_browser_1 = require(\"@angular/platform-browser\");\nvar common_1 = require(\"@angular/common\");\nvar breadcrumbs_service_1 = require(\"./breadcrumbs.service\");\nvar BreadcrumbsModule = /** @class */ (function () {\n    function BreadcrumbsModule() {\n    }\n    BreadcrumbsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        breadcrumbs_component_1.BreadcrumbComponent\n                    ],\n                    providers: [\n                        breadcrumbs_service_1.BreadcrumbsService\n                    ],\n                    imports: [\n                        router_1.RouterModule,\n                        platform_browser_1.BrowserModule,\n                        common_1.CommonModule\n                    ],\n                    exports: [breadcrumbs_component_1.BreadcrumbComponent]\n                },] },\n    ];\n    /** @nocollapse */\n    BreadcrumbsModule.ctorParameters = function () { return []; };\n    return BreadcrumbsModule;\n}());\nexports.BreadcrumbsModule = BreadcrumbsModule;\n//# sourceMappingURL=breadcrumbs.module.js.map","import { hostReportError } from './hostReportError';\nexport const subscribeToPromise = (promise) => (subscriber) => {\n    promise.then((value) => {\n        if (!subscriber.closed) {\n            subscriber.next(value);\n            subscriber.complete();\n        }\n    }, (err) => subscriber.error(err))\n        .then(null, hostReportError);\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToPromise.js.map","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll(concurrent = Number.POSITIVE_INFINITY) {\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map","import { mergeMap } from './mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * <img src=\"./img/concatMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMap(ev => Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap(project, resultSelector) {\n    return mergeMap(project, resultSelector, 1);\n}\n//# sourceMappingURL=concatMap.js.map","export function isPromise(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\n//# sourceMappingURL=isPromise.js.map","/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { ɵparseCookieValue, DOCUMENT, PlatformLocation, isPlatformServer, CommonModule, ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵglobal, Inject, Injectable, APP_INITIALIZER, ApplicationInitStatus, InjectionToken, Injector, setTestabilityGetter, inject, APP_ID, NgModule, NgZone, Optional, ɵConsole, SecurityContext, ɵ_sanitizeHtml, ɵ_sanitizeStyle, ɵ_sanitizeUrl, RendererStyleFlags2, ViewEncapsulation, Version, ApplicationRef, defineInjectable, getDebugNode, NgProbeToken, PLATFORM_ID, PLATFORM_INITIALIZER, Sanitizer, createPlatformFactory, platformCore, ErrorHandler, ɵAPP_ROOT, RendererFactory2, Testability, ApplicationModule, SkipSelf } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nlet _DOM = /** @type {?} */ ((null));\n/**\n * @return {?}\n */\nfunction getDOM() {\n    return _DOM;\n}\n/**\n * @param {?} adapter\n * @return {?}\n */\nfunction setRootDomAdapter(adapter) {\n    if (!_DOM) {\n        _DOM = adapter;\n    }\n}\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nclass DomAdapter {\n    constructor() {\n        this.resourceLoaderType = /** @type {?} */ ((null));\n    }\n    /**\n     * Maps attribute names to their corresponding property names for cases\n     * where attribute name doesn't match property name.\n     * @return {?}\n     */\n    get attrToPropMap() { return this._attrToPropMap; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set attrToPropMap(value) { this._attrToPropMap = value; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nclass GenericBrowserDomAdapter extends DomAdapter {\n    constructor() {\n        super();\n        this._animationPrefix = null;\n        this._transitionEnd = null;\n        try {\n            /** @type {?} */\n            const element = this.createElement('div', document);\n            if (this.getStyle(element, 'animationName') != null) {\n                this._animationPrefix = '';\n            }\n            else {\n                /** @type {?} */\n                const domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                for (let i = 0; i < domPrefixes.length; i++) {\n                    if (this.getStyle(element, domPrefixes[i] + 'AnimationName') != null) {\n                        this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                        break;\n                    }\n                }\n            }\n            /** @type {?} */\n            const transEndEventNames = {\n                WebkitTransition: 'webkitTransitionEnd',\n                MozTransition: 'transitionend',\n                OTransition: 'oTransitionEnd otransitionend',\n                transition: 'transitionend'\n            };\n            Object.keys(transEndEventNames).forEach((key) => {\n                if (this.getStyle(element, key) != null) {\n                    this._transitionEnd = transEndEventNames[key];\n                }\n            });\n        }\n        catch (e) {\n            this._animationPrefix = null;\n            this._transitionEnd = null;\n        }\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getDistributedNodes(el) { return (/** @type {?} */ (el)).getDistributedNodes(); }\n    /**\n     * @param {?} el\n     * @param {?} baseUrl\n     * @param {?} href\n     * @return {?}\n     */\n    resolveAndSetHref(el, baseUrl, href) {\n        el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n    }\n    /**\n     * @return {?}\n     */\n    supportsDOMEvents() { return true; }\n    /**\n     * @return {?}\n     */\n    supportsNativeShadowDOM() {\n        return typeof (/** @type {?} */ (document.body)).createShadowRoot === 'function';\n    }\n    /**\n     * @return {?}\n     */\n    getAnimationPrefix() { return this._animationPrefix ? this._animationPrefix : ''; }\n    /**\n     * @return {?}\n     */\n    getTransitionEnd() { return this._transitionEnd ? this._transitionEnd : ''; }\n    /**\n     * @return {?}\n     */\n    supportsAnimation() {\n        return this._animationPrefix != null && this._transitionEnd != null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst _attrToPropMap = {\n    'class': 'className',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\n/** @type {?} */\nconst DOM_KEY_LOCATION_NUMPAD = 3;\n/** @type {?} */\nconst _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n/** @type {?} */\nconst _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\n/** @type {?} */\nlet nodeContains;\nif (ɵglobal['Node']) {\n    nodeContains = ɵglobal['Node'].prototype.contains || function (node) {\n        return !!(this.compareDocumentPosition(node) & 16);\n    };\n}\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nclass BrowserDomAdapter extends GenericBrowserDomAdapter {\n    /**\n     * @param {?} templateHtml\n     * @return {?}\n     */\n    parse(templateHtml) { throw new Error('parse not implemented'); }\n    /**\n     * @return {?}\n     */\n    static makeCurrent() { setRootDomAdapter(new BrowserDomAdapter()); }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    hasProperty(element, name) { return name in element; }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setProperty(el, name, value) { (/** @type {?} */ (el))[name] = value; }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    getProperty(el, name) { return (/** @type {?} */ (el))[name]; }\n    /**\n     * @param {?} el\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    invoke(el, methodName, args) { (/** @type {?} */ (el))[methodName](...args); }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    logError(error) {\n        if (window.console) {\n            if (console.error) {\n                console.error(error);\n            }\n            else {\n                console.log(error);\n            }\n        }\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    log(error) {\n        if (window.console) {\n            window.console.log && window.console.log(error);\n        }\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    logGroup(error) {\n        if (window.console) {\n            window.console.group && window.console.group(error);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    logGroupEnd() {\n        if (window.console) {\n            window.console.groupEnd && window.console.groupEnd();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get attrToPropMap() { return _attrToPropMap; }\n    /**\n     * @param {?} nodeA\n     * @param {?} nodeB\n     * @return {?}\n     */\n    contains(nodeA, nodeB) { return nodeContains.call(nodeA, nodeB); }\n    /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    querySelector(el, selector) { return el.querySelector(selector); }\n    /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    querySelectorAll(el, selector) { return el.querySelectorAll(selector); }\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    on(el, evt, listener) { el.addEventListener(evt, listener, false); }\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    onAndCancel(el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return () => { el.removeEventListener(evt, listener, false); };\n    }\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @return {?}\n     */\n    dispatchEvent(el, evt) { el.dispatchEvent(evt); }\n    /**\n     * @param {?} eventType\n     * @return {?}\n     */\n    createMouseEvent(eventType) {\n        /** @type {?} */\n        const evt = this.getDefaultDocument().createEvent('MouseEvent');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    }\n    /**\n     * @param {?} eventType\n     * @return {?}\n     */\n    createEvent(eventType) {\n        /** @type {?} */\n        const evt = this.getDefaultDocument().createEvent('Event');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    }\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    preventDefault(evt) {\n        evt.preventDefault();\n        evt.returnValue = false;\n    }\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    isPrevented(evt) {\n        return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getInnerHTML(el) { return el.innerHTML; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getTemplateContent(el) {\n        return 'content' in el && this.isTemplateElement(el) ? (/** @type {?} */ (el)).content : null;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getOuterHTML(el) { return el.outerHTML; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    nodeName(node) { return node.nodeName; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    nodeValue(node) { return node.nodeValue; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    type(node) { return node.type; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    content(node) {\n        if (this.hasProperty(node, 'content')) {\n            return (/** @type {?} */ (node)).content;\n        }\n        else {\n            return node;\n        }\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    firstChild(el) { return el.firstChild; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    nextSibling(el) { return el.nextSibling; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    parentElement(el) { return el.parentNode; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    childNodes(el) { return el.childNodes; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    childNodesAsList(el) {\n        /** @type {?} */\n        const childNodes = el.childNodes;\n        /** @type {?} */\n        const res = new Array(childNodes.length);\n        for (let i = 0; i < childNodes.length; i++) {\n            res[i] = childNodes[i];\n        }\n        return res;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    clearNodes(el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n    }\n    /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    appendChild(el, node) { el.appendChild(node); }\n    /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    removeChild(el, node) { el.removeChild(node); }\n    /**\n     * @param {?} el\n     * @param {?} newChild\n     * @param {?} oldChild\n     * @return {?}\n     */\n    replaceChild(el, newChild, oldChild) { el.replaceChild(newChild, oldChild); }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    remove(node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return node;\n    }\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n    insertBefore(parent, ref, node) { parent.insertBefore(node, ref); }\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} nodes\n     * @return {?}\n     */\n    insertAllBefore(parent, ref, nodes) {\n        nodes.forEach((n) => parent.insertBefore(n, ref));\n    }\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n    insertAfter(parent, ref, node) { parent.insertBefore(node, ref.nextSibling); }\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    setInnerHTML(el, value) { el.innerHTML = value; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getText(el) { return el.textContent; }\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    setText(el, value) { el.textContent = value; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getValue(el) { return el.value; }\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(el, value) { el.value = value; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getChecked(el) { return el.checked; }\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    setChecked(el, value) { el.checked = value; }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    createComment(text) { return this.getDefaultDocument().createComment(text); }\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    createTemplate(html) {\n        /** @type {?} */\n        const t = this.getDefaultDocument().createElement('template');\n        t.innerHTML = html;\n        return t;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    createElement(tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    }\n    /**\n     * @param {?} ns\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    createElementNS(ns, tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElementNS(ns, tagName);\n    }\n    /**\n     * @param {?} text\n     * @param {?=} doc\n     * @return {?}\n     */\n    createTextNode(text, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createTextNode(text);\n    }\n    /**\n     * @param {?} attrName\n     * @param {?} attrValue\n     * @param {?=} doc\n     * @return {?}\n     */\n    createScriptTag(attrName, attrValue, doc) {\n        doc = doc || this.getDefaultDocument();\n        /** @type {?} */\n        const el = /** @type {?} */ (doc.createElement('SCRIPT'));\n        el.setAttribute(attrName, attrValue);\n        return el;\n    }\n    /**\n     * @param {?} css\n     * @param {?=} doc\n     * @return {?}\n     */\n    createStyleElement(css, doc) {\n        doc = doc || this.getDefaultDocument();\n        /** @type {?} */\n        const style = /** @type {?} */ (doc.createElement('style'));\n        this.appendChild(style, this.createTextNode(css, doc));\n        return style;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    createShadowRoot(el) { return (/** @type {?} */ (el)).createShadowRoot(); }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getShadowRoot(el) { return (/** @type {?} */ (el)).shadowRoot; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getHost(el) { return (/** @type {?} */ (el)).host; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    clone(node) { return node.cloneNode(true); }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    getElementsByClassName(element, name) {\n        return element.getElementsByClassName(name);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    getElementsByTagName(element, name) {\n        return element.getElementsByTagName(name);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    classList(element) { return Array.prototype.slice.call(element.classList, 0); }\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    addClass(element, className) { element.classList.add(className); }\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    removeClass(element, className) { element.classList.remove(className); }\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    hasClass(element, className) {\n        return element.classList.contains(className);\n    }\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    setStyle(element, styleName, styleValue) {\n        element.style[styleName] = styleValue;\n    }\n    /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n    removeStyle(element, stylename) {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        element.style[stylename] = '';\n    }\n    /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n    getStyle(element, stylename) { return element.style[stylename]; }\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    hasStyle(element, styleName, styleValue) {\n        /** @type {?} */\n        const value = this.getStyle(element, styleName) || '';\n        return styleValue ? value == styleValue : value.length > 0;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    tagName(element) { return element.tagName; }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    attributeMap(element) {\n        /** @type {?} */\n        const res = new Map();\n        /** @type {?} */\n        const elAttrs = element.attributes;\n        for (let i = 0; i < elAttrs.length; i++) {\n            /** @type {?} */\n            const attrib = elAttrs.item(i);\n            res.set(attrib.name, attrib.value);\n        }\n        return res;\n    }\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    hasAttribute(element, attribute) {\n        return element.hasAttribute(attribute);\n    }\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} attribute\n     * @return {?}\n     */\n    hasAttributeNS(element, ns, attribute) {\n        return element.hasAttributeNS(ns, attribute);\n    }\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    getAttribute(element, attribute) {\n        return element.getAttribute(attribute);\n    }\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n    getAttributeNS(element, ns, name) {\n        return element.getAttributeNS(ns, name);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setAttribute(element, name, value) { element.setAttribute(name, value); }\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setAttributeNS(element, ns, name, value) {\n        element.setAttributeNS(ns, name, value);\n    }\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    removeAttribute(element, attribute) { element.removeAttribute(attribute); }\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n    removeAttributeNS(element, ns, name) {\n        element.removeAttributeNS(ns, name);\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    templateAwareRoot(el) { return this.isTemplateElement(el) ? this.content(el) : el; }\n    /**\n     * @return {?}\n     */\n    createHtmlDocument() {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    }\n    /**\n     * @return {?}\n     */\n    getDefaultDocument() { return document; }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getBoundingClientRect(el) {\n        try {\n            return el.getBoundingClientRect();\n        }\n        catch (e) {\n            return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n        }\n    }\n    /**\n     * @param {?} doc\n     * @return {?}\n     */\n    getTitle(doc) { return doc.title; }\n    /**\n     * @param {?} doc\n     * @param {?} newTitle\n     * @return {?}\n     */\n    setTitle(doc, newTitle) { doc.title = newTitle || ''; }\n    /**\n     * @param {?} n\n     * @param {?} selector\n     * @return {?}\n     */\n    elementMatches(n, selector) {\n        if (this.isElementNode(n)) {\n            return n.matches && n.matches(selector) ||\n                n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n        }\n        return false;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    isTemplateElement(el) {\n        return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    isTextNode(node) { return node.nodeType === Node.TEXT_NODE; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    isCommentNode(node) { return node.nodeType === Node.COMMENT_NODE; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    isElementNode(node) { return node.nodeType === Node.ELEMENT_NODE; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    hasShadowRoot(node) {\n        return node.shadowRoot != null && node instanceof HTMLElement;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    isShadowRoot(node) { return node instanceof DocumentFragment; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    importIntoDoc(node) { return document.importNode(this.templateAwareRoot(node), true); }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    adoptNode(node) { return document.adoptNode(node); }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    getHref(el) { return /** @type {?} */ ((el.getAttribute('href'))); }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    getEventKey(event) {\n        /** @type {?} */\n        let key = event.key;\n        if (key == null) {\n            key = event.keyIdentifier;\n            // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n            // Safari cf\n            // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n            if (key == null) {\n                return 'Unidentified';\n            }\n            if (key.startsWith('U+')) {\n                key = String.fromCharCode(parseInt(key.substring(2), 16));\n                if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                    // There is a bug in Chrome for numeric keypad keys:\n                    // https://code.google.com/p/chromium/issues/detail?id=155654\n                    // 1, 2, 3 ... are reported as A, B, C ...\n                    key = (/** @type {?} */ (_chromeNumKeyPadMap))[key];\n                }\n            }\n        }\n        return _keyMap[key] || key;\n    }\n    /**\n     * @param {?} doc\n     * @param {?} target\n     * @return {?}\n     */\n    getGlobalEventTarget(doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    }\n    /**\n     * @return {?}\n     */\n    getHistory() { return window.history; }\n    /**\n     * @return {?}\n     */\n    getLocation() { return window.location; }\n    /**\n     * @param {?} doc\n     * @return {?}\n     */\n    getBaseHref(doc) {\n        /** @type {?} */\n        const href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    }\n    /**\n     * @return {?}\n     */\n    resetBaseElement() { baseElement = null; }\n    /**\n     * @return {?}\n     */\n    getUserAgent() { return window.navigator.userAgent; }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setData(element, name, value) {\n        this.setAttribute(element, 'data-' + name, value);\n    }\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    getData(element, name) {\n        return this.getAttribute(element, 'data-' + name);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    getComputedStyle(element) { return getComputedStyle(element); }\n    /**\n     * @return {?}\n     */\n    supportsWebAnimation() {\n        return typeof (/** @type {?} */ (Element)).prototype['animate'] === 'function';\n    }\n    /**\n     * @return {?}\n     */\n    performanceNow() {\n        // performance.now() is not available in all browsers, see\n        // http://caniuse.com/#search=performance.now\n        return window.performance && window.performance.now ? window.performance.now() :\n            new Date().getTime();\n    }\n    /**\n     * @return {?}\n     */\n    supportsCookies() { return true; }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getCookie(name) { return ɵparseCookieValue(document.cookie, name); }\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setCookie(name, value) {\n        // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n        // not clear other cookies.\n        document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    }\n}\n/** @type {?} */\nlet baseElement = null;\n/**\n * @return {?}\n */\nfunction getBaseElementHref() {\n    if (!baseElement) {\n        baseElement = /** @type {?} */ ((document.querySelector('base')));\n        if (!baseElement) {\n            return null;\n        }\n    }\n    return baseElement.getAttribute('href');\n}\n/** @type {?} */\nlet urlParsingNode;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction relativePath(url) {\n    if (!urlParsingNode) {\n        urlParsingNode = document.createElement('a');\n    }\n    urlParsingNode.setAttribute('href', url);\n    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n        '/' + urlParsingNode.pathname;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @deprecated import from `\\@angular/common` instead.\n  @type {?} */\nconst DOCUMENT$1 = DOCUMENT;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction supportsState() {\n    return !!window.history.pushState;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n */\nclass BrowserPlatformLocation extends PlatformLocation {\n    /**\n     * @param {?} _doc\n     */\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        this._init();\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _init() {\n        (/** @type {?} */ (this)).location = getDOM().getLocation();\n        this._history = getDOM().getHistory();\n    }\n    /**\n     * @return {?}\n     */\n    getBaseHrefFromDOM() { return /** @type {?} */ ((getDOM().getBaseHref(this._doc))); }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    onPopState(fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    onHashChange(fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n    }\n    /**\n     * @return {?}\n     */\n    get pathname() { return this.location.pathname; }\n    /**\n     * @return {?}\n     */\n    get search() { return this.location.search; }\n    /**\n     * @return {?}\n     */\n    get hash() { return this.location.hash; }\n    /**\n     * @param {?} newPath\n     * @return {?}\n     */\n    set pathname(newPath) { this.location.pathname = newPath; }\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    pushState(state, title, url) {\n        if (supportsState()) {\n            this._history.pushState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    }\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    replaceState(state, title, url) {\n        if (supportsState()) {\n            this._history.replaceState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    forward() { this._history.forward(); }\n    /**\n     * @return {?}\n     */\n    back() { this._history.back(); }\n}\nBrowserPlatformLocation.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nBrowserPlatformLocation.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n  @type {?} */\nconst TRANSITION_ID = new InjectionToken('TRANSITION_ID');\n/**\n * @param {?} transitionId\n * @param {?} document\n * @param {?} injector\n * @return {?}\n */\nfunction appInitializerFactory(transitionId, document, injector) {\n    return () => {\n        // Wait for all application initializers to be completed before removing the styles set by\n        // the server.\n        injector.get(ApplicationInitStatus).donePromise.then(() => {\n            /** @type {?} */\n            const dom = getDOM();\n            /** @type {?} */\n            const styles = Array.prototype.slice.apply(dom.querySelectorAll(document, `style[ng-transition]`));\n            styles.filter(el => dom.getAttribute(el, 'ng-transition') === transitionId)\n                .forEach(el => dom.remove(el));\n        });\n    };\n}\n/** @type {?} */\nconst SERVER_TRANSITION_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TRANSITION_ID, DOCUMENT$1, Injector],\n        multi: true\n    },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass BrowserGetTestability {\n    /**\n     * @return {?}\n     */\n    static init() { setTestabilityGetter(new BrowserGetTestability()); }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    addToWindow(registry) {\n        ɵglobal['getAngularTestability'] = (elem, findInAncestors = true) => {\n            /** @type {?} */\n            const testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        ɵglobal['getAllAngularTestabilities'] = () => registry.getAllTestabilities();\n        ɵglobal['getAllAngularRootElements'] = () => registry.getAllRootElements();\n        /** @type {?} */\n        const whenAllStable = (callback /** TODO #9100 */) => {\n            /** @type {?} */\n            const testabilities = ɵglobal['getAllAngularTestabilities']();\n            /** @type {?} */\n            let count = testabilities.length;\n            /** @type {?} */\n            let didWork = false;\n            /** @type {?} */\n            const decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!ɵglobal['frameworkStabilizers']) {\n            ɵglobal['frameworkStabilizers'] = [];\n        }\n        ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    }\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    findTestabilityInTree(registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        /** @type {?} */\n        const t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (getDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n        }\n        return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param {?} name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param {?} value The value to export.\n * @return {?}\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        /** @type {?} */\n        const ng = ɵglobal['ng'] = (/** @type {?} */ (ɵglobal['ng'])) || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CORE_TOKENS = {\n    'ApplicationRef': ApplicationRef,\n    'NgZone': NgZone,\n};\n/** @type {?} */\nconst INSPECT_GLOBAL_NAME = 'probe';\n/** @type {?} */\nconst CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {\\@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n * @param {?} element\n * @return {?}\n */\nfunction inspectNativeElement(element) {\n    return getDebugNode(element);\n}\n/**\n * @param {?} coreTokens\n * @return {?}\n */\nfunction _createNgProbe(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, Object.assign({}, CORE_TOKENS, _ngProbeTokensToMap(coreTokens || [])));\n    return () => inspectNativeElement;\n}\n/**\n * @param {?} tokens\n * @return {?}\n */\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce((prev, t) => (prev[t.name] = t.token, prev), {});\n}\n/** *\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n  @type {?} */\nconst ELEMENT_PROBE_PROVIDERS = [\n    {\n        provide: APP_INITIALIZER,\n        useFactory: _createNgProbe,\n        deps: [\n            [NgProbeToken, new Optional()],\n        ],\n        multi: true,\n    },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * The injection token for the event-manager plug-in service.\n  @type {?} */\nconst EVENT_MANAGER_PLUGINS = new InjectionToken('EventManagerPlugins');\n/**\n * An injectable service that provides event management for Angular\n * through a browser plug-in.\n */\nclass EventManager {\n    /**\n     * Initializes an instance of the event-manager service.\n     * @param {?} plugins\n     * @param {?} _zone\n     */\n    constructor(plugins, _zone) {\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(p => p.manager = this);\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * Registers a handler for a specific element and event.\n     *\n     * @param {?} element The HTML element to receive event notifications.\n     * @param {?} eventName The name of the event to listen for.\n     * @param {?} handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @return {?} A callback function that can be used to remove the handler.\n     */\n    addEventListener(element, eventName, handler) {\n        /** @type {?} */\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    }\n    /**\n     * Registers a global handler for an event in a target view.\n     *\n     * @param {?} target A target for global event notifications. One of \"window\", \"document\", or \"body\".\n     * @param {?} eventName The name of the event to listen for.\n     * @param {?} handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @return {?} A callback function that can be used to remove the handler.\n     */\n    addGlobalEventListener(target, eventName, handler) {\n        /** @type {?} */\n        const plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    }\n    /**\n     * Retrieves the compilation zone in which event listeners are registered.\n     * @return {?}\n     */\n    getZone() { return this._zone; }\n    /**\n     * \\@internal\n     * @param {?} eventName\n     * @return {?}\n     */\n    _findPluginFor(eventName) {\n        /** @type {?} */\n        const plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        /** @type {?} */\n        const plugins = this._plugins;\n        for (let i = 0; i < plugins.length; i++) {\n            /** @type {?} */\n            const plugin = plugins[i];\n            if (plugin.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin);\n                return plugin;\n            }\n        }\n        throw new Error(`No event manager plugin found for event ${eventName}`);\n    }\n}\nEventManager.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nEventManager.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Inject, args: [EVENT_MANAGER_PLUGINS,] }] },\n    { type: NgZone }\n];\n/**\n * @abstract\n */\nclass EventManagerPlugin {\n    /**\n     * @param {?} _doc\n     */\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    addGlobalEventListener(element, eventName, handler) {\n        /** @type {?} */\n        const target = getDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(`Unsupported event target ${target} for event ${eventName}`);\n        }\n        return this.addEventListener(target, eventName, handler);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass SharedStylesHost {\n    constructor() {\n        /**\n         * \\@internal\n         */\n        this._stylesSet = new Set();\n    }\n    /**\n     * @param {?} styles\n     * @return {?}\n     */\n    addStyles(styles) {\n        /** @type {?} */\n        const additions = new Set();\n        styles.forEach(style => {\n            if (!this._stylesSet.has(style)) {\n                this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    }\n    /**\n     * @param {?} additions\n     * @return {?}\n     */\n    onStylesAdded(additions) { }\n    /**\n     * @return {?}\n     */\n    getAllStyles() { return Array.from(this._stylesSet); }\n}\nSharedStylesHost.decorators = [\n    { type: Injectable }\n];\nclass DomSharedStylesHost extends SharedStylesHost {\n    /**\n     * @param {?} _doc\n     */\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n        this._hostNodes = new Set();\n        this._styleNodes = new Set();\n        this._hostNodes.add(_doc.head);\n    }\n    /**\n     * @param {?} styles\n     * @param {?} host\n     * @return {?}\n     */\n    _addStylesToHost(styles, host) {\n        styles.forEach((style) => {\n            /** @type {?} */\n            const styleEl = this._doc.createElement('style');\n            styleEl.textContent = style;\n            this._styleNodes.add(host.appendChild(styleEl));\n        });\n    }\n    /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n    addHost(hostNode) {\n        this._addStylesToHost(this._stylesSet, hostNode);\n        this._hostNodes.add(hostNode);\n    }\n    /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n    removeHost(hostNode) { this._hostNodes.delete(hostNode); }\n    /**\n     * @param {?} additions\n     * @return {?}\n     */\n    onStylesAdded(additions) {\n        this._hostNodes.forEach(hostNode => this._addStylesToHost(additions, hostNode));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this._styleNodes.forEach(styleNode => getDOM().remove(styleNode)); }\n}\nDomSharedStylesHost.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nDomSharedStylesHost.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\n/** @type {?} */\nconst COMPONENT_REGEX = /%COMP%/g;\n/** @type {?} */\nconst COMPONENT_VARIABLE = '%COMP%';\n/** @type {?} */\nconst HOST_ATTR = `_nghost-${COMPONENT_VARIABLE}`;\n/** @type {?} */\nconst CONTENT_ATTR = `_ngcontent-${COMPONENT_VARIABLE}`;\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} compId\n * @param {?} styles\n * @param {?} target\n * @return {?}\n */\nfunction flattenStyles(compId, styles, target) {\n    for (let i = 0; i < styles.length; i++) {\n        /** @type {?} */\n        let style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\n/**\n * @param {?} eventHandler\n * @return {?}\n */\nfunction decoratePreventDefault(eventHandler) {\n    return (event) => {\n        /** @type {?} */\n        const allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n    };\n}\nclass DomRendererFactory2 {\n    /**\n     * @param {?} eventManager\n     * @param {?} sharedStylesHost\n     */\n    constructor(eventManager, sharedStylesHost) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    /**\n     * @param {?} element\n     * @param {?} type\n     * @return {?}\n     */\n    createRenderer(element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case ViewEncapsulation.Emulated: {\n                /** @type {?} */\n                let renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer =\n                        new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                (/** @type {?} */ (renderer)).applyToHost(element);\n                return renderer;\n            }\n            case ViewEncapsulation.Native:\n            case ViewEncapsulation.ShadowDom:\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    /** @type {?} */\n                    const styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    begin() { }\n    /**\n     * @return {?}\n     */\n    end() { }\n}\nDomRendererFactory2.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nDomRendererFactory2.ctorParameters = () => [\n    { type: EventManager },\n    { type: DomSharedStylesHost }\n];\nclass DefaultDomRenderer2 {\n    /**\n     * @param {?} eventManager\n     */\n    constructor(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    /**\n     * @return {?}\n     */\n    destroy() { }\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    createElement(name, namespace) {\n        if (namespace) {\n            return document.createElementNS(NAMESPACE_URIS[namespace], name);\n        }\n        return document.createElement(name);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    createComment(value) { return document.createComment(value); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    createText(value) { return document.createTextNode(value); }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    appendChild(parent, newChild) { parent.appendChild(newChild); }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    insertBefore(parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    }\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    removeChild(parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    selectRootElement(selectorOrNode) {\n        /** @type {?} */\n        let el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(`The selector \"${selectorOrNode}\" did not match any elements`);\n        }\n        el.textContent = '';\n        return el;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    parentNode(node) { return node.parentNode; }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    nextSibling(node) { return node.nextSibling; }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    setAttribute(el, name, value, namespace) {\n        if (namespace) {\n            name = `${namespace}:${name}`;\n            /** @type {?} */\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    removeAttribute(el, name, namespace) {\n        if (namespace) {\n            /** @type {?} */\n            const namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(`${namespace}:${name}`);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    addClass(el, name) { el.classList.add(name); }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    removeClass(el, name) { el.classList.remove(name); }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    setStyle(el, style, value, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.setProperty(style, value, !!(flags & RendererStyleFlags2.Important) ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    }\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    removeStyle(el, style, flags) {\n        if (flags & RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    }\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    setProperty(el, name, value) {\n        checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    }\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(node, value) { node.nodeValue = value; }\n    /**\n     * @param {?} target\n     * @param {?} event\n     * @param {?} callback\n     * @return {?}\n     */\n    listen(target, event, callback) {\n        checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return /** @type {?} */ (this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback)));\n        }\n        return /** @type {?} */ ((this.eventManager.addEventListener(target, event, decoratePreventDefault(callback))));\n    }\n}\n/** @type {?} */\nconst AT_CHARCODE = '@'.charCodeAt(0);\n/**\n * @param {?} name\n * @param {?} nameKind\n * @return {?}\n */\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(`Found the synthetic ${nameKind} ${name}. Please include either \"BrowserAnimationsModule\" or \"NoopAnimationsModule\" in your application.`);\n    }\n}\nclass EmulatedEncapsulationDomRenderer2 extends DefaultDomRenderer2 {\n    /**\n     * @param {?} eventManager\n     * @param {?} sharedStylesHost\n     * @param {?} component\n     */\n    constructor(eventManager, sharedStylesHost, component) {\n        super(eventManager);\n        this.component = component;\n        /** @type {?} */\n        const styles = flattenStyles(component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        this.contentAttr = shimContentAttribute(component.id);\n        this.hostAttr = shimHostAttribute(component.id);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    applyToHost(element) { super.setAttribute(element, this.hostAttr, ''); }\n    /**\n     * @param {?} parent\n     * @param {?} name\n     * @return {?}\n     */\n    createElement(parent, name) {\n        /** @type {?} */\n        const el = super.createElement(parent, name);\n        super.setAttribute(el, this.contentAttr, '');\n        return el;\n    }\n}\nclass ShadowDomRenderer extends DefaultDomRenderer2 {\n    /**\n     * @param {?} eventManager\n     * @param {?} sharedStylesHost\n     * @param {?} hostEl\n     * @param {?} component\n     */\n    constructor(eventManager, sharedStylesHost, hostEl, component) {\n        super(eventManager);\n        this.sharedStylesHost = sharedStylesHost;\n        this.hostEl = hostEl;\n        this.component = component;\n        if (component.encapsulation === ViewEncapsulation.ShadowDom) {\n            this.shadowRoot = (/** @type {?} */ (hostEl)).attachShadow({ mode: 'open' });\n        }\n        else {\n            this.shadowRoot = (/** @type {?} */ (hostEl)).createShadowRoot();\n        }\n        this.sharedStylesHost.addHost(this.shadowRoot);\n        /** @type {?} */\n        const styles = flattenStyles(component.id, component.styles, []);\n        for (let i = 0; i < styles.length; i++) {\n            /** @type {?} */\n            const styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            this.shadowRoot.appendChild(styleEl);\n        }\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    nodeOrShadowRoot(node) { return node === this.hostEl ? this.shadowRoot : node; }\n    /**\n     * @return {?}\n     */\n    destroy() { this.sharedStylesHost.removeHost(this.shadowRoot); }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    appendChild(parent, newChild) {\n        return super.appendChild(this.nodeOrShadowRoot(parent), newChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    insertBefore(parent, newChild, refChild) {\n        return super.insertBefore(this.nodeOrShadowRoot(parent), newChild, refChild);\n    }\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    removeChild(parent, oldChild) {\n        return super.removeChild(this.nodeOrShadowRoot(parent), oldChild);\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    parentNode(node) {\n        return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(node)));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nconst ɵ0 = function (v) {\n    return '__zone_symbol__' + v;\n};\n/** *\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n  @type {?} */\nconst __symbol__ = (typeof Zone !== 'undefined') && (/** @type {?} */ (Zone))['__symbol__'] || ɵ0;\n/** @type {?} */\nconst ADD_EVENT_LISTENER = __symbol__('addEventListener');\n/** @type {?} */\nconst REMOVE_EVENT_LISTENER = __symbol__('removeEventListener');\n/** @type {?} */\nconst symbolNames = {};\n/** @type {?} */\nconst FALSE = 'FALSE';\n/** @type {?} */\nconst ANGULAR = 'ANGULAR';\n/** @type {?} */\nconst NATIVE_ADD_LISTENER = 'addEventListener';\n/** @type {?} */\nconst NATIVE_REMOVE_LISTENER = 'removeEventListener';\n/** @type {?} */\nconst stopSymbol = '__zone_symbol__propagationStopped';\n/** @type {?} */\nconst stopMethodSymbol = '__zone_symbol__stopImmediatePropagation';\n/** @type {?} */\nconst blackListedEvents = (typeof Zone !== 'undefined') && (/** @type {?} */ (Zone))[__symbol__('BLACK_LISTED_EVENTS')];\n/** @type {?} */\nlet blackListedMap;\nif (blackListedEvents) {\n    blackListedMap = {};\n    blackListedEvents.forEach(eventName => { blackListedMap[eventName] = eventName; });\n}\n/** @type {?} */\nconst isBlackListedEvent = function (eventName) {\n    if (!blackListedMap) {\n        return false;\n    }\n    return blackListedMap.hasOwnProperty(eventName);\n};\n/** @type {?} */\nconst globalListener = function (event) {\n    /** @type {?} */\n    const symbolName = symbolNames[event.type];\n    if (!symbolName) {\n        return;\n    }\n    /** @type {?} */\n    const taskDatas = this[symbolName];\n    if (!taskDatas) {\n        return;\n    }\n    /** @type {?} */\n    const args = [event];\n    if (taskDatas.length === 1) {\n        /** @type {?} */\n        const taskData = taskDatas[0];\n        if (taskData.zone !== Zone.current) {\n            // only use Zone.run when Zone.current not equals to stored zone\n            return taskData.zone.run(taskData.handler, this, args);\n        }\n        else {\n            return taskData.handler.apply(this, args);\n        }\n    }\n    else {\n        /** @type {?} */\n        const copiedTasks = taskDatas.slice();\n        for (let i = 0; i < copiedTasks.length; i++) {\n            // if other listener call event.stopImmediatePropagation\n            // just break\n            if ((/** @type {?} */ (event))[stopSymbol] === true) {\n                break;\n            }\n            /** @type {?} */\n            const taskData = copiedTasks[i];\n            if (taskData.zone !== Zone.current) {\n                // only use Zone.run when Zone.current not equals to stored zone\n                taskData.zone.run(taskData.handler, this, args);\n            }\n            else {\n                taskData.handler.apply(this, args);\n            }\n        }\n    }\n};\nclass DomEventsPlugin extends EventManagerPlugin {\n    /**\n     * @param {?} doc\n     * @param {?} ngZone\n     * @param {?} platformId\n     */\n    constructor(doc, ngZone, platformId) {\n        super(doc);\n        this.ngZone = ngZone;\n        if (!platformId || !isPlatformServer(platformId)) {\n            this.patchEvent();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    patchEvent() {\n        if (typeof Event === 'undefined' || !Event || !Event.prototype) {\n            return;\n        }\n        if ((/** @type {?} */ (Event.prototype))[stopMethodSymbol]) {\n            // already patched by zone.js\n            return;\n        }\n        /** @type {?} */\n        const delegate = (/** @type {?} */ (Event.prototype))[stopMethodSymbol] =\n            Event.prototype.stopImmediatePropagation;\n        Event.prototype.stopImmediatePropagation = function () {\n            if (this) {\n                this[stopSymbol] = true;\n            }\n            // should call native delegate in case\n            // in some environment part of the application\n            // will not use the patched Event\n            delegate && delegate.apply(this, arguments);\n        };\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    supports(eventName) { return true; }\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    addEventListener(element, eventName, handler) {\n        /** @type {?} */\n        const zoneJsLoaded = element[ADD_EVENT_LISTENER];\n        /** @type {?} */\n        let callback = /** @type {?} */ (handler);\n        // if zonejs is loaded and current zone is not ngZone\n        // we keep Zone.current on target for later restoration.\n        if (zoneJsLoaded && (!NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n            /** @type {?} */\n            let symbolName = symbolNames[eventName];\n            if (!symbolName) {\n                symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n            }\n            /** @type {?} */\n            let taskDatas = (/** @type {?} */ (element))[symbolName];\n            /** @type {?} */\n            const globalListenerRegistered = taskDatas && taskDatas.length > 0;\n            if (!taskDatas) {\n                taskDatas = (/** @type {?} */ (element))[symbolName] = [];\n            }\n            /** @type {?} */\n            const zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n            if (taskDatas.length === 0) {\n                taskDatas.push({ zone: zone, handler: callback });\n            }\n            else {\n                /** @type {?} */\n                let callbackRegistered = false;\n                for (let i = 0; i < taskDatas.length; i++) {\n                    if (taskDatas[i].handler === callback) {\n                        callbackRegistered = true;\n                        break;\n                    }\n                }\n                if (!callbackRegistered) {\n                    taskDatas.push({ zone: zone, handler: callback });\n                }\n            }\n            if (!globalListenerRegistered) {\n                element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n            }\n        }\n        else {\n            element[NATIVE_ADD_LISTENER](eventName, callback, false);\n        }\n        return () => this.removeEventListener(element, eventName, callback);\n    }\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    removeEventListener(target, eventName, callback) {\n        /** @type {?} */\n        let underlyingRemove = target[REMOVE_EVENT_LISTENER];\n        // zone.js not loaded, use native removeEventListener\n        if (!underlyingRemove) {\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        /** @type {?} */\n        let symbolName = symbolNames[eventName];\n        /** @type {?} */\n        let taskDatas = symbolName && target[symbolName];\n        if (!taskDatas) {\n            // addEventListener not using patched version\n            // just call native removeEventListener\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        /** @type {?} */\n        let found = false;\n        for (let i = 0; i < taskDatas.length; i++) {\n            // remove listener from taskDatas if the callback equals\n            if (taskDatas[i].handler === callback) {\n                found = true;\n                taskDatas.splice(i, 1);\n                break;\n            }\n        }\n        if (found) {\n            if (taskDatas.length === 0) {\n                // all listeners are removed, we can remove the globalListener from target\n                underlyingRemove.apply(target, [eventName, globalListener, false]);\n            }\n        }\n        else {\n            // not found in taskDatas, the callback may be added inside of ngZone\n            // use native remove listener to remove the callback\n            target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n    }\n}\nDomEventsPlugin.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nDomEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Supported HammerJS recognizer event names.\n  @type {?} */\nconst EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n};\n/** *\n * DI token for providing [HammerJS](http://hammerjs.github.io/) support to Angular.\n * @see `HammerGestureConfig`\n *\n * \\@experimental\n  @type {?} */\nconst HAMMER_GESTURE_CONFIG = new InjectionToken('HammerGestureConfig');\n/** *\n * Injection token used to provide a {\\@link HammerLoader} to Angular.\n  @type {?} */\nconst HAMMER_LOADER = new InjectionToken('HammerLoader');\n/**\n * An injectable [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n * for gesture recognition. Configures specific event recognition.\n * \\@experimental\n */\nclass HammerGestureConfig {\n    constructor() {\n        /**\n         * A set of supported event names for gestures to be used in Angular.\n         * Angular supports all built-in recognizers, as listed in\n         * [HammerJS documentation](http://hammerjs.github.io/).\n         */\n        this.events = [];\n        /**\n         * Maps gesture event names to a set of configuration options\n         * that specify overrides to the default values for specific properties.\n         *\n         * The key is a supported event name to be configured,\n         * and the options object contains a set of properties, with override values\n         * to be applied to the named recognizer event.\n         * For example, to disable recognition of the rotate event, specify\n         *  `{\"rotate\": {\"enable\": false}}`.\n         *\n         * Properties that are not present take the HammerJS default values.\n         * For information about which properties are supported for which events,\n         * and their allowed and default values, see\n         * [HammerJS documentation](http://hammerjs.github.io/).\n         *\n         */\n        this.overrides = {};\n    }\n    /**\n     * Creates a [HammerJS Manager](http://hammerjs.github.io/api/#hammer.manager)\n     * and attaches it to a given HTML element.\n     * @param {?} element The element that will recognize gestures.\n     * @return {?} A HammerJS event-manager object.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const mc = new /** @type {?} */ ((Hammer))(element, this.options);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (const eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    }\n}\nHammerGestureConfig.decorators = [\n    { type: Injectable }\n];\nclass HammerGesturesPlugin extends EventManagerPlugin {\n    /**\n     * @param {?} doc\n     * @param {?} _config\n     * @param {?} console\n     * @param {?=} loader\n     */\n    constructor(doc, _config, console, loader) {\n        super(doc);\n        this._config = _config;\n        this.console = console;\n        this.loader = loader;\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    supports(eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!(/** @type {?} */ (window)).Hammer && !this.loader) {\n            this.console.warn(`The \"${eventName}\" event cannot be bound because Hammer.JS is not ` +\n                `loaded and no custom loader has been specified.`);\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    addEventListener(element, eventName, handler) {\n        /** @type {?} */\n        const zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        // If Hammer is not present but a loader is specified, we defer adding the event listener\n        // until Hammer is loaded.\n        if (!(/** @type {?} */ (window)).Hammer && this.loader) {\n            /** @type {?} */\n            let cancelRegistration = false;\n            /** @type {?} */\n            let deregister = () => { cancelRegistration = true; };\n            this.loader()\n                .then(() => {\n                // If Hammer isn't actually loaded when the custom loader resolves, give up.\n                if (!(/** @type {?} */ (window)).Hammer) {\n                    this.console.warn(`The custom HAMMER_LOADER completed, but Hammer.JS is not present.`);\n                    deregister = () => { };\n                    return;\n                }\n                if (!cancelRegistration) {\n                    // Now that Hammer is loaded and the listener is being loaded for real,\n                    // the deregistration function changes from canceling registration to removal.\n                    deregister = this.addEventListener(element, eventName, handler);\n                }\n            })\n                .catch(() => {\n                this.console.warn(`The \"${eventName}\" event cannot be bound because the custom ` +\n                    `Hammer.JS loader failed.`);\n                deregister = () => { };\n            });\n            // Return a function that *executes* `deregister` (and not `deregister` itself) so that we\n            // can change the behavior of `deregister` once the listener is added. Using a closure in\n            // this way allows us to avoid any additional data structures to track listener removal.\n            return () => { deregister(); };\n        }\n        return zone.runOutsideAngular(() => {\n            /** @type {?} */\n            const mc = this._config.buildHammer(element);\n            /** @type {?} */\n            const callback = function (eventObj) {\n                zone.runGuarded(function () { handler(eventObj); });\n            };\n            mc.on(eventName, callback);\n            return () => {\n                mc.off(eventName, callback);\n                // destroy mc to prevent memory leak\n                if (typeof mc.destroy === 'function') {\n                    mc.destroy();\n                }\n            };\n        });\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    isCustomEvent(eventName) { return this._config.events.indexOf(eventName) > -1; }\n}\nHammerGesturesPlugin.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHammerGesturesPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] },\n    { type: HammerGestureConfig, decorators: [{ type: Inject, args: [HAMMER_GESTURE_CONFIG,] }] },\n    { type: ɵConsole },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [HAMMER_LOADER,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Defines supported modifiers for key events.\n  @type {?} */\nconst MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nconst ɵ0$1 = (event) => event.altKey, ɵ1$1 = (event) => event.ctrlKey, ɵ2$1 = (event) => event.metaKey, ɵ3 = (event) => event.shiftKey;\n/** *\n * Retrieves modifiers from key-event objects.\n  @type {?} */\nconst MODIFIER_KEY_GETTERS = {\n    'alt': ɵ0$1,\n    'control': ɵ1$1,\n    'meta': ɵ2$1,\n    'shift': ɵ3\n};\n/**\n * \\@experimental\n * A browser plug-in that provides support for handling of key events in Angular.\n */\nclass KeyEventsPlugin extends EventManagerPlugin {\n    /**\n     * Initializes an instance of the browser plug-in.\n     * @param {?} doc The document in which key events will be detected.\n     */\n    constructor(doc) { super(doc); }\n    /**\n     * Reports whether a named key event is supported.\n     * @param {?} eventName The event name to query.\n     * @return {?} True if the named key event is supported.\n     */\n    supports(eventName) { return KeyEventsPlugin.parseEventName(eventName) != null; }\n    /**\n     * Registers a handler for a specific element and key event.\n     * @param {?} element The HTML element to receive event notifications.\n     * @param {?} eventName The name of the key event to listen for.\n     * @param {?} handler A function to call when the notification occurs. Receives the\n     * event object as an argument.\n     * @return {?} The key event that was registered.\n     */\n    addEventListener(element, eventName, handler) {\n        /** @type {?} */\n        const parsedEvent = /** @type {?} */ ((KeyEventsPlugin.parseEventName(eventName)));\n        /** @type {?} */\n        const outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(() => {\n            return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    static parseEventName(eventName) {\n        /** @type {?} */\n        const parts = eventName.toLowerCase().split('.');\n        /** @type {?} */\n        const domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        /** @type {?} */\n        const key = KeyEventsPlugin._normalizeKey(/** @type {?} */ ((parts.pop())));\n        /** @type {?} */\n        let fullKey = '';\n        MODIFIER_KEYS.forEach(modifierName => {\n            /** @type {?} */\n            const index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        /** @type {?} */\n        const result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    static getEventFullKey(event) {\n        /** @type {?} */\n        let fullKey = '';\n        /** @type {?} */\n        let key = getDOM().getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(modifierName => {\n            if (modifierName != key) {\n                /** @type {?} */\n                const modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    }\n    /**\n     * Configures a handler callback for a key event.\n     * @param {?} fullKey The event name that combines all simultaneous keystrokes.\n     * @param {?} handler The function that responds to the key event.\n     * @param {?} zone The zone in which the event occurred.\n     * @return {?} A callback function.\n     */\n    static eventCallback(fullKey, handler, zone) {\n        return (event /** TODO #9100 */) => {\n            if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(() => handler(event));\n            }\n        };\n    }\n    /**\n     * \\@internal\n     * @param {?} keyName\n     * @return {?}\n     */\n    static _normalizeKey(keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    }\n}\nKeyEventsPlugin.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nKeyEventsPlugin.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n *\n * @abstract\n */\nclass DomSanitizer {\n}\nclass DomSanitizerImpl extends DomSanitizer {\n    /**\n     * @param {?} _doc\n     */\n    constructor(_doc) {\n        super();\n        this._doc = _doc;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} value\n     * @return {?}\n     */\n    sanitize(ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case SecurityContext.NONE:\n                return /** @type {?} */ (value);\n            case SecurityContext.HTML:\n                if (value instanceof SafeHtmlImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'HTML');\n                return ɵ_sanitizeHtml(this._doc, String(value));\n            case SecurityContext.STYLE:\n                if (value instanceof SafeStyleImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Style');\n                return ɵ_sanitizeStyle(/** @type {?} */ (value));\n            case SecurityContext.SCRIPT:\n                if (value instanceof SafeScriptImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Script');\n                throw new Error('unsafe value used in a script context');\n            case SecurityContext.URL:\n                if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                    // Allow resource URLs in URL contexts, they are strictly more trusted.\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'URL');\n                return ɵ_sanitizeUrl(String(value));\n            case SecurityContext.RESOURCE_URL:\n                if (value instanceof SafeResourceUrlImpl) {\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'ResourceURL');\n                throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n            default:\n                throw new Error(`Unexpected SecurityContext ${ctx} (see http://g.co/ng/security#xss)`);\n        }\n    }\n    /**\n     * @param {?} value\n     * @param {?} expectedType\n     * @return {?}\n     */\n    checkNotSafeValue(value, expectedType) {\n        if (value instanceof SafeValueImpl) {\n            throw new Error(`Required a safe ${expectedType}, got a ${value.getTypeName()} ` +\n                `(see http://g.co/ng/security#xss)`);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    bypassSecurityTrustHtml(value) { return new SafeHtmlImpl(value); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    bypassSecurityTrustStyle(value) { return new SafeStyleImpl(value); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    bypassSecurityTrustScript(value) { return new SafeScriptImpl(value); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    bypassSecurityTrustUrl(value) { return new SafeUrlImpl(value); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    bypassSecurityTrustResourceUrl(value) {\n        return new SafeResourceUrlImpl(value);\n    }\n}\nDomSanitizerImpl.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nDomSanitizerImpl.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\n];\n/**\n * @abstract\n */\nclass SafeValueImpl {\n    /**\n     * @param {?} changingThisBreaksApplicationSecurity\n     */\n    constructor(changingThisBreaksApplicationSecurity) {\n        // empty\n        this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity}` +\n            ` (see http://g.co/ng/security#xss)`;\n    }\n}\nclass SafeHtmlImpl extends SafeValueImpl {\n    /**\n     * @return {?}\n     */\n    getTypeName() { return 'HTML'; }\n}\nclass SafeStyleImpl extends SafeValueImpl {\n    /**\n     * @return {?}\n     */\n    getTypeName() { return 'Style'; }\n}\nclass SafeScriptImpl extends SafeValueImpl {\n    /**\n     * @return {?}\n     */\n    getTypeName() { return 'Script'; }\n}\nclass SafeUrlImpl extends SafeValueImpl {\n    /**\n     * @return {?}\n     */\n    getTypeName() { return 'URL'; }\n}\nclass SafeResourceUrlImpl extends SafeValueImpl {\n    /**\n     * @return {?}\n     */\n    getTypeName() { return 'ResourceURL'; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n    { provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT$1] },\n    { provide: DOCUMENT$1, useFactory: _document, deps: [] },\n];\n/** *\n * \\@security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * \\@experimental\n  @type {?} */\nconst BROWSER_SANITIZATION_PROVIDERS = [\n    { provide: Sanitizer, useExisting: DomSanitizer },\n    { provide: DomSanitizer, useClass: DomSanitizerImpl, deps: [DOCUMENT$1] },\n];\n/** @type {?} */\nconst platformBrowser = createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\n/**\n * @return {?}\n */\nfunction errorHandler() {\n    return new ErrorHandler();\n}\n/**\n * @return {?}\n */\nfunction _document() {\n    return document;\n}\n/** @type {?} */\nconst BROWSER_MODULE_PROVIDERS = [\n    BROWSER_SANITIZATION_PROVIDERS,\n    { provide: ɵAPP_ROOT, useValue: true },\n    { provide: ErrorHandler, useFactory: errorHandler, deps: [] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: DomEventsPlugin,\n        multi: true,\n        deps: [DOCUMENT$1, NgZone, PLATFORM_ID]\n    },\n    { provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true, deps: [DOCUMENT$1] },\n    {\n        provide: EVENT_MANAGER_PLUGINS,\n        useClass: HammerGesturesPlugin,\n        multi: true,\n        deps: [DOCUMENT$1, HAMMER_GESTURE_CONFIG, ɵConsole, [new Optional(), HAMMER_LOADER]]\n    },\n    { provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig, deps: [] },\n    {\n        provide: DomRendererFactory2,\n        useClass: DomRendererFactory2,\n        deps: [EventManager, DomSharedStylesHost]\n    },\n    { provide: RendererFactory2, useExisting: DomRendererFactory2 },\n    { provide: SharedStylesHost, useExisting: DomSharedStylesHost },\n    { provide: DomSharedStylesHost, useClass: DomSharedStylesHost, deps: [DOCUMENT$1] },\n    { provide: Testability, useClass: Testability, deps: [NgZone] },\n    { provide: EventManager, useClass: EventManager, deps: [EVENT_MANAGER_PLUGINS, NgZone] },\n    ELEMENT_PROBE_PROVIDERS,\n];\n/**\n * Exports required infrastructure for all Angular apps.\n * Included by defaults in all Angular apps created with the CLI\n * `new` command.\n * Re-exports `CommonModule` and `ApplicationModule`, making their\n * exports and providers available to all apps.\n *\n *\n */\nclass BrowserModule {\n    /**\n     * @param {?} parentModule\n     */\n    constructor(parentModule) {\n        if (parentModule) {\n            throw new Error(`BrowserModule has already been loaded. If you need access to common directives such as NgIf and NgFor from a lazy loaded module, import CommonModule instead.`);\n        }\n    }\n    /**\n     * Configures a browser-based app to transition from a server-rendered app, if\n     * one is present on the page.\n     *\n     * \\@experimental\n     * @param {?} params An object containing an identifier for the app to transition.\n     * The ID must match between the client and server versions of the app.\n     * @return {?} The reconfigured `BrowserModule` to import into the app's root `AppModule`.\n     *\n     */\n    static withServerTransition(params) {\n        return {\n            ngModule: BrowserModule,\n            providers: [\n                { provide: APP_ID, useValue: params.appId },\n                { provide: TRANSITION_ID, useExisting: APP_ID },\n                SERVER_TRANSITION_PROVIDERS,\n            ],\n        };\n    }\n}\nBrowserModule.decorators = [\n    { type: NgModule, args: [{ providers: BROWSER_MODULE_PROVIDERS, exports: [CommonModule, ApplicationModule] },] }\n];\n/** @nocollapse */\nBrowserModule.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [BrowserModule,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Factory to create Meta service.\n * @return {?}\n */\nfunction createMeta() {\n    return new Meta(inject(DOCUMENT$1));\n}\n/**\n * A service that can be used to get and add meta tags.\n *\n * \\@experimental\n */\nclass Meta {\n    /**\n     * @param {?} _doc\n     */\n    constructor(_doc) {\n        this._doc = _doc;\n        this._dom = getDOM();\n    }\n    /**\n     * @param {?} tag\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    addTag(tag, forceCreation = false) {\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    }\n    /**\n     * @param {?} tags\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    addTags(tags, forceCreation = false) {\n        if (!tags)\n            return [];\n        return tags.reduce((result, tag) => {\n            if (tag) {\n                result.push(this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    }\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    getTag(attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._dom.querySelector(this._doc, `meta[${attrSelector}]`) || null;\n    }\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    getTags(attrSelector) {\n        if (!attrSelector)\n            return [];\n        /** @type {?} */\n        const list = this._dom.querySelectorAll(this._doc, `meta[${attrSelector}]`);\n        return list ? [].slice.call(list) : [];\n    }\n    /**\n     * @param {?} tag\n     * @param {?=} selector\n     * @return {?}\n     */\n    updateTag(tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        /** @type {?} */\n        const meta = /** @type {?} */ ((this.getTag(selector)));\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    }\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    removeTag(attrSelector) { this.removeTagElement(/** @type {?} */ ((this.getTag(attrSelector)))); }\n    /**\n     * @param {?} meta\n     * @return {?}\n     */\n    removeTagElement(meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    }\n    /**\n     * @param {?} meta\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    _getOrCreateElement(meta, forceCreation = false) {\n        if (!forceCreation) {\n            /** @type {?} */\n            const selector = this._parseSelector(meta);\n            /** @type {?} */\n            const elem = /** @type {?} */ ((this.getTag(selector)));\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            if (elem && this._containsAttributes(meta, elem))\n                return elem;\n        }\n        /** @type {?} */\n        const element = /** @type {?} */ (this._dom.createElement('meta'));\n        this._setMetaElementAttributes(meta, element);\n        /** @type {?} */\n        const head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n        this._dom.appendChild(head, element);\n        return element;\n    }\n    /**\n     * @param {?} tag\n     * @param {?} el\n     * @return {?}\n     */\n    _setMetaElementAttributes(tag, el) {\n        Object.keys(tag).forEach((prop) => this._dom.setAttribute(el, prop, tag[prop]));\n        return el;\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _parseSelector(tag) {\n        /** @type {?} */\n        const attr = tag.name ? 'name' : 'property';\n        return `${attr}=\"${tag[attr]}\"`;\n    }\n    /**\n     * @param {?} tag\n     * @param {?} elem\n     * @return {?}\n     */\n    _containsAttributes(tag, elem) {\n        return Object.keys(tag).every((key) => this._dom.getAttribute(elem, key) === tag[key]);\n    }\n}\nMeta.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root', useFactory: createMeta, deps: [] },] }\n];\n/** @nocollapse */\nMeta.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\n];\n/** @nocollapse */ Meta.ngInjectableDef = defineInjectable({ factory: createMeta, token: Meta, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Factory to create Title service.\n * @return {?}\n */\nfunction createTitle() {\n    return new Title(inject(DOCUMENT$1));\n}\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * \\@experimental\n */\nclass Title {\n    /**\n     * @param {?} _doc\n     */\n    constructor(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     * @return {?}\n     */\n    getTitle() { return getDOM().getTitle(this._doc); }\n    /**\n     * Set the title of the current HTML document.\n     * @param {?} newTitle\n     * @return {?}\n     */\n    setTitle(newTitle) { getDOM().setTitle(this._doc, newTitle); }\n}\nTitle.decorators = [\n    { type: Injectable, args: [{ providedIn: 'root', useFactory: createTitle, deps: [] },] }\n];\n/** @nocollapse */\nTitle.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT$1,] }] }\n];\n/** @nocollapse */ Title.ngInjectableDef = defineInjectable({ factory: createTitle, token: Title, providedIn: \"root\" });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst win = typeof window !== 'undefined' && window || /** @type {?} */ ({});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ChangeDetectionPerfRecord {\n    /**\n     * @param {?} msPerTick\n     * @param {?} numTicks\n     */\n    constructor(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n}\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nclass AngularProfiler {\n    /**\n     * @param {?} ref\n     */\n    constructor(ref) { this.appRef = ref.injector.get(ApplicationRef); }\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    timeChangeDetection(config) {\n        /** @type {?} */\n        const record = config && config['record'];\n        /** @type {?} */\n        const profileName = 'Change Detection';\n        /** @type {?} */\n        const isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        /** @type {?} */\n        const start = getDOM().performanceNow();\n        /** @type {?} */\n        let numTicks = 0;\n        while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        /** @type {?} */\n        const end = getDOM().performanceNow();\n        if (record && isProfilerAvailable) {\n            // need to cast to <any> because type checker thinks there's no argument\n            // while in fact there is:\n            //\n            // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n            (/** @type {?} */ (win.console.profileEnd))(profileName);\n        }\n        /** @type {?} */\n        const msPerTick = (end - start) / numTicks;\n        win.console.log(`ran ${numTicks} change detection cycles`);\n        win.console.log(`${msPerTick.toFixed(2)} ms per check`);\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PROFILER_GLOBAL_NAME = 'profiler';\n/**\n * Enabled Angular debug tools that are accessible via your browser's\n * developer console.\n *\n * Usage:\n *\n * 1. Open developer console (e.g. in Chrome Ctrl + Shift + j)\n * 1. Type `ng.` (usually the console will show auto-complete suggestion)\n * 1. Try the change detection profiler `ng.profiler.timeChangeDetection()`\n *    then hit Enter.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @template T\n * @param {?} ref\n * @return {?}\n */\nfunction enableDebugTools(ref) {\n    exportNgVar(PROFILER_GLOBAL_NAME, new AngularProfiler(ref));\n    return ref;\n}\n/**\n * Disables Angular tools.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @return {?}\n */\nfunction disableDebugTools() {\n    exportNgVar(PROFILER_GLOBAL_NAME, null);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} text\n * @return {?}\n */\nfunction escapeHtml(text) {\n    /** @type {?} */\n    const escapedText = {\n        '&': '&a;',\n        '\"': '&q;',\n        '\\'': '&s;',\n        '<': '&l;',\n        '>': '&g;',\n    };\n    return text.replace(/[&\"'<>]/g, s => escapedText[s]);\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction unescapeHtml(text) {\n    /** @type {?} */\n    const unescapedText = {\n        '&a;': '&',\n        '&q;': '\"',\n        '&s;': '\\'',\n        '&l;': '<',\n        '&g;': '>',\n    };\n    return text.replace(/&[^;]+;/g, s => unescapedText[s]);\n}\n/**\n * Create a `StateKey<T>` that can be used to store value of type T with `TransferState`.\n *\n * Example:\n *\n * ```\n * const COUNTER_KEY = makeStateKey<number>('counter');\n * let value = 10;\n *\n * transferState.set(COUNTER_KEY, value);\n * ```\n *\n * \\@experimental\n * @template T\n * @param {?} key\n * @return {?}\n */\nfunction makeStateKey(key) {\n    return /** @type {?} */ (key);\n}\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * \\@experimental\n */\nclass TransferState {\n    constructor() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /**\n     * \\@internal\n     * @param {?} initState\n     * @return {?}\n     */\n    static init(initState) {\n        /** @type {?} */\n        const transferState = new TransferState();\n        transferState.store = initState;\n        return transferState;\n    }\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     * @template T\n     * @param {?} key\n     * @param {?} defaultValue\n     * @return {?}\n     */\n    get(key, defaultValue) {\n        return this.store[key] !== undefined ? /** @type {?} */ (this.store[key]) : defaultValue;\n    }\n    /**\n     * Set the value corresponding to a key.\n     * @template T\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    set(key, value) { this.store[key] = value; }\n    /**\n     * Remove a key from the store.\n     * @template T\n     * @param {?} key\n     * @return {?}\n     */\n    remove(key) { delete this.store[key]; }\n    /**\n     * Test whether a key exists in the store.\n     * @template T\n     * @param {?} key\n     * @return {?}\n     */\n    hasKey(key) { return this.store.hasOwnProperty(key); }\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     * @template T\n     * @param {?} key\n     * @param {?} callback\n     * @return {?}\n     */\n    onSerialize(key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    }\n    /**\n     * Serialize the current state of the store to JSON.\n     * @return {?}\n     */\n    toJson() {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (const key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    }\n}\nTransferState.decorators = [\n    { type: Injectable }\n];\n/**\n * @param {?} doc\n * @param {?} appId\n * @return {?}\n */\nfunction initTransferState(doc, appId) {\n    /** @type {?} */\n    const script = doc.getElementById(appId + '-state');\n    /** @type {?} */\n    let initialState = {};\n    if (script && script.textContent) {\n        try {\n            initialState = JSON.parse(unescapeHtml(script.textContent));\n        }\n        catch (e) {\n            console.warn('Exception while restoring TransferState for app ' + appId, e);\n        }\n    }\n    return TransferState.init(initialState);\n}\n/**\n * NgModule to install on the client side while using the `TransferState` to transfer state from\n * server to client.\n *\n * \\@experimental\n */\nclass BrowserTransferStateModule {\n}\nBrowserTransferStateModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [{ provide: TransferState, useFactory: initTransferState, deps: [DOCUMENT$1, APP_ID] }],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Predicates for use with {\\@link DebugElement}'s query functions.\n *\n * \\@experimental All debugging apis are currently experimental.\n */\nclass By {\n    /**\n     * Match all elements.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_all'}\n     * @return {?}\n     */\n    static all() { return (debugElement) => true; }\n    /**\n     * Match elements by the given CSS selector.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_css'}\n     * @param {?} selector\n     * @return {?}\n     */\n    static css(selector) {\n        return (debugElement) => {\n            return debugElement.nativeElement != null ?\n                getDOM().elementMatches(debugElement.nativeElement, selector) :\n                false;\n        };\n    }\n    /**\n     * Match elements that have the given directive present.\n     *\n     * \\@usageNotes\n     * ### Example\n     *\n     * {\\@example platform-browser/dom/debug/ts/by/by.ts region='by_directive'}\n     * @param {?} type\n     * @return {?}\n     */\n    static directive(type) {\n        return (debugElement) => /** @type {?} */ ((debugElement.providerTokens)).indexOf(type) !== -1;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VERSION = new Version('6.1.10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BROWSER_MODULE_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_c, _document as ɵangular_packages_platform_browser_platform_browser_b, errorHandler as ɵangular_packages_platform_browser_platform_browser_a, GenericBrowserDomAdapter as ɵangular_packages_platform_browser_platform_browser_k, createMeta as ɵangular_packages_platform_browser_platform_browser_d, SERVER_TRANSITION_PROVIDERS as ɵangular_packages_platform_browser_platform_browser_i, appInitializerFactory as ɵangular_packages_platform_browser_platform_browser_h, createTitle as ɵangular_packages_platform_browser_platform_browser_e, initTransferState as ɵangular_packages_platform_browser_platform_browser_f, _createNgProbe as ɵangular_packages_platform_browser_platform_browser_j, EventManagerPlugin as ɵangular_packages_platform_browser_platform_browser_g, BrowserModule, platformBrowser, Meta, Title, disableDebugTools, enableDebugTools, BrowserTransferStateModule, TransferState, makeStateKey, By, DOCUMENT$1 as DOCUMENT, EVENT_MANAGER_PLUGINS, EventManager, HAMMER_GESTURE_CONFIG, HAMMER_LOADER, HammerGestureConfig, DomSanitizer, VERSION, BROWSER_SANITIZATION_PROVIDERS as ɵBROWSER_SANITIZATION_PROVIDERS, INTERNAL_BROWSER_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS, initDomAdapter as ɵinitDomAdapter, BrowserDomAdapter as ɵBrowserDomAdapter, BrowserPlatformLocation as ɵBrowserPlatformLocation, TRANSITION_ID as ɵTRANSITION_ID, BrowserGetTestability as ɵBrowserGetTestability, escapeHtml as ɵescapeHtml, ELEMENT_PROBE_PROVIDERS as ɵELEMENT_PROBE_PROVIDERS, DomAdapter as ɵDomAdapter, getDOM as ɵgetDOM, setRootDomAdapter as ɵsetRootDomAdapter, DomRendererFactory2 as ɵDomRendererFactory2, NAMESPACE_URIS as ɵNAMESPACE_URIS, flattenStyles as ɵflattenStyles, shimContentAttribute as ɵshimContentAttribute, shimHostAttribute as ɵshimHostAttribute, DomEventsPlugin as ɵDomEventsPlugin, HammerGesturesPlugin as ɵHammerGesturesPlugin, KeyEventsPlugin as ɵKeyEventsPlugin, DomSharedStylesHost as ɵDomSharedStylesHost, SharedStylesHost as ɵSharedStylesHost, DomSanitizerImpl as ɵDomSanitizerImpl };\n//# sourceMappingURL=platform-browser.js.map\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { map } from '../operators/map';\n/* tslint:enable:max-line-length */\n/**\n * Joins last values emitted by passed Observables.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * <img src=\"./img/forkJoin.png\" width=\"100%\">\n *\n * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n * or directly as arguments. If no input Observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first Observable,\n * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n * not emit more than once and it will complete after that. If you need to emit combined values not only\n * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input Observables, whenever any of\n * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other Observables.\n * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other Observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * Observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output Observable is supposed to emit a result.\n *\n * @example <caption>Use forkJoin with operator emitting immediately</caption>\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin(\n *   of(1, 2, 3, 4),\n *   of(5, 6, 7, 8)\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [4, 8]\n * // \"This is how it ends!\"\n *\n *\n * @example <caption>Use forkJoin with operator emitting after some time</caption>\n * import { forkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)) // emit 0, 1, 2, 3 every half a second and complete\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // [2, 3] after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n *\n * @example <caption>Use forkJoin with project function</caption>\n * import { jorkJoin, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const observable = forkJoin(\n *   interval(1000).pipe(take(3)), // emit 0, 1, 2 every second and complete\n *   interval(500).pipe(take(4)), // emit 0, 1, 2, 3 every half a second and complete\n *   (n, m) => n + m\n * );\n * observable.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('This is how it ends!')\n * );\n *\n * // Logs:\n * // 5 after 3 seconds\n * // \"This is how it ends!\" immediately after\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(...sources) {\n    let resultSelector;\n    if (typeof sources[sources.length - 1] === 'function') {\n        // DEPRECATED PATH\n        resultSelector = sources.pop();\n    }\n    // if the first and only other argument is an array\n    // assume it's been called with `forkJoin([obs1, obs2, obs3])`\n    if (sources.length === 1 && isArray(sources[0])) {\n        sources = sources[0];\n    }\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return forkJoin(sources).pipe(map(args => resultSelector(...args)));\n    }\n    return new Observable(subscriber => {\n        return new ForkJoinSubscriber(subscriber, sources);\n    });\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ForkJoinSubscriber extends OuterSubscriber {\n    constructor(destination, sources) {\n        super(destination);\n        this.sources = sources;\n        this.completed = 0;\n        this.haveValues = 0;\n        const len = sources.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            const source = sources[i];\n            const innerSubscription = subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                this.add(innerSubscription);\n            }\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    }\n    notifyComplete(innerSub) {\n        const { destination, haveValues, values } = this;\n        const len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            destination.next(values);\n        }\n        destination.complete();\n    }\n}\n//# sourceMappingURL=forkJoin.js.map","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","// typeof any so that it we don't have to cast when comparing a result to the error object\nexport const errorObject = { e: {} };\n//# sourceMappingURL=errorObject.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link switch}.</span>\n *\n * <img src=\"./img/switchMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMap((ev) => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switch}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return (source) => source.pipe(switchMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new SwitchMapOperator(project));\n}\nclass SwitchMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber extends OuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.index = 0;\n    }\n    _next(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result, value, index);\n    }\n    _innerSub(result, value, index) {\n        const innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        this.add(this.innerSubscription = subscribeToResult(this, result, value, index));\n    }\n    _complete() {\n        const { innerSubscription } = this;\n        if (!innerSubscription || innerSubscription.closed) {\n            super._complete();\n        }\n    }\n    _unsubscribe() {\n        this.innerSubscription = null;\n    }\n    notifyComplete(innerSub) {\n        this.remove(innerSub);\n        this.innerSubscription = null;\n        if (this.isStopped) {\n            super._complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n}\n//# sourceMappingURL=switchMap.js.map","import { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport const empty = {\n    closed: true,\n    next(value) { },\n    error(err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete() { }\n};\n//# sourceMappingURL=Observer.js.map","/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { Component, ɵisObservable, ɵisPromise, NgModuleRef, InjectionToken, NgModuleFactory, NgZone, isDevMode, ɵConsole, Attribute, Directive, ElementRef, HostBinding, HostListener, Input, Renderer2, ChangeDetectorRef, ContentChildren, ComponentFactoryResolver, EventEmitter, Output, ViewContainerRef, Compiler, Injectable, Injector, NgModuleFactoryLoader, ANALYZE_FOR_ENTRY_COMPONENTS, APP_BOOTSTRAP_LISTENER, APP_INITIALIZER, ApplicationRef, Inject, NgModule, NgProbeToken, Optional, SkipSelf, SystemJsNgModuleLoader, Version } from '@angular/core';\nimport { from, of, EmptyError, Observable, BehaviorSubject, Subject } from 'rxjs';\nimport { concatAll, every, last, map, mergeAll, catchError, first, mergeMap, concatMap, reduce, filter } from 'rxjs/operators';\nimport { LocationStrategy, APP_BASE_HREF, HashLocationStrategy, LOCATION_INITIALIZED, Location, PathLocationStrategy, PlatformLocation, ViewportScroller } from '@angular/common';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nclass RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     */\n    constructor(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a navigation starts.\n *\n *\n */\nclass NavigationStart extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?=} navigationTrigger\n     * @param {?=} restoredState\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    /** @docsNotRequired */\n    navigationTrigger = 'imperative', /** @docsNotRequired */\n    /** @docsNotRequired */\n    restoredState = null) {\n        super(id, url);\n        this.navigationTrigger = navigationTrigger;\n        this.restoredState = restoredState;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return `NavigationStart(id: ${this.id}, url: '${this.url}')`; }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a navigation ends successfully.\n *\n *\n */\nclass NavigationEnd extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() {\n        return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a navigation is canceled.\n *\n *\n */\nclass NavigationCancel extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} reason\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, reason) {\n        super(id, url);\n        this.reason = reason;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return `NavigationCancel(id: ${this.id}, url: '${this.url}')`; }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a navigation fails due to an unexpected error.\n *\n *\n */\nclass NavigationError extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} error\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, error) {\n        super(id, url);\n        this.error = error;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() {\n        return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when routes are recognized.\n *\n *\n */\nclass RoutesRecognized extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() {\n        return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nclass GuardsCheckStart extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nclass GuardsCheckEnd extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     * @param {?} shouldActivate\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state, shouldActivate) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n        this.shouldActivate = shouldActivate;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nclass ResolveStart extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the end of the Resolve phase of routing. See note on\n * `ResolveStart` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ResolveEnd extends RouterEvent {\n    /**\n     * @param {?} id\n     * @param {?} url\n     * @param {?} urlAfterRedirects\n     * @param {?} state\n     */\n    constructor(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, urlAfterRedirects, state) {\n        super(id, url);\n        this.urlAfterRedirects = urlAfterRedirects;\n        this.state = state;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n    }\n}\n/**\n * \\@description\n *\n * Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nclass RouteConfigLoadStart {\n    /**\n     * @param {?} route\n     */\n    constructor(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `RouteConfigLoadStart(path: ${this.route.path})`; }\n}\n/**\n * \\@description\n *\n * Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nclass RouteConfigLoadEnd {\n    /**\n     * @param {?} route\n     */\n    constructor(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `RouteConfigLoadEnd(path: ${this.route.path})`; }\n}\n/**\n * \\@description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationEnd` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ChildActivationStart {\n    /**\n     * @param {?} snapshot\n     */\n    constructor(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ChildActivationStart(path: '${path}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationStart` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ChildActivationEnd {\n    /**\n     * @param {?} snapshot\n     */\n    constructor(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ChildActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationEnd` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ActivationStart {\n    /**\n     * @param {?} snapshot\n     */\n    constructor(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ActivationStart(path: '${path}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationStart` for use of this experimental API.\n *\n * \\@experimental\n */\nclass ActivationEnd {\n    /**\n     * @param {?} snapshot\n     */\n    constructor(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return `ActivationEnd(path: '${path}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents a scrolling event.\n */\nclass Scroll {\n    /**\n     * @param {?} routerEvent\n     * @param {?} position\n     * @param {?} anchor\n     */\n    constructor(/** @docsNotRequired */\n    routerEvent, /** @docsNotRequired */\n    position, /** @docsNotRequired */\n    anchor) {\n        this.routerEvent = routerEvent;\n        this.position = position;\n        this.anchor = anchor;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n        return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nclass EmptyOutletComponent {\n}\nEmptyOutletComponent.decorators = [\n    { type: Component, args: [{ template: `<router-outlet></router-outlet>` }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** *\n * \\@description\n *\n * Name of the primary outlet.\n *\n *\n  @type {?} */\nconst PRIMARY_OUTLET = 'primary';\nclass ParamsAsMap {\n    /**\n     * @param {?} params\n     */\n    constructor(params) { this.params = params || {}; }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    has(name) { return this.params.hasOwnProperty(name); }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    get(name) {\n        if (this.has(name)) {\n            /** @type {?} */\n            const v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    getAll(name) {\n        if (this.has(name)) {\n            /** @type {?} */\n            const v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    }\n    /**\n     * @return {?}\n     */\n    get keys() { return Object.keys(this.params); }\n}\n/**\n * Convert a `Params` instance to a `ParamMap`.\n *\n *\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\n/** @type {?} */\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    /** @type {?} */\n    const error = Error('NavigationCancelingError: ' + message);\n    (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return error && (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    /** @type {?} */\n    const parts = /** @type {?} */ ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    /** @type {?} */\n    const posParams = {};\n    // Check each config part against the actual URL\n    for (let index = 0; index < parts.length; index++) {\n        /** @type {?} */\n        const part = parts[index];\n        /** @type {?} */\n        const segment = segments[index];\n        /** @type {?} */\n        const isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass LoadedRouterConfig {\n    /**\n     * @param {?} routes\n     * @param {?} module\n     */\n    constructor(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n}\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath = '') {\n    // forEach doesn't iterate undefined values\n    for (let i = 0; i < config.length; i++) {\n        /** @type {?} */\n        const route = config[i];\n        /** @type {?} */\n        const fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(`\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n    }\n    if (Array.isArray(route)) {\n        throw new Error(`Invalid configuration of route '${fullPath}': Array cannot be specified`);\n    }\n    if (!route.component && !route.children && !route.loadChildren &&\n        (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(`Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(`Invalid configuration of route '${fullPath}': redirectTo and component cannot be used together`);\n    }\n    if (route.path && route.matcher) {\n        throw new Error(`Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(`Invalid configuration of route '${fullPath}'. One of the following must be provided: component, redirectTo, children or loadChildren`);\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(`Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(`Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        /** @type {?} */\n        const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n        throw new Error(`Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(`Invalid configuration of route '${fullPath}': pathMatch can only be set to 'prefix' or 'full'`);\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return `${parentPath}/`;\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return `${parentPath}/${currentRoute.path}`;\n    }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n * @param {?} r\n * @return {?}\n */\nfunction standardizeConfig(r) {\n    /** @type {?} */\n    const children = r.children && r.children.map(standardizeConfig);\n    /** @type {?} */\n    const c = children ? Object.assign({}, r, { children }) : Object.assign({}, r);\n    if (!c.component && (children || c.loadChildren) && (c.outlet && c.outlet !== PRIMARY_OUTLET)) {\n        c.component = EmptyOutletComponent;\n    }\n    return c;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    /** @type {?} */\n    const k1 = Object.keys(a);\n    /** @type {?} */\n    const k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    /** @type {?} */\n    let key;\n    for (let i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (const prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return of({});\n    }\n    /** @type {?} */\n    const waitHead = [];\n    /** @type {?} */\n    const waitTail = [];\n    /** @type {?} */\n    const res = {};\n    forEach(obj, (a, k) => {\n        /** @type {?} */\n        const mapped = fn(k, a).pipe(map((r) => res[k] = r));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So just using Array.concat.\n    return of.apply(null, waitHead.concat(waitTail)).pipe(concatAll(), last(), map(() => res));\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    return observables.pipe(mergeAll(), every((result) => result === true));\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (ɵisObservable(value)) {\n        return value;\n    }\n    if (ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return from(Promise.resolve(value));\n    }\n    return of(/** @type {?} */ (value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (const c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    // TODO: This does not handle array params correctly.\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(key => containee[key] === container[key]);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        /** @type {?} */\n        const current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (const c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        /** @type {?} */\n        const current = containeePaths.slice(0, container.segments.length);\n        /** @type {?} */\n        const next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n *\n */\nclass UrlTree {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} queryParams\n     * @param {?} fragment\n     */\n    constructor(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    /**\n     * @return {?}\n     */\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return DEFAULT_SERIALIZER.serialize(this); }\n}\n/**\n * \\@description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n *\n */\nclass UrlSegmentGroup {\n    /**\n     * @param {?} segments\n     * @param {?} children\n     */\n    constructor(segments, children) {\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, (v, k) => v.parent = this);\n    }\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    hasChildren() { return this.numberOfChildren > 0; }\n    /**\n     * Number of child segments\n     * @return {?}\n     */\n    get numberOfChildren() { return Object.keys(this.children).length; }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return serializePaths(this); }\n}\n/**\n * \\@description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@usageNotes\n *  ### Example\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n *\n */\nclass UrlSegment {\n    /**\n     * @param {?} path\n     * @param {?} parameters\n     */\n    constructor(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    /**\n     * @return {?}\n     */\n    get parameterMap() {\n        if (!this._parameterMap) {\n            this._parameterMap = convertToParamMap(this.parameters);\n        }\n        return this._parameterMap;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    toString() { return serializePath(this); }\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every((a, i) => a.path === bs[i].path);\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    /** @type {?} */\n    let res = [];\n    forEach(segment.children, (child, childOutlet) => {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, (child, childOutlet) => {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n *\n * @abstract\n */\nclass UrlSerializer {\n}\n/**\n * \\@description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n *\n */\nclass DefaultUrlSerializer {\n    /**\n     * Parses a url into a `UrlTree`\n     * @param {?} url\n     * @return {?}\n     */\n    parse(url) {\n        /** @type {?} */\n        const p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    }\n    /**\n     * Converts a `UrlTree` into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    serialize(tree) {\n        /** @type {?} */\n        const segment = `/${serializeSegment(tree.root, true)}`;\n        /** @type {?} */\n        const query = serializeQueryParams(tree.queryParams);\n        /** @type {?} */\n        const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment((/** @type {?} */ ((tree.fragment))))}` : '';\n        return `${segment}${query}${fragment}`;\n    }\n}\n/** @type {?} */\nconst DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(p => serializePath(p)).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        /** @type {?} */\n        const primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        /** @type {?} */\n        const children = [];\n        forEach(segment.children, (v, k) => {\n            if (k !== PRIMARY_OUTLET) {\n                children.push(`${k}:${serializeSegment(v, false)}`);\n            }\n        });\n        return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n    }\n    else {\n        /** @type {?} */\n        const children = mapChildrenIntoArray(segment, (v, k) => {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [`${k}:${serializeSegment(v, false)}`];\n        });\n        return `${serializePaths(segment)}/(${children.join('//')})`;\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n * @param {?} s\n * @return {?}\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(key => `;${encodeUriSegment(key)}=${encodeUriSegment(params[key])}`)\n        .join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    /** @type {?} */\n    const strParams = Object.keys(params).map((name) => {\n        /** @type {?} */\n        const value = params[name];\n        return Array.isArray(value) ?\n            value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') :\n            `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n    });\n    return strParams.length ? `?${strParams.join(\"&\")}` : '';\n}\n/** @type {?} */\nconst SEGMENT_RE = /^[^\\/()?;=#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    /** @type {?} */\n    const match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\n/** @type {?} */\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    /** @type {?} */\n    const match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\n/** @type {?} */\nconst QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    /** @type {?} */\n    const match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nclass UrlParser {\n    /**\n     * @param {?} url\n     */\n    constructor(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    parseRootSegment() {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    }\n    /**\n     * @return {?}\n     */\n    parseQueryParams() {\n        /** @type {?} */\n        const params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    }\n    /**\n     * @return {?}\n     */\n    parseFragment() {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    }\n    /**\n     * @return {?}\n     */\n    parseChildren() {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        /** @type {?} */\n        const segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        /** @type {?} */\n        let children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        /** @type {?} */\n        let res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    }\n    /**\n     * @return {?}\n     */\n    parseSegment() {\n        /** @type {?} */\n        const path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(`Empty path url segment cannot have parameters: '${this.remaining}'.`);\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    }\n    /**\n     * @return {?}\n     */\n    parseMatrixParams() {\n        /** @type {?} */\n        const params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    }\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    parseParam(params) {\n        /** @type {?} */\n        const key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        /** @type {?} */\n        let value = '';\n        if (this.consumeOptional('=')) {\n            /** @type {?} */\n            const valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    }\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    parseQueryParam(params) {\n        /** @type {?} */\n        const key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        /** @type {?} */\n        let value = '';\n        if (this.consumeOptional('=')) {\n            /** @type {?} */\n            const valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        /** @type {?} */\n        const decodedKey = decodeQuery(key);\n        /** @type {?} */\n        const decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            /** @type {?} */\n            let currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    }\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    parseParens(allowPrimary) {\n        /** @type {?} */\n        const segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            /** @type {?} */\n            const path = matchSegments(this.remaining);\n            /** @type {?} */\n            const next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(`Cannot parse url '${this.url}'`);\n            }\n            /** @type {?} */\n            let outletName = /** @type {?} */ ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            /** @type {?} */\n            const children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    peekStartsWith(str) { return this.remaining.startsWith(str); }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    consumeOptional(str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    capture(str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(`Expected \"${str}\".`);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NoMatch {\n    /**\n     * @param {?=} segmentGroup\n     */\n    constructor(segmentGroup) { this.segmentGroup = segmentGroup || null; }\n}\nclass AbsoluteRedirect {\n    /**\n     * @param {?} urlTree\n     */\n    constructor(urlTree) {\n        this.urlTree = urlTree;\n    }\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new Observable((obs) => obs.error(new NoMatch(segmentGroup)));\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new Observable((obs) => obs.error(new AbsoluteRedirect(newTree)));\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new Observable((obs) => obs.error(new Error(`Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`)));\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new Observable((obs) => obs.error(navigationCancelingError(`Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`)));\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nclass ApplyRedirects {\n    /**\n     * @param {?} moduleInjector\n     * @param {?} configLoader\n     * @param {?} urlSerializer\n     * @param {?} urlTree\n     * @param {?} config\n     */\n    constructor(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    apply() {\n        /** @type {?} */\n        const expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        /** @type {?} */\n        const urlTrees$ = expanded$.pipe(map((rootSegmentGroup) => this.createUrlTree(rootSegmentGroup, this.urlTree.queryParams, /** @type {?} */ ((this.urlTree.fragment)))));\n        return urlTrees$.pipe(catchError((e) => {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw this.noMatchError(e);\n            }\n            throw e;\n        }));\n    }\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    match(tree) {\n        /** @type {?} */\n        const expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        /** @type {?} */\n        const mapped$ = expanded$.pipe(map((rootSegmentGroup) => this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment)))));\n        return mapped$.pipe(catchError((e) => {\n            if (e instanceof NoMatch) {\n                throw this.noMatchError(e);\n            }\n            throw e;\n        }));\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    noMatchError(e) {\n        return new Error(`Cannot match any routes. URL Segment: '${e.segmentGroup}'`);\n    }\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    createUrlTree(rootCandidate, queryParams, fragment) {\n        /** @type {?} */\n        const root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], { [PRIMARY_OUTLET]: rootCandidate }) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    expandSegmentGroup(ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(map((children) => new UrlSegmentGroup([], children)));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    expandChildren(ngModule, routes, segmentGroup) {\n        return waitForMap(segmentGroup.children, (childOutlet, child) => this.expandSegmentGroup(ngModule, routes, child, childOutlet));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    expandSegment(ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        return of(...routes).pipe(map((r) => {\n            /** @type {?} */\n            const expanded$ = this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(catchError((e) => {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return /** @type {?} */ (of(null));\n                }\n                throw e;\n            }));\n        }), concatAll(), first((s) => !!s), catchError((e, _) => {\n            if (e instanceof EmptyError || e.name === 'EmptyError') {\n                if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    }\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    noLeftoversInUrl(segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    expandSegmentAgainstRoute(ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet) {\n        /** @type {?} */\n        const newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap((newSegments) => {\n            /** @type {?} */\n            const group = new UrlSegmentGroup(newSegments, {});\n            return this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet) {\n        const { matched, consumedSegments, lastChild, positionalParamSegments } = match(segmentGroup, route, segments);\n        if (!matched)\n            return noMatch(segmentGroup);\n        /** @type {?} */\n        const newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(mergeMap((newSegments) => {\n            return this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    matchSegmentAgainstRoute(ngModule, rawSegmentGroup, route, segments) {\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(map((cfg) => {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return of(new UrlSegmentGroup(segments, {}));\n        }\n        const { matched, consumedSegments, lastChild } = match(rawSegmentGroup, route, segments);\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        /** @type {?} */\n        const rawSlicedSegments = segments.slice(lastChild);\n        /** @type {?} */\n        const childConfig$ = this.getChildConfig(ngModule, route);\n        return childConfig$.pipe(mergeMap((routerConfig) => {\n            /** @type {?} */\n            const childModule = routerConfig.module;\n            /** @type {?} */\n            const childConfig = routerConfig.routes;\n            const { segmentGroup, slicedSegments } = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig);\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                /** @type {?} */\n                const expanded$ = this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$.pipe(map((children) => new UrlSegmentGroup(consumedSegments, children)));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            /** @type {?} */\n            const expanded$ = this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(map((cs) => new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children)));\n        }));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    getChildConfig(ngModule, route) {\n        if (route.children) {\n            // The children belong to the same module\n            return of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return of(route._loadedConfig);\n            }\n            return runCanLoadGuard(ngModule.injector, route).pipe(mergeMap((shouldLoad) => {\n                if (shouldLoad) {\n                    return this.configLoader.load(ngModule.injector, route)\n                        .pipe(map((cfg) => {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return of(new LoadedRouterConfig([], ngModule));\n    }\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    lineralizeSegments(route, urlTree) {\n        /** @type {?} */\n        let res = [];\n        /** @type {?} */\n        let c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    }\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    applyRedirectCommands(segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    }\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    applyRedirectCreatreUrlTree(redirectTo, urlTree, segments, posParams) {\n        /** @type {?} */\n        const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    }\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    createQueryParams(redirectToParams, actualParams) {\n        /** @type {?} */\n        const res = {};\n        forEach(redirectToParams, (v, k) => {\n            /** @type {?} */\n            const copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                /** @type {?} */\n                const sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    }\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    createSegmentGroup(redirectTo, group, segments, posParams) {\n        /** @type {?} */\n        const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        /** @type {?} */\n        let children = {};\n        forEach(group.children, (child, name) => {\n            children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    }\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n        return redirectToSegments.map(s => s.path.startsWith(':') ? this.findPosParam(redirectTo, s, posParams) :\n            this.findOrReturn(s, actualSegments));\n    }\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n        /** @type {?} */\n        const pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(`Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n        return pos;\n    }\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    findOrReturn(redirectToUrlSegment, actualSegments) {\n        /** @type {?} */\n        let idx = 0;\n        for (const s of actualSegments) {\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    }\n}\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    /** @type {?} */\n    const canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return of(true);\n    /** @type {?} */\n    const obs = from(canLoad).pipe(map((injectionToken) => {\n        /** @type {?} */\n        const guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    }));\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    /** @type {?} */\n    const matcher = route.matcher || defaultUrlMatcher;\n    /** @type {?} */\n    const res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        /** @type {?} */\n        const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        /** @type {?} */\n        const s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments };\n    }\n    return { segmentGroup, slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        /** @type {?} */\n        const c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    /** @type {?} */\n    const res = {};\n    for (const r of routes) {\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    /** @type {?} */\n    const res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (const r of routes) {\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(r => isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(r => isEmptyPathRedirect(segmentGroup, segments, r));\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @template T\n */\nclass Tree {\n    /**\n     * @param {?} root\n     */\n    constructor(root) { this._root = root; }\n    /**\n     * @return {?}\n     */\n    get root() { return this._root.value; }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    parent(t) {\n        /** @type {?} */\n        const p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    children(t) {\n        /** @type {?} */\n        const n = findNode(t, this._root);\n        return n ? n.children.map(t => t.value) : [];\n    }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    firstChild(t) {\n        /** @type {?} */\n        const n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    siblings(t) {\n        /** @type {?} */\n        const p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        /** @type {?} */\n        const c = p[p.length - 2].children.map(c => c.value);\n        return c.filter(cc => cc !== t);\n    }\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    pathFromRoot(t) { return findPath(t, this._root).map(s => s.value); }\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (const child of node.children) {\n        /** @type {?} */\n        const node = findNode(value, child);\n        if (node)\n            return node;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (const child of node.children) {\n        /** @type {?} */\n        const path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\n/**\n * @template T\n */\nclass TreeNode {\n    /**\n     * @param {?} value\n     * @param {?} children\n     */\n    constructor(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `TreeNode(${this.value})`; }\n}\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    /** @type {?} */\n    const map$$1 = {};\n    if (node) {\n        node.children.forEach(child => map$$1[child.value.outlet] = child);\n    }\n    return map$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Represents the state of the router.\n *\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * See `ActivatedRoute` for more information.\n *\n *\n */\nclass RouterState extends Tree {\n    /**\n     * \\@internal\n     * @param {?} root\n     * @param {?} snapshot\n     */\n    constructor(root, snapshot) {\n        super(root);\n        this.snapshot = snapshot;\n        setRouterState(/** @type {?} */ (this), root);\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return this.snapshot.toString(); }\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    /** @type {?} */\n    const snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    /** @type {?} */\n    const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n    /** @type {?} */\n    const emptyParams = new BehaviorSubject({});\n    /** @type {?} */\n    const emptyData = new BehaviorSubject({});\n    /** @type {?} */\n    const emptyQueryParams = new BehaviorSubject({});\n    /** @type {?} */\n    const fragment = new BehaviorSubject('');\n    /** @type {?} */\n    const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    /** @type {?} */\n    const emptyParams = {};\n    /** @type {?} */\n    const emptyData = {};\n    /** @type {?} */\n    const emptyQueryParams = {};\n    /** @type {?} */\n    const fragment = '';\n    /** @type {?} */\n    const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n *\n */\nclass ActivatedRoute {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} futureSnapshot\n     */\n    constructor(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    /**\n     * The configuration used to match this route\n     * @return {?}\n     */\n    get routeConfig() { return this._futureSnapshot.routeConfig; }\n    /**\n     * The root of the router state\n     * @return {?}\n     */\n    get root() { return this._routerState.root; }\n    /**\n     * The parent of this route in the router state tree\n     * @return {?}\n     */\n    get parent() { return this._routerState.parent(this); }\n    /**\n     * The first child of this route in the router state tree\n     * @return {?}\n     */\n    get firstChild() { return this._routerState.firstChild(this); }\n    /**\n     * The children of this route in the router state tree\n     * @return {?}\n     */\n    get children() { return this._routerState.children(this); }\n    /**\n     * The path from the root of the router state tree to this route\n     * @return {?}\n     */\n    get pathFromRoot() { return this._routerState.pathFromRoot(this); }\n    /**\n     * @return {?}\n     */\n    get paramMap() {\n        if (!this._paramMap) {\n            this._paramMap = this.params.pipe(map((p) => convertToParamMap(p)));\n        }\n        return this._paramMap;\n    }\n    /**\n     * @return {?}\n     */\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap =\n                this.queryParams.pipe(map((p) => convertToParamMap(p)));\n        }\n        return this._queryParamMap;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n    }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * \\@internal\n * @param {?} route\n * @param {?=} paramsInheritanceStrategy\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy = 'emptyOnly') {\n    /** @type {?} */\n    const pathFromRoot = route.pathFromRoot;\n    /** @type {?} */\n    let inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            /** @type {?} */\n            const current = pathFromRoot[inheritingStartingFrom];\n            /** @type {?} */\n            const parent = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/**\n * \\@internal\n * @param {?} pathFromRoot\n * @return {?}\n */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce((res, curr) => {\n        /** @type {?} */\n        const params = Object.assign({}, res.params, curr.params);\n        /** @type {?} */\n        const data = Object.assign({}, res.data, curr.data);\n        /** @type {?} */\n        const resolve = Object.assign({}, res.resolve, curr._resolvedData);\n        return { params, data, resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n *\n */\nclass ActivatedRouteSnapshot {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} params\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @param {?} data\n     * @param {?} outlet\n     * @param {?} component\n     * @param {?} routeConfig\n     * @param {?} urlSegment\n     * @param {?} lastPathIndex\n     * @param {?} resolve\n     */\n    constructor(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    /**\n     * The root of the router state\n     * @return {?}\n     */\n    get root() { return this._routerState.root; }\n    /**\n     * The parent of this route in the router state tree\n     * @return {?}\n     */\n    get parent() { return this._routerState.parent(this); }\n    /**\n     * The first child of this route in the router state tree\n     * @return {?}\n     */\n    get firstChild() { return this._routerState.firstChild(this); }\n    /**\n     * The children of this route in the router state tree\n     * @return {?}\n     */\n    get children() { return this._routerState.children(this); }\n    /**\n     * The path from the root of the router state tree to this route\n     * @return {?}\n     */\n    get pathFromRoot() { return this._routerState.pathFromRoot(this); }\n    /**\n     * @return {?}\n     */\n    get paramMap() {\n        if (!this._paramMap) {\n            this._paramMap = convertToParamMap(this.params);\n        }\n        return this._paramMap;\n    }\n    /**\n     * @return {?}\n     */\n    get queryParamMap() {\n        if (!this._queryParamMap) {\n            this._queryParamMap = convertToParamMap(this.queryParams);\n        }\n        return this._queryParamMap;\n    }\n    /**\n     * @return {?}\n     */\n    toString() {\n        /** @type {?} */\n        const url = this.url.map(segment => segment.toString()).join('/');\n        /** @type {?} */\n        const matched = this.routeConfig ? this.routeConfig.path : '';\n        return `Route(url:'${url}', path:'${matched}')`;\n    }\n}\n/**\n * \\@description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n *\n */\nclass RouterStateSnapshot extends Tree {\n    /**\n     * \\@internal\n     * @param {?} url\n     * @param {?} root\n     */\n    constructor(url, root) {\n        super(root);\n        this.url = url;\n        setRouterState(/** @type {?} */ (this), root);\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return serializeNode(this._root); }\n}\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(c => setRouterState(state, c));\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    /** @type {?} */\n    const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n    return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        /** @type {?} */\n        const currentSnapshot = route.snapshot;\n        /** @type {?} */\n        const nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            (/** @type {?} */ (route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            (/** @type {?} */ (route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            (/** @type {?} */ (route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            (/** @type {?} */ (route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            (/** @type {?} */ (route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        (/** @type {?} */ (route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    /** @type {?} */\n    const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    /** @type {?} */\n    const parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    /** @type {?} */\n    const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        /** @type {?} */\n        const value = prevState.value;\n        value._futureSnapshot = curr.value;\n        /** @type {?} */\n        const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else {\n        /** @type {?} */\n        const detachedRouteHandle = /** @type {?} */ (routeReuseStrategy.retrieve(curr.value));\n        if (detachedRouteHandle) {\n            /** @type {?} */\n            const tree = detachedRouteHandle.route;\n            setFutureSnapshotsOfActivatedRoutes(curr, tree);\n            return tree;\n        }\n        else {\n            /** @type {?} */\n            const value = createActivatedRoute(curr.value);\n            /** @type {?} */\n            const children = curr.children.map(c => createNode(routeReuseStrategy, c));\n            return new TreeNode(value, children);\n        }\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (let i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(child => {\n        for (const p of prevState.children) {\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    /** @type {?} */\n    const nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    /** @type {?} */\n    const startingPosition = findStartingPosition(nav, urlTree, route);\n    /** @type {?} */\n    const segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    /** @type {?} */\n    let qp = {};\n    if (queryParams) {\n        forEach(queryParams, (value, name) => {\n            qp[name] = Array.isArray(value) ? value.map((v) => `${v}`) : `${value}`;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    /** @type {?} */\n    const children = {};\n    forEach(current.children, (c, outletName) => {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n    /**\n     * @param {?} isAbsolute\n     * @param {?} numberOfDoubleDots\n     * @param {?} commands\n     */\n    constructor(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        /** @type {?} */\n        const cmdWithOutlet = commands.find(c => typeof c === 'object' && c != null && c.outlets);\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    toRoot() {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    }\n}\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    /** @type {?} */\n    let numberOfDoubleDots = 0;\n    /** @type {?} */\n    let isAbsolute = false;\n    /** @type {?} */\n    const res = commands.reduce((res, cmd, cmdIdx) => {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                /** @type {?} */\n                const outlets = {};\n                forEach(cmd.outlets, (commands, name) => {\n                    outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return [...res, { outlets }];\n            }\n            if (cmd.segmentPath) {\n                return [...res, cmd.segmentPath];\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return [...res, cmd];\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach((urlPart, partIndex) => {\n                if (partIndex == 0 && urlPart === '.') ;\n                else if (partIndex == 0 && urlPart === '') { //  '/a'\n                    //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') { //  '../a'\n                    //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return [...res, cmd];\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n    /**\n     * @param {?} segmentGroup\n     * @param {?} processChildren\n     * @param {?} index\n     */\n    constructor(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n}\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    /** @type {?} */\n    const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    /** @type {?} */\n    const index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    /** @type {?} */\n    let g = group;\n    /** @type {?} */\n    let ci = index;\n    /** @type {?} */\n    let dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = /** @type {?} */ ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return `${command}`;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return { [PRIMARY_OUTLET]: commands };\n    if (commands[0].outlets === undefined)\n        return { [PRIMARY_OUTLET]: commands };\n    return commands[0].outlets;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    /** @type {?} */\n    const m = prefixedWith(segmentGroup, startIndex, commands);\n    /** @type {?} */\n    const slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        /** @type {?} */\n        const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        /** @type {?} */\n        const outlets = getOutlets(commands);\n        /** @type {?} */\n        const children = {};\n        forEach(outlets, (commands, outlet) => {\n            if (commands !== null) {\n                children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, (child, childOutlet) => {\n            if (outlets[childOutlet] === undefined) {\n                children[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    /** @type {?} */\n    let currentCommandIndex = 0;\n    /** @type {?} */\n    let currentPathIndex = startIndex;\n    /** @type {?} */\n    const noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        /** @type {?} */\n        const path = segmentGroup.segments[currentPathIndex];\n        /** @type {?} */\n        const curr = getPath(commands[currentCommandIndex]);\n        /** @type {?} */\n        const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    /** @type {?} */\n    const paths = segmentGroup.segments.slice(0, startIndex);\n    /** @type {?} */\n    let i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            /** @type {?} */\n            const children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            /** @type {?} */\n            const p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        /** @type {?} */\n        const curr = getPath(commands[i]);\n        /** @type {?} */\n        const next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    /** @type {?} */\n    const children = {};\n    forEach(outlets, (commands, outlet) => {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    /** @type {?} */\n    const res = {};\n    forEach(params, (v, k) => res[k] = `${v}`);\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass CanActivate {\n    /**\n     * @param {?} path\n     */\n    constructor(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n}\nclass CanDeactivate {\n    /**\n     * @param {?} component\n     * @param {?} route\n     */\n    constructor(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n}\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nclass PreActivation {\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @param {?} moduleInjector\n     * @param {?=} forwardEvent\n     */\n    constructor(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    initialize(parentContexts) {\n        /** @type {?} */\n        const futureRoot = this.future._root;\n        /** @type {?} */\n        const currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    }\n    /**\n     * @return {?}\n     */\n    checkGuards() {\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return of(true);\n        }\n        /** @type {?} */\n        const canDeactivate$ = this.runCanDeactivateChecks();\n        return canDeactivate$.pipe(mergeMap((canDeactivate) => canDeactivate ? this.runCanActivateChecks() : of(false)));\n    }\n    /**\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    resolveData(paramsInheritanceStrategy) {\n        if (!this.isActivating())\n            return of(null);\n        return from(this.canActivateChecks)\n            .pipe(concatMap((check) => this.runResolve(check.route, paramsInheritanceStrategy)), reduce((_, __) => _));\n    }\n    /**\n     * @return {?}\n     */\n    isDeactivating() { return this.canDeactivateChecks.length !== 0; }\n    /**\n     * @return {?}\n     */\n    isActivating() { return this.canActivateChecks.length !== 0; }\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    setupChildRouteGuards(futureNode, currNode, contexts, futurePath) {\n        /** @type {?} */\n        const prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(c => {\n            this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, (v, k) => this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k)));\n    }\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    setupRouteGuards(futureNode, currNode, parentContexts, futurePath) {\n        /** @type {?} */\n        const future = futureNode.value;\n        /** @type {?} */\n        const curr = currNode ? currNode.value : null;\n        /** @type {?} */\n        const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            /** @type {?} */\n            const shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future.routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                /** @type {?} */\n                const outlet = /** @type {?} */ ((/** @type {?} */ ((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    }\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    shouldRunGuardsAndResolvers(curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    }\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    deactivateRouteAndItsChildren(route, context) {\n        /** @type {?} */\n        const children = nodeChildrenAsMap(route);\n        /** @type {?} */\n        const r = route.value;\n        forEach(children, (node, childName) => {\n            if (!r.component) {\n                this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    runCanDeactivateChecks() {\n        return from(this.canDeactivateChecks)\n            .pipe(mergeMap((check) => this.runCanDeactivate(check.component, check.route)), every((result) => result === true));\n    }\n    /**\n     * @return {?}\n     */\n    runCanActivateChecks() {\n        return from(this.canActivateChecks)\n            .pipe(concatMap((check) => andObservables(from([\n            this.fireChildActivationStart(check.route.parent),\n            this.fireActivationStart(check.route), this.runCanActivateChild(check.path),\n            this.runCanActivate(check.route)\n        ]))), every((result) => result === true));\n        // this.fireChildActivationStart(check.path),\n    }\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    fireActivationStart(snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return of(true);\n    }\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    fireChildActivationStart(snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return of(true);\n    }\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    runCanActivate(future) {\n        /** @type {?} */\n        const canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return of(true);\n        /** @type {?} */\n        const obs = from(canActivate).pipe(map((c) => {\n            /** @type {?} */\n            const guard = this.getToken(c, future);\n            /** @type {?} */\n            let observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, this.future));\n            }\n            return observable.pipe(first());\n        }));\n        return andObservables(obs);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    runCanActivateChild(path) {\n        /** @type {?} */\n        const future = path[path.length - 1];\n        /** @type {?} */\n        const canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(p => this.extractCanActivateChild(p))\n            .filter(_ => _ !== null);\n        return andObservables(from(canActivateChildGuards).pipe(map((d) => {\n            /** @type {?} */\n            const obs = from(d.guards).pipe(map((c) => {\n                /** @type {?} */\n                const guard = this.getToken(c, d.node);\n                /** @type {?} */\n                let observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, this.future));\n                }\n                return observable.pipe(first());\n            }));\n            return andObservables(obs);\n        })));\n    }\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    extractCanActivateChild(p) {\n        /** @type {?} */\n        const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    }\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    runCanDeactivate(component, curr) {\n        /** @type {?} */\n        const canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return of(true);\n        /** @type {?} */\n        const canDeactivate$ = from(canDeactivate).pipe(mergeMap((c) => {\n            /** @type {?} */\n            const guard = this.getToken(c, curr);\n            /** @type {?} */\n            let observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, this.curr, this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, this.curr, this.future));\n            }\n            return observable.pipe(first());\n        }));\n        return canDeactivate$.pipe(every((result) => result === true));\n    }\n    /**\n     * @param {?} future\n     * @param {?} paramsInheritanceStrategy\n     * @return {?}\n     */\n    runResolve(future, paramsInheritanceStrategy) {\n        /** @type {?} */\n        const resolve = future._resolve;\n        return this.resolveNode(resolve, future).pipe(map((resolvedData) => {\n            future._resolvedData = resolvedData;\n            future.data = Object.assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n            return null;\n        }));\n    }\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    resolveNode(resolve, future) {\n        /** @type {?} */\n        const keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return of({});\n        }\n        if (keys.length === 1) {\n            /** @type {?} */\n            const key = keys[0];\n            return this.getResolver(resolve[key], future).pipe(map((value) => {\n                return { [key]: value };\n            }));\n        }\n        /** @type {?} */\n        const data = {};\n        /** @type {?} */\n        const runningResolvers$ = from(keys).pipe(mergeMap((key) => {\n            return this.getResolver(resolve[key], future).pipe(map((value) => {\n                data[key] = value;\n                return value;\n            }));\n        }));\n        return runningResolvers$.pipe(last(), map(() => data));\n    }\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    getResolver(injectionToken, future) {\n        /** @type {?} */\n        const resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    }\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    getToken(token, snapshot) {\n        /** @type {?} */\n        const config = closestLoadedConfig(snapshot);\n        /** @type {?} */\n        const injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    }\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (let s = snapshot.parent; s; s = s.parent) {\n        /** @type {?} */\n        const route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NoMatch$1 {\n}\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @param {?=} paramsInheritanceStrategy\n * @param {?=} relativeLinkResolution\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy = 'emptyOnly', relativeLinkResolution = 'legacy') {\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution)\n        .recognize();\n}\nclass Recognizer {\n    /**\n     * @param {?} rootComponentType\n     * @param {?} config\n     * @param {?} urlTree\n     * @param {?} url\n     * @param {?} paramsInheritanceStrategy\n     * @param {?} relativeLinkResolution\n     */\n    constructor(rootComponentType, config, urlTree, url, paramsInheritanceStrategy, relativeLinkResolution) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n        this.relativeLinkResolution = relativeLinkResolution;\n    }\n    /**\n     * @return {?}\n     */\n    recognize() {\n        try {\n            /** @type {?} */\n            const rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config, this.relativeLinkResolution).segmentGroup;\n            /** @type {?} */\n            const children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            /** @type {?} */\n            const root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(Object.assign({}, this.urlTree.queryParams)), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            /** @type {?} */\n            const rootNode = new TreeNode(root, children);\n            /** @type {?} */\n            const routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return of(routeState);\n        }\n        catch (e) {\n            return new Observable((obs) => obs.error(e));\n        }\n    }\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    inheritParamsAndData(routeNode) {\n        /** @type {?} */\n        const route = routeNode.value;\n        /** @type {?} */\n        const i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(n => this.inheritParamsAndData(n));\n    }\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    processSegmentGroup(config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    }\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    processChildren(config, segmentGroup) {\n        /** @type {?} */\n        const children = mapChildrenIntoArray(segmentGroup, (child, childOutlet) => this.processSegmentGroup(config, child, childOutlet));\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    }\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    processSegment(config, segmentGroup, segments, outlet) {\n        for (const r of config) {\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    }\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    noLeftoversInUrl(segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    }\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    processSegmentAgainstRoute(route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        /** @type {?} */\n        let snapshot;\n        /** @type {?} */\n        let consumedSegments = [];\n        /** @type {?} */\n        let rawSlicedSegments = [];\n        if (route.path === '**') {\n            /** @type {?} */\n            const params = segments.length > 0 ? /** @type {?} */ ((last$1(segments))).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(Object.assign({}, this.urlTree.queryParams)), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            /** @type {?} */\n            const result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(Object.assign({}, this.urlTree.queryParams)), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        /** @type {?} */\n        const childConfig = getChildConfig(route);\n        const { segmentGroup, slicedSegments } = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig, this.relativeLinkResolution);\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            /** @type {?} */\n            const children = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        /** @type {?} */\n        const children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    }\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort((a, b) => {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return /** @type {?} */ ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    /** @type {?} */\n    const matcher = route.matcher || defaultUrlMatcher;\n    /** @type {?} */\n    const res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    /** @type {?} */\n    const posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), (v, k) => { posParams[k] = v.path; });\n    /** @type {?} */\n    const parameters = res.consumed.length > 0 ? Object.assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    /** @type {?} */\n    const names = {};\n    nodes.forEach(n => {\n        /** @type {?} */\n        const routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            /** @type {?} */\n            const p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n            /** @type {?} */\n            const c = n.value.url.map(s => s.toString()).join('/');\n            throw new Error(`Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    /** @type {?} */\n    let s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    /** @type {?} */\n    let s = segmentGroup;\n    /** @type {?} */\n    let res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @param {?} relativeLinkResolution\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config, relativeLinkResolution) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        /** @type {?} */\n        const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        /** @type {?} */\n        const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, config, segmentGroup.children, relativeLinkResolution));\n        s._sourceSegment = segmentGroup;\n        s._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s, slicedSegments };\n    }\n    /** @type {?} */\n    const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @param {?} relativeLinkResolution\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, consumedSegments, slicedSegments, routes, children, relativeLinkResolution) {\n    /** @type {?} */\n    const res = {};\n    for (const r of routes) {\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            /** @type {?} */\n            const s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            if (relativeLinkResolution === 'legacy') {\n                s._segmentIndexShift = segmentGroup.segments.length;\n            }\n            else {\n                s._segmentIndexShift = consumedSegments.length;\n            }\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return Object.assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    /** @type {?} */\n    const res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (const r of routes) {\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            /** @type {?} */\n            const s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nclass RouteReuseStrategy {\n}\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nclass DefaultRouteReuseStrategy {\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    shouldDetach(route) { return false; }\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    store(route, detachedTree) { }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    shouldAttach(route) { return false; }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    retrieve(route) { return null; }\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    shouldReuseRoute(future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * \\@docsNotRequired\n * \\@experimental\n  @type {?} */\nconst ROUTES = new InjectionToken('ROUTES');\nclass RouterConfigLoader {\n    /**\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?=} onLoadStartListener\n     * @param {?=} onLoadEndListener\n     */\n    constructor(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    load(parentInjector, route) {\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        /** @type {?} */\n        const moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return moduleFactory$.pipe(map((factory) => {\n            if (this.onLoadEndListener) {\n                this.onLoadEndListener(route);\n            }\n            /** @type {?} */\n            const module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(standardizeConfig), module);\n        }));\n    }\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    loadModuleFactory(loadChildren) {\n        if (typeof loadChildren === 'string') {\n            return from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(mergeMap((t) => {\n                if (t instanceof NgModuleFactory) {\n                    return of(t);\n                }\n                else {\n                    return from(this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nclass UrlHandlingStrategy {\n}\n/**\n * \\@experimental\n */\nclass DefaultUrlHandlingStrategy {\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    shouldProcessUrl(url) { return true; }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    extract(url) { return url; }\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    merge(newUrlPart, wholeUrl) { return newUrlPart; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * @param {?} error\n * @param {?} urlSerializer\n * @param {?} url\n * @return {?}\n */\nfunction defaultMalformedUriErrorHandler(error, urlSerializer, url) {\n    return urlSerializer.parse('/');\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @param {?} runExtras\n * @return {?}\n */\nfunction defaultRouterHook(snapshot, runExtras) {\n    return /** @type {?} */ (of(null));\n}\n/**\n * \\@description\n *\n * Provides the navigation and url manipulation capabilities.\n *\n * See `Routes` for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n *\n */\nclass Router {\n    /**\n     * Creates the router service.\n     * @param {?} rootComponentType\n     * @param {?} urlSerializer\n     * @param {?} rootContexts\n     * @param {?} location\n     * @param {?} injector\n     * @param {?} loader\n     * @param {?} compiler\n     * @param {?} config\n     */\n    constructor(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new BehaviorSubject(/** @type {?} */ ((null)));\n        this.navigationId = 0;\n        this.isNgZoneEnabled = false;\n        this.events = new Subject();\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See `ErrorHandler` for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Malformed uri error handler is invoked when `Router.parseUrl(url)` throws an\n         * error due to containing an invalid character. The most common case would be a `%` sign\n         * that's not encoded and is not part of a percent encoded sequence.\n         */\n        this.malformedUriErrorHandler = defaultMalformedUriErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * Define what the router should do if it receives a navigation request to the current URL.\n         * By default, the router will ignore this navigation. However, this prevents features such\n         * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n         * current URL. Default is 'ignore'.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n         * Defines how the router merges params, data and resolved data from parent to child\n         * routes. Available options are:\n         *\n         * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n         *   routes.\n         * - `'always'`, enables unconditional inheritance of parent params.\n         */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        /**\n         * Defines when the router updates the browser URL. The default behavior is to update after\n         * successful navigation. However, some applications may prefer a mode where the URL gets\n         * updated at the beginning of navigation. The most common use case would be updating the\n         * URL early so if navigation fails, you can show an error message with the URL that failed.\n         * Available options are:\n         *\n         * - `'deferred'`, the default, updates the browser URL after navigation has finished.\n         * - `'eager'`, updates browser URL at the beginning of navigation.\n         */\n        this.urlUpdateStrategy = 'deferred';\n        /**\n         * See {\\@link RouterModule} for more information.\n         */\n        this.relativeLinkResolution = 'legacy';\n        /** @type {?} */\n        const onLoadStart = (r) => this.triggerEvent(new RouteConfigLoadStart(r));\n        /** @type {?} */\n        const onLoadEnd = (r) => this.triggerEvent(new RouteConfigLoadEnd(r));\n        this.ngModule = injector.get(NgModuleRef);\n        this.console = injector.get(ɵConsole);\n        /** @type {?} */\n        const ngZone = injector.get(NgZone);\n        this.isNgZoneEnabled = ngZone instanceof NgZone;\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    resetRootComponentType(rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    initialNavigation() {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    }\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    setUpLocationChangeListener() {\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = /** @type {?} */ (this.location.subscribe((change) => {\n                /** @type {?} */\n                let rawUrlTree = this.parseUrl(change['url']);\n                /** @type {?} */\n                const source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                /** @type {?} */\n                const state = change.state && change.state.navigationId ?\n                    { navigationId: change.state.navigationId } :\n                    null;\n                setTimeout(() => { this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n            }));\n        }\n    }\n    /**\n     * The current url\n     * @return {?}\n     */\n    get url() { return this.serializeUrl(this.currentUrlTree); }\n    /**\n     * \\@internal\n     * @param {?} event\n     * @return {?}\n     */\n    triggerEvent(event) { (/** @type {?} */ (this.events)).next(event); }\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * \\@usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    resetConfig(config) {\n        validateConfig(config);\n        this.config = config.map(standardizeConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    }\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    ngOnDestroy() { this.dispose(); }\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    dispose() {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = /** @type {?} */ ((null));\n        }\n    }\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * \\@usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    createUrlTree(commands, navigationExtras = {}) {\n        const { relativeTo, queryParams, fragment, preserveQueryParams, queryParamsHandling, preserveFragment } = navigationExtras;\n        if (isDevMode() && preserveQueryParams && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        /** @type {?} */\n        const a = relativeTo || this.routerState.root;\n        /** @type {?} */\n        const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        /** @type {?} */\n        let q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = Object.assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    }\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * \\@usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * Since `navigateByUrl()` takes an absolute URL as the first parameter,\n     * it will not apply any delta to the current URL and ignores any properties\n     * in the second parameter (the `NavigationExtras`) that would change the\n     * provided URL.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    navigateByUrl(url, extras = { skipLocationChange: false }) {\n        if (isDevMode() && this.isNgZoneEnabled && !NgZone.isInAngularZone()) {\n            this.console.warn(`Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?`);\n        }\n        /** @type {?} */\n        const urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        /** @type {?} */\n        const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * \\@usageNotes\n     *\n     * ### Example\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * The first parameter of `navigate()` is a delta to be applied to the current URL\n     * or the one provided in the `relativeTo` property of the second parameter (the\n     * `NavigationExtras`).\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    navigate(commands, extras = { skipLocationChange: false }) {\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /**\n     * Serializes a `UrlTree` into a string\n     * @param {?} url\n     * @return {?}\n     */\n    serializeUrl(url) { return this.urlSerializer.serialize(url); }\n    /**\n     * Parses a string into a `UrlTree`\n     * @param {?} url\n     * @return {?}\n     */\n    parseUrl(url) {\n        /** @type {?} */\n        let urlTree;\n        try {\n            urlTree = this.urlSerializer.parse(url);\n        }\n        catch (e) {\n            urlTree = this.malformedUriErrorHandler(e, this.urlSerializer, url);\n        }\n        return urlTree;\n    }\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    isActive(url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        /** @type {?} */\n        const urlTree = this.parseUrl(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    }\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    removeEmptyProps(params) {\n        return Object.keys(params).reduce((result, key) => {\n            /** @type {?} */\n            const value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    }\n    /**\n     * @return {?}\n     */\n    processNavigations() {\n        this.navigations\n            .pipe(concatMap((nav) => {\n            if (nav) {\n                this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(() => { });\n            }\n            else {\n                return /** @type {?} */ (of(null));\n            }\n        }))\n            .subscribe(() => { });\n    }\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} state\n     * @param {?} extras\n     * @return {?}\n     */\n    scheduleNavigation(rawUrl, source, state, extras) {\n        /** @type {?} */\n        const lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        /** @type {?} */\n        let resolve = null;\n        /** @type {?} */\n        let reject = null;\n        /** @type {?} */\n        const promise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        /** @type {?} */\n        const id = ++this.navigationId;\n        this.navigations.next({ id, source, state, rawUrl, extras, resolve, reject, promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch((e) => Promise.reject(e));\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    executeScheduledNavigation({ id, rawUrl, extras, resolve, reject, source, state }) {\n        /** @type {?} */\n        const url = this.urlHandlingStrategy.extract(rawUrl);\n        /** @type {?} */\n        const urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n            this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            if (this.urlUpdateStrategy === 'eager' && !extras.skipLocationChange) {\n                this.setBrowserUrl(rawUrl, !!extras.replaceUrl, id);\n            }\n            (/** @type {?} */ (this.events))\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then((_) => this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null))\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            (/** @type {?} */ (this.events))\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then((_) => this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, this.rootComponentType).snapshot))\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    }\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    runNavigate(url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n        if (id !== this.navigationId) {\n            (/** @type {?} */ (this.events))\n                .next(new NavigationCancel(id, this.serializeUrl(url), `Navigation ID ${id} is not equal to the current navigation id ${this.navigationId}`));\n            return Promise.resolve(false);\n        }\n        return new Promise((resolvePromise, rejectPromise) => {\n            /** @type {?} */\n            let urlAndSnapshot$;\n            if (!precreatedState) {\n                /** @type {?} */\n                const moduleInjector = this.ngModule.injector;\n                /** @type {?} */\n                const redirectsApplied$ = applyRedirects(moduleInjector, this.configLoader, this.urlSerializer, url, this.config);\n                urlAndSnapshot$ = redirectsApplied$.pipe(mergeMap((appliedUrl) => {\n                    return recognize(this.rootComponentType, this.config, appliedUrl, this.serializeUrl(appliedUrl), this.paramsInheritanceStrategy, this.relativeLinkResolution)\n                        .pipe(map((snapshot) => {\n                        (/** @type {?} */ (this.events))\n                            .next(new RoutesRecognized(id, this.serializeUrl(url), this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl, snapshot };\n                    }));\n                }));\n            }\n            else {\n                urlAndSnapshot$ = of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            /** @type {?} */\n            const beforePreactivationDone$ = urlAndSnapshot$.pipe(mergeMap((p) => {\n                if (typeof p === 'boolean')\n                    return of(p);\n                return this.hooks\n                    .beforePreactivation(p.snapshot, {\n                    navigationId: id,\n                    appliedUrlTree: url,\n                    rawUrlTree: rawUrl, skipLocationChange, replaceUrl,\n                })\n                    .pipe(map(() => p));\n            }));\n            /** @type {?} */\n            let preActivation;\n            /** @type {?} */\n            const preactivationSetup$ = beforePreactivationDone$.pipe(map((p) => {\n                if (typeof p === 'boolean')\n                    return p;\n                const { appliedUrl, snapshot } = p;\n                /** @type {?} */\n                const moduleInjector = this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, this.routerState.snapshot, moduleInjector, (evt) => this.triggerEvent(evt));\n                preActivation.initialize(this.rootContexts);\n                return { appliedUrl, snapshot };\n            }));\n            /** @type {?} */\n            const preactivationCheckGuards$ = preactivationSetup$.pipe(mergeMap((p) => {\n                if (typeof p === 'boolean' || this.navigationId !== id)\n                    return of(false);\n                const { appliedUrl, snapshot } = p;\n                this.triggerEvent(new GuardsCheckStart(id, this.serializeUrl(url), this.serializeUrl(appliedUrl), snapshot));\n                return preActivation.checkGuards().pipe(map((shouldActivate) => {\n                    this.triggerEvent(new GuardsCheckEnd(id, this.serializeUrl(url), this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                }));\n            }));\n            /** @type {?} */\n            const preactivationResolveData$ = preactivationCheckGuards$.pipe(mergeMap((p) => {\n                if (typeof p === 'boolean' || this.navigationId !== id)\n                    return of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    this.triggerEvent(new ResolveStart(id, this.serializeUrl(url), this.serializeUrl(p.appliedUrl), p.snapshot));\n                    return preActivation.resolveData(this.paramsInheritanceStrategy).pipe(map(() => {\n                        this.triggerEvent(new ResolveEnd(id, this.serializeUrl(url), this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return p;\n                    }));\n                }\n                else {\n                    return of(p);\n                }\n            }));\n            /** @type {?} */\n            const preactivationDone$ = preactivationResolveData$.pipe(mergeMap((p) => {\n                if (typeof p === 'boolean' || this.navigationId !== id)\n                    return of(false);\n                return this.hooks\n                    .afterPreactivation(p.snapshot, {\n                    navigationId: id,\n                    appliedUrlTree: url,\n                    rawUrlTree: rawUrl, skipLocationChange, replaceUrl,\n                })\n                    .pipe(map(() => p));\n            }));\n            /** @type {?} */\n            const routerState$ = preactivationDone$.pipe(map((p) => {\n                if (typeof p === 'boolean' || this.navigationId !== id)\n                    return false;\n                const { appliedUrl, snapshot, shouldActivate } = p;\n                if (shouldActivate) {\n                    /** @type {?} */\n                    const state = createRouterState(this.routeReuseStrategy, snapshot, this.routerState);\n                    return { appliedUrl, state, shouldActivate };\n                }\n                else {\n                    return { appliedUrl, state: null, shouldActivate };\n                }\n            }));\n            this.activateRoutes(routerState$, this.routerState, this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n        });\n    }\n    /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     * @param {?} state\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} id\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} resolvePromise\n     * @param {?} rejectPromise\n     * @return {?}\n     */\n    activateRoutes(state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n        /** @type {?} */\n        let navigationIsSuccessful;\n        state\n            .forEach((p) => {\n            if (typeof p === 'boolean' || !p.shouldActivate || id !== this.navigationId || !p.state) {\n                navigationIsSuccessful = false;\n                return;\n            }\n            const { appliedUrl, state } = p;\n            this.currentUrlTree = appliedUrl;\n            this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n            (/** @type {?} */ (this)).routerState = state;\n            if (this.urlUpdateStrategy === 'deferred' && !skipLocationChange) {\n                this.setBrowserUrl(this.rawUrlTree, replaceUrl, id);\n            }\n            new ActivateRoutes(this.routeReuseStrategy, state, storedState, (evt) => this.triggerEvent(evt))\n                .activate(this.rootContexts);\n            navigationIsSuccessful = true;\n        })\n            .then(() => {\n            if (navigationIsSuccessful) {\n                this.navigated = true;\n                this.lastSuccessfulId = id;\n                (/** @type {?} */ (this.events))\n                    .next(new NavigationEnd(id, this.serializeUrl(url), this.serializeUrl(this.currentUrlTree)));\n                resolvePromise(true);\n            }\n            else {\n                this.resetUrlToCurrentUrlTree();\n                (/** @type {?} */ (this.events))\n                    .next(new NavigationCancel(id, this.serializeUrl(url), ''));\n                resolvePromise(false);\n            }\n        }, (e) => {\n            if (isNavigationCancelingError(e)) {\n                this.navigated = true;\n                this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                (/** @type {?} */ (this.events))\n                    .next(new NavigationCancel(id, this.serializeUrl(url), e.message));\n                resolvePromise(false);\n            }\n            else {\n                this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                (/** @type {?} */ (this.events))\n                    .next(new NavigationError(id, this.serializeUrl(url), e));\n                try {\n                    resolvePromise(this.errorHandler(e));\n                }\n                catch (ee) {\n                    rejectPromise(ee);\n                }\n            }\n        });\n    }\n    /**\n     * @param {?} url\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @return {?}\n     */\n    setBrowserUrl(url, replaceUrl, id) {\n        /** @type {?} */\n        const path = this.urlSerializer.serialize(url);\n        if (this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n            this.location.replaceState(path, '', { navigationId: id });\n        }\n        else {\n            this.location.go(path, '', { navigationId: id });\n        }\n    }\n    /**\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    resetStateAndUrl(storedState, storedUrl, rawUrl) {\n        (/** @type {?} */ (this)).routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    }\n    /**\n     * @return {?}\n     */\n    resetUrlToCurrentUrlTree() {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    }\n}\nclass ActivateRoutes {\n    /**\n     * @param {?} routeReuseStrategy\n     * @param {?} futureState\n     * @param {?} currState\n     * @param {?} forwardEvent\n     */\n    constructor(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    activate(parentContexts) {\n        /** @type {?} */\n        const futureRoot = this.futureState._root;\n        /** @type {?} */\n        const currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    }\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    deactivateChildRoutes(futureNode, currNode, contexts) {\n        /** @type {?} */\n        const children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(futureChild => {\n            /** @type {?} */\n            const childOutletName = futureChild.value.outlet;\n            this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, (v, childName) => {\n            this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    }\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    deactivateRoutes(futureNode, currNode, parentContext) {\n        /** @type {?} */\n        const future = futureNode.value;\n        /** @type {?} */\n        const curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                /** @type {?} */\n                const context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    }\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    deactivateRouteAndItsChildren(route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    }\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    detachAndStoreRouteSubtree(route, parentContexts) {\n        /** @type {?} */\n        const context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            /** @type {?} */\n            const componentRef = context.outlet.detach();\n            /** @type {?} */\n            const contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef, route, contexts });\n        }\n    }\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    deactivateRouteAndOutlet(route, parentContexts) {\n        /** @type {?} */\n        const context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            /** @type {?} */\n            const children = nodeChildrenAsMap(route);\n            /** @type {?} */\n            const contexts = route.value.component ? context.children : parentContexts;\n            forEach(children, (v, k) => this.deactivateRouteAndItsChildren(v, contexts));\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    }\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    activateChildRoutes(futureNode, currNode, contexts) {\n        /** @type {?} */\n        const children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(c => {\n            this.activateRoutes(c, children[c.value.outlet], contexts);\n            this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    }\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    activateRoutes(futureNode, currNode, parentContexts) {\n        /** @type {?} */\n        const future = futureNode.value;\n        /** @type {?} */\n        const curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                /** @type {?} */\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                /** @type {?} */\n                const context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    /** @type {?} */\n                    const stored = (/** @type {?} */ (this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    /** @type {?} */\n                    const config = parentLoadedConfig(future.snapshot);\n                    /** @type {?} */\n                    const cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.attachRef = null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    }\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (let s = snapshot.parent; s; s = s.parent) {\n        /** @type {?} */\n        const route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (let i = 0; i < commands.length; i++) {\n        /** @type {?} */\n        const cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(`The requested path contains ${cmd} segment at index ${i}`);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {\\@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {\\@link Router#createUrlTree createUrlTree} for more information.\n *\n * \\@ngModule RouterModule\n *\n *\n */\nclass RouterLink {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} tabIndex\n     * @param {?} renderer\n     * @param {?} el\n     */\n    constructor(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    /**\n     * @param {?} commands\n     * @return {?}\n     */\n    set routerLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    /**\n     * @deprecated 4.0.0 use `queryParamsHandling` instead.\n     * @param {?} value\n     * @return {?}\n     */\n    set preserveQueryParams(value) {\n        if (isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n        /** @type {?} */\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    }\n    /**\n     * @return {?}\n     */\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            preserveQueryParams: attrBoolValue(this.preserve),\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment),\n        });\n    }\n}\nRouterLink.decorators = [\n    { type: Directive, args: [{ selector: ':not(a)[routerLink]' },] }\n];\n/** @nocollapse */\nRouterLink.ctorParameters = () => [\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nRouterLink.propDecorators = {\n    queryParams: [{ type: Input }],\n    fragment: [{ type: Input }],\n    queryParamsHandling: [{ type: Input }],\n    preserveFragment: [{ type: Input }],\n    skipLocationChange: [{ type: Input }],\n    replaceUrl: [{ type: Input }],\n    routerLink: [{ type: Input }],\n    preserveQueryParams: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click',] }]\n};\n/**\n * \\@description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * \\@ngModule RouterModule\n *\n *\n */\nclass RouterLinkWithHref {\n    /**\n     * @param {?} router\n     * @param {?} route\n     * @param {?} locationStrategy\n     */\n    constructor(router, route, locationStrategy) {\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    /**\n     * @param {?} commands\n     * @return {?}\n     */\n    set routerLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set preserveQueryParams(value) {\n        if (isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) { this.updateTargetUrlAndHref(); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this.subscription.unsubscribe(); }\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    onClick(button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        /** @type {?} */\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    updateTargetUrlAndHref() {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    }\n    /**\n     * @return {?}\n     */\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            preserveQueryParams: attrBoolValue(this.preserve),\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment),\n        });\n    }\n}\nRouterLinkWithHref.decorators = [\n    { type: Directive, args: [{ selector: 'a[routerLink]' },] }\n];\n/** @nocollapse */\nRouterLinkWithHref.ctorParameters = () => [\n    { type: Router },\n    { type: ActivatedRoute },\n    { type: LocationStrategy }\n];\nRouterLinkWithHref.propDecorators = {\n    target: [{ type: HostBinding, args: ['attr.target',] }, { type: Input }],\n    queryParams: [{ type: Input }],\n    fragment: [{ type: Input }],\n    queryParamsHandling: [{ type: Input }],\n    preserveFragment: [{ type: Input }],\n    skipLocationChange: [{ type: Input }],\n    replaceUrl: [{ type: Input }],\n    href: [{ type: HostBinding }],\n    routerLink: [{ type: Input }],\n    preserveQueryParams: [{ type: Input }],\n    onClick: [{ type: HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] }]\n};\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n *\n * \\@description\n *\n * Lets you add a CSS class to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n *\n */\nclass RouterLinkActive {\n    /**\n     * @param {?} router\n     * @param {?} element\n     * @param {?} renderer\n     * @param {?} cdr\n     */\n    constructor(router, element, renderer, cdr) {\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.update();\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.links.changes.subscribe(_ => this.update());\n        this.linksWithHrefs.changes.subscribe(_ => this.update());\n        this.update();\n    }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set routerLinkActive(data) {\n        /** @type {?} */\n        const classes = Array.isArray(data) ? data : data.split(' ');\n        this.classes = classes.filter(c => !!c);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) { this.update(); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this.subscription.unsubscribe(); }\n    /**\n     * @return {?}\n     */\n    update() {\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(() => {\n            /** @type {?} */\n            const hasActiveLinks = this.hasActiveLinks();\n            if (this.isActive !== hasActiveLinks) {\n                (/** @type {?} */ (this)).isActive = hasActiveLinks;\n                this.classes.forEach((c) => {\n                    if (hasActiveLinks) {\n                        this.renderer.addClass(this.element.nativeElement, c);\n                    }\n                    else {\n                        this.renderer.removeClass(this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    }\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    isLinkActive(router) {\n        return (link) => router.isActive(link.urlTree, this.routerLinkActiveOptions.exact);\n    }\n    /**\n     * @return {?}\n     */\n    hasActiveLinks() {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    }\n}\nRouterLinkActive.decorators = [\n    { type: Directive, args: [{\n                selector: '[routerLinkActive]',\n                exportAs: 'routerLinkActive',\n            },] }\n];\n/** @nocollapse */\nRouterLinkActive.ctorParameters = () => [\n    { type: Router },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef }\n];\nRouterLinkActive.propDecorators = {\n    links: [{ type: ContentChildren, args: [RouterLink, { descendants: true },] }],\n    linksWithHrefs: [{ type: ContentChildren, args: [RouterLinkWithHref, { descendants: true },] }],\n    routerLinkActiveOptions: [{ type: Input }],\n    routerLinkActive: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n *\n */\nclass OutletContext {\n    constructor() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n *\n */\nclass ChildrenOutletContexts {\n    constructor() {\n        this.contexts = new Map();\n    }\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    onChildOutletCreated(childName, outlet) {\n        /** @type {?} */\n        const context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    onChildOutletDestroyed(childName) {\n        /** @type {?} */\n        const context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    onOutletDeactivated() {\n        /** @type {?} */\n        const contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    }\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    onOutletReAttached(contexts) { this.contexts = contexts; }\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    getOrCreateContext(childName) {\n        /** @type {?} */\n        let context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    }\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    getContext(childName) { return this.contexts.get(childName) || null; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n *\n */\nclass RouterOutlet {\n    /**\n     * @param {?} parentContexts\n     * @param {?} location\n     * @param {?} resolver\n     * @param {?} name\n     * @param {?} changeDetector\n     */\n    constructor(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new EventEmitter();\n        this.deactivateEvents = new EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this.parentContexts.onChildOutletDestroyed(this.name); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (!this.activated) {\n            /** @type {?} */\n            const context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get isActivated() { return !!this.activated; }\n    /**\n     * @return {?}\n     */\n    get component() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        return this.activated.instance;\n    }\n    /**\n     * @return {?}\n     */\n    get activatedRoute() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        return /** @type {?} */ (this._activatedRoute);\n    }\n    /**\n     * @return {?}\n     */\n    get activatedRouteData() {\n        if (this._activatedRoute) {\n            return this._activatedRoute.snapshot.data;\n        }\n        return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    detach() {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        /** @type {?} */\n        const cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    attach(ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    }\n    /**\n     * @return {?}\n     */\n    deactivate() {\n        if (this.activated) {\n            /** @type {?} */\n            const c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    }\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    activateWith(activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        /** @type {?} */\n        const snapshot = activatedRoute._futureSnapshot;\n        /** @type {?} */\n        const component = /** @type {?} */ (/** @type {?} */ ((snapshot.routeConfig)).component);\n        resolver = resolver || this.resolver;\n        /** @type {?} */\n        const factory = resolver.resolveComponentFactory(component);\n        /** @type {?} */\n        const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        /** @type {?} */\n        const injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    }\n}\nRouterOutlet.decorators = [\n    { type: Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] }\n];\n/** @nocollapse */\nRouterOutlet.ctorParameters = () => [\n    { type: ChildrenOutletContexts },\n    { type: ViewContainerRef },\n    { type: ComponentFactoryResolver },\n    { type: String, decorators: [{ type: Attribute, args: ['name',] }] },\n    { type: ChangeDetectorRef }\n];\nRouterOutlet.propDecorators = {\n    activateEvents: [{ type: Output, args: ['activate',] }],\n    deactivateEvents: [{ type: Output, args: ['deactivate',] }]\n};\nclass OutletInjector {\n    /**\n     * @param {?} route\n     * @param {?} childContexts\n     * @param {?} parent\n     */\n    constructor(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nclass PreloadingStrategy {\n}\n/**\n * \\@description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nclass PreloadAllModules {\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    preload(route, fn) {\n        return fn().pipe(catchError(() => of(null)));\n    }\n}\n/**\n * \\@description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nclass NoPreloading {\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    preload(route, fn) { return of(null); }\n}\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n *\n */\nclass RouterPreloader {\n    /**\n     * @param {?} router\n     * @param {?} moduleLoader\n     * @param {?} compiler\n     * @param {?} injector\n     * @param {?} preloadingStrategy\n     */\n    constructor(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        /** @type {?} */\n        const onStartLoad = (r) => router.triggerEvent(new RouteConfigLoadStart(r));\n        /** @type {?} */\n        const onEndLoad = (r) => router.triggerEvent(new RouteConfigLoadEnd(r));\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    /**\n     * @return {?}\n     */\n    setUpPreloading() {\n        this.subscription =\n            this.router.events\n                .pipe(filter((e) => e instanceof NavigationEnd), concatMap(() => this.preload()))\n                .subscribe(() => { });\n    }\n    /**\n     * @return {?}\n     */\n    preload() {\n        /** @type {?} */\n        const ngModule = this.injector.get(NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this.subscription.unsubscribe(); }\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    processRoutes(ngModule, routes) {\n        /** @type {?} */\n        const res = [];\n        for (const route of routes) {\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                /** @type {?} */\n                const childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return from(res).pipe(mergeAll(), map((_) => void 0));\n    }\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    preloadConfig(ngModule, route) {\n        return this.preloadingStrategy.preload(route, () => {\n            /** @type {?} */\n            const loaded$ = this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(mergeMap((config) => {\n                route._loadedConfig = config;\n                return this.processRoutes(config.module, config.routes);\n            }));\n        });\n    }\n}\nRouterPreloader.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nRouterPreloader.ctorParameters = () => [\n    { type: Router },\n    { type: NgModuleFactoryLoader },\n    { type: Compiler },\n    { type: Injector },\n    { type: PreloadingStrategy }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass RouterScroller {\n    /**\n     * @param {?} router\n     * @param {?} viewportScroller\n     * @param {?=} options\n     */\n    constructor(router, viewportScroller, options = {}) {\n        this.router = router;\n        this.viewportScroller = viewportScroller;\n        this.options = options;\n        this.lastId = 0;\n        this.lastSource = 'imperative';\n        this.restoredId = 0;\n        this.store = {};\n        // Default both options to 'disabled'\n        options.scrollPositionRestoration = options.scrollPositionRestoration || 'disabled';\n        options.anchorScrolling = options.anchorScrolling || 'disabled';\n    }\n    /**\n     * @return {?}\n     */\n    init() {\n        // we want to disable the automatic scrolling because having two places\n        // responsible for scrolling results race conditions, especially given\n        // that browser don't implement this behavior consistently\n        if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.setHistoryScrollRestoration('manual');\n        }\n        this.routerEventsSubscription = this.createScrollEvents();\n        this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n    /**\n     * @return {?}\n     */\n    createScrollEvents() {\n        return this.router.events.subscribe(e => {\n            if (e instanceof NavigationStart) {\n                // store the scroll position of the current stable navigations.\n                this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n                this.lastSource = e.navigationTrigger;\n                this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n            }\n            else if (e instanceof NavigationEnd) {\n                this.lastId = e.id;\n                this.scheduleScrollEvent(e, this.router.parseUrl(e.urlAfterRedirects).fragment);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    consumeScrollEvents() {\n        return this.router.events.subscribe(e => {\n            if (!(e instanceof Scroll))\n                return;\n            // a popstate event. The pop state event will always ignore anchor scrolling.\n            if (e.position) {\n                if (this.options.scrollPositionRestoration === 'top') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n                else if (this.options.scrollPositionRestoration === 'enabled') {\n                    this.viewportScroller.scrollToPosition(e.position);\n                }\n                // imperative navigation \"forward\"\n            }\n            else {\n                if (e.anchor && this.options.anchorScrolling === 'enabled') {\n                    this.viewportScroller.scrollToAnchor(e.anchor);\n                }\n                else if (this.options.scrollPositionRestoration !== 'disabled') {\n                    this.viewportScroller.scrollToPosition([0, 0]);\n                }\n            }\n        });\n    }\n    /**\n     * @param {?} routerEvent\n     * @param {?} anchor\n     * @return {?}\n     */\n    scheduleScrollEvent(routerEvent, anchor) {\n        this.router.triggerEvent(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.routerEventsSubscription) {\n            this.routerEventsSubscription.unsubscribe();\n        }\n        if (this.scrollEventsSubscription) {\n            this.scrollEventsSubscription.unsubscribe();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * \\@description\n *\n * Contains a list of directives\n *\n *\n  @type {?} */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive, EmptyOutletComponent];\n/** *\n * \\@description\n *\n * Is used in DI to configure the router.\n *\n *\n  @type {?} */\nconst ROUTER_CONFIGURATION = new InjectionToken('ROUTER_CONFIGURATION');\n/** *\n * \\@docsNotRequired\n  @type {?} */\nconst ROUTER_FORROOT_GUARD = new InjectionToken('ROUTER_FORROOT_GUARD');\n/** @type {?} */\nconst ROUTER_PROVIDERS = [\n    Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            ApplicationRef, UrlSerializer, ChildrenOutletContexts, Location, Injector,\n            NgModuleFactoryLoader, Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new Optional()], [RouteReuseStrategy, new Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new NgProbeToken('Router', Router);\n}\n/**\n * \\@usageNotes\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Adds router directives and providers.\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n *\n */\nclass RouterModule {\n    /**\n     * @param {?} guard\n     * @param {?} router\n     */\n    constructor(guard, router) { }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see `ExtraOptions`):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * `ExtraOptions` for more details.\n     * * `paramsInheritanceStrategy` defines how the router merges params, data and resolved data\n     * from parent to child routes.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    static forRoot(routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new Optional(), new SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        PlatformLocation, [new Inject(APP_BASE_HREF), new Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: RouterScroller,\n                    useFactory: createRouterScroller,\n                    deps: [Router, ViewportScroller, ROUTER_CONFIGURATION]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    static forChild(routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    }\n}\nRouterModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: ROUTER_DIRECTIVES,\n                exports: ROUTER_DIRECTIVES,\n                entryComponents: [EmptyOutletComponent]\n            },] }\n];\n/** @nocollapse */\nRouterModule.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ROUTER_FORROOT_GUARD,] }] },\n    { type: Router, decorators: [{ type: Optional }] }\n];\n/**\n * @param {?} router\n * @param {?} viewportScroller\n * @param {?} config\n * @return {?}\n */\nfunction createRouterScroller(router, viewportScroller, config) {\n    if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n    }\n    return new RouterScroller(router, viewportScroller, config);\n}\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options = {}) {\n    return options.useHash ? new HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(`RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.`);\n    }\n    return 'guarded';\n}\n/**\n * \\@description\n *\n * Registers routes.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n *\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts = {}, urlHandlingStrategy, routeReuseStrategy) {\n    /** @type {?} */\n    const router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.malformedUriErrorHandler) {\n        router.malformedUriErrorHandler = opts.malformedUriErrorHandler;\n    }\n    if (opts.enableTracing) {\n        /** @type {?} */\n        const dom = ɵgetDOM();\n        router.events.subscribe((e) => {\n            dom.logGroup(`Router Event: ${((/** @type {?} */ (e.constructor))).name}`);\n            dom.log(e.toString());\n            dom.log(e);\n            dom.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    if (opts.urlUpdateStrategy) {\n        router.urlUpdateStrategy = opts.urlUpdateStrategy;\n    }\n    if (opts.relativeLinkResolution) {\n        router.relativeLinkResolution = opts.relativeLinkResolution;\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nclass RouterInitializer {\n    /**\n     * @param {?} injector\n     */\n    constructor(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    appInitializer() {\n        /** @type {?} */\n        const p = this.injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(() => {\n            /** @type {?} */\n            let resolve = /** @type {?} */ ((null));\n            /** @type {?} */\n            const res = new Promise(r => resolve = r);\n            /** @type {?} */\n            const router = this.injector.get(Router);\n            /** @type {?} */\n            const opts = this.injector.get(ROUTER_CONFIGURATION);\n            if (this.isLegacyDisabled(opts) || this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = () => {\n                    // only the initial navigation should be delayed\n                    if (!this.initNavigation) {\n                        this.initNavigation = true;\n                        resolve(true);\n                        return this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return /** @type {?} */ (of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(`Invalid initialNavigation options: '${opts.initialNavigation}'`);\n            }\n            return res;\n        });\n    }\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    bootstrapListener(bootstrappedComponentRef) {\n        /** @type {?} */\n        const opts = this.injector.get(ROUTER_CONFIGURATION);\n        /** @type {?} */\n        const preloader = this.injector.get(RouterPreloader);\n        /** @type {?} */\n        const routerScroller = this.injector.get(RouterScroller);\n        /** @type {?} */\n        const router = this.injector.get(Router);\n        /** @type {?} */\n        const ref = this.injector.get(ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        routerScroller.init();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    }\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    isLegacyEnabled(opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    }\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    isLegacyDisabled(opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    }\n}\nRouterInitializer.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nRouterInitializer.ctorParameters = () => [\n    { type: Injector }\n];\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/** *\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n  @type {?} */\nconst ROUTER_INITIALIZER = new InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VERSION = new Version('6.1.10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ROUTER_FORROOT_GUARD as ɵangular_packages_router_router_a, RouterInitializer as ɵangular_packages_router_router_h, createRouterScroller as ɵangular_packages_router_router_c, getAppInitializer as ɵangular_packages_router_router_i, getBootstrapListener as ɵangular_packages_router_router_j, provideForRootGuard as ɵangular_packages_router_router_e, provideLocationStrategy as ɵangular_packages_router_router_d, provideRouterInitializer as ɵangular_packages_router_router_k, rootRoute as ɵangular_packages_router_router_g, routerNgProbeToken as ɵangular_packages_router_router_b, setupRouter as ɵangular_packages_router_router_f, RouterScroller as ɵangular_packages_router_router_n, Tree as ɵangular_packages_router_router_l, TreeNode as ɵangular_packages_router_router_m, RouterLink, RouterLinkWithHref, RouterLinkActive, RouterOutlet, ActivationEnd, ActivationStart, ChildActivationEnd, ChildActivationStart, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouterEvent, RoutesRecognized, Scroll, RouteReuseStrategy, Router, ROUTES, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, RouterModule, provideRoutes, ChildrenOutletContexts, OutletContext, NoPreloading, PreloadAllModules, PreloadingStrategy, RouterPreloader, ActivatedRoute, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot, PRIMARY_OUTLET, convertToParamMap, UrlHandlingStrategy, DefaultUrlSerializer, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, EmptyOutletComponent as ɵEmptyOutletComponent, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, flatten as ɵflatten };\n//# sourceMappingURL=router.js.map\n","import { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\nconst NONE = {};\n/* tslint:enable:max-line-length */\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * <img src=\"./img/combineLatest.png\" width=\"100%\">\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all that values but last\n * will be lost. On the other hand, is some Observable does not emit value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n *\n * @example <caption>Combine two timer Observables</caption>\n * const firstTimer = Rx.Observable.timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = Rx.Observable.timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = Rx.Observable.combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n *\n *\n * @example <caption>Combine an array of Observables</caption>\n * const observables = [1, 5, 10].map(\n *   n => Rx.Observable.of(n).delay(n * 1000).startWith(0) // emit 0 and then emit n after n seconds\n * );\n * const combined = Rx.Observable.combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n *\n *\n * @example <caption>Use project function to dynamically calculate the Body-Mass Index</caption>\n * var weight = Rx.Observable.of(70, 72, 76, 79, 75);\n * var height = Rx.Observable.of(1.76, 1.77, 1.78);\n * var bmi = Rx.Observable.combineLatest(weight, height, (w, h) => w / (h * h));\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n *\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest(...observables) {\n    let resultSelector = null;\n    let scheduler = null;\n    if (isScheduler(observables[observables.length - 1])) {\n        scheduler = observables.pop();\n    }\n    if (typeof observables[observables.length - 1] === 'function') {\n        resultSelector = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0];\n    }\n    return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\nexport class CombineLatestOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber extends OuterSubscriber {\n    constructor(destination, resultSelector) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.active = 0;\n        this.values = [];\n        this.observables = [];\n    }\n    _next(observable) {\n        this.values.push(NONE);\n        this.observables.push(observable);\n    }\n    _complete() {\n        const observables = this.observables;\n        const len = observables.length;\n        if (len === 0) {\n            this.destination.complete();\n        }\n        else {\n            this.active = len;\n            this.toRespond = len;\n            for (let i = 0; i < len; i++) {\n                const observable = observables[i];\n                this.add(subscribeToResult(this, observable, observable, i));\n            }\n        }\n    }\n    notifyComplete(unused) {\n        if ((this.active -= 1) === 0) {\n            this.destination.complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        const values = this.values;\n        const oldVal = values[outerIndex];\n        const toRespond = !this.toRespond\n            ? 0\n            : oldVal === NONE ? --this.toRespond : this.toRespond;\n        values[outerIndex] = innerValue;\n        if (toRespond === 0) {\n            if (this.resultSelector) {\n                this._tryResultSelector(values);\n            }\n            else {\n                this.destination.next(values.slice());\n            }\n        }\n    }\n    _tryResultSelector(values) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, values);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=combineLatest.js.map","import { Subject } from './Subject';\nimport { queue } from './scheduler/queue';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject extends Subject {\n    constructor(bufferSize = Number.POSITIVE_INFINITY, windowTime = Number.POSITIVE_INFINITY, scheduler) {\n        super();\n        this.scheduler = scheduler;\n        this._events = [];\n        this._infiniteTimeWindow = false;\n        this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n        this._windowTime = windowTime < 1 ? 1 : windowTime;\n        if (windowTime === Number.POSITIVE_INFINITY) {\n            this._infiniteTimeWindow = true;\n            this.next = this.nextInfiniteTimeWindow;\n        }\n        else {\n            this.next = this.nextTimeWindow;\n        }\n    }\n    nextInfiniteTimeWindow(value) {\n        const _events = this._events;\n        _events.push(value);\n        // Since this method is invoked in every next() call than the buffer\n        // can overgrow the max size only by one item\n        if (_events.length > this._bufferSize) {\n            _events.shift();\n        }\n        super.next(value);\n    }\n    nextTimeWindow(value) {\n        this._events.push(new ReplayEvent(this._getNow(), value));\n        this._trimBufferThenGetEvents();\n        super.next(value);\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n        const _infiniteTimeWindow = this._infiniteTimeWindow;\n        const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n        const scheduler = this.scheduler;\n        const len = _events.length;\n        let subscription;\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.isStopped || this.hasError) {\n            subscription = Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            subscription = new SubjectSubscription(this, subscriber);\n        }\n        if (scheduler) {\n            subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));\n        }\n        if (_infiniteTimeWindow) {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i]);\n            }\n        }\n        else {\n            for (let i = 0; i < len && !subscriber.closed; i++) {\n                subscriber.next(_events[i].value);\n            }\n        }\n        if (this.hasError) {\n            subscriber.error(this.thrownError);\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n        }\n        return subscription;\n    }\n    _getNow() {\n        return (this.scheduler || queue).now();\n    }\n    _trimBufferThenGetEvents() {\n        const now = this._getNow();\n        const _bufferSize = this._bufferSize;\n        const _windowTime = this._windowTime;\n        const _events = this._events;\n        const eventsCount = _events.length;\n        let spliceCount = 0;\n        // Trim events that fall out of the time window.\n        // Start at the front of the list. Break early once\n        // we encounter an event that falls within the window.\n        while (spliceCount < eventsCount) {\n            if ((now - _events[spliceCount].time) < _windowTime) {\n                break;\n            }\n            spliceCount++;\n        }\n        if (eventsCount > _bufferSize) {\n            spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n        }\n        if (spliceCount > 0) {\n            _events.splice(0, spliceCount);\n        }\n        return _events;\n    }\n}\nclass ReplayEvent {\n    constructor(time, value) {\n        this.time = time;\n        this.value = value;\n    }\n}\n//# sourceMappingURL=ReplaySubject.js.map","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = typeof Symbol === 'function' && Symbol.observable || '@@observable';\n//# sourceMappingURL=observable.js.map","import { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/audit.png\" width=\"100%\">\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.audit(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit(durationSelector) {\n    return function auditOperatorFunction(source) {\n        return source.lift(new AuditOperator(durationSelector));\n    };\n}\nclass AuditOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n        if (!this.throttled) {\n            const duration = tryCatch(this.durationSelector)(value);\n            if (duration === errorObject) {\n                this.destination.error(errorObject.e);\n            }\n            else {\n                const innerSubscription = subscribeToResult(this, duration);\n                if (innerSubscription.closed) {\n                    this.clearThrottle();\n                }\n                else {\n                    this.add(this.throttled = innerSubscription);\n                }\n            }\n        }\n    }\n    clearThrottle() {\n        const { value, hasValue, throttled } = this;\n        if (throttled) {\n            this.remove(throttled);\n            this.throttled = null;\n            throttled.unsubscribe();\n        }\n        if (hasValue) {\n            this.value = null;\n            this.hasValue = false;\n            this.destination.next(value);\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex) {\n        this.clearThrottle();\n    }\n    notifyComplete() {\n        this.clearThrottle();\n    }\n}\n//# sourceMappingURL=audit.js.map","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source values, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * <img src=\"./img/auditTime.png\" width=\"100%\">\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.auditTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime(duration, scheduler = async) {\n    return audit(() => timer(duration, scheduler));\n}\n//# sourceMappingURL=auditTime.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * <img src=\"./img/buffer.png\" width=\"100%\">\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * @example <caption>On every click, emit array of most recent interval events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var buffered = interval.buffer(clicks);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer(closingNotifier) {\n    return function bufferOperatorFunction(source) {\n        return source.lift(new BufferOperator(closingNotifier));\n    };\n}\nclass BufferOperator {\n    constructor(closingNotifier) {\n        this.closingNotifier = closingNotifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber extends OuterSubscriber {\n    constructor(destination, closingNotifier) {\n        super(destination);\n        this.buffer = [];\n        this.add(subscribeToResult(this, closingNotifier));\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        const buffer = this.buffer;\n        this.buffer = [];\n        this.destination.next(buffer);\n    }\n}\n//# sourceMappingURL=buffer.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * <img src=\"./img/bufferCount.png\" width=\"100%\">\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * @example <caption>Emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>On every click, emit the last two click events as an array</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferCount(2, 1);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nclass BufferCountOperator {\n    constructor(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    _next(value) {\n        const buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize, startBufferEvery) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    _next(value) {\n        const { bufferSize, startBufferEvery, buffers, count } = this;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (let i = buffers.length; i--;) {\n            const buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    }\n    _complete() {\n        const { buffers, destination } = this;\n        while (buffers.length > 0) {\n            let buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        super._complete();\n    }\n}\n//# sourceMappingURL=bufferCount.js.map","import { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * <img src=\"./img/bufferTime.png\" width=\"100%\">\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * @example <caption>Every second, emit an array of the recent click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(1000);\n * buffered.subscribe(x => console.log(x));\n *\n * @example <caption>Every 5 seconds, emit the click events from the next 2 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferTime(2000, 5000);\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {Scheduler} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime(bufferTimeSpan) {\n    let length = arguments.length;\n    let scheduler = async;\n    if (isScheduler(arguments[arguments.length - 1])) {\n        scheduler = arguments[arguments.length - 1];\n        length--;\n    }\n    let bufferCreationInterval = null;\n    if (length >= 2) {\n        bufferCreationInterval = arguments[1];\n    }\n    let maxBufferSize = Number.POSITIVE_INFINITY;\n    if (length >= 3) {\n        maxBufferSize = arguments[2];\n    }\n    return function bufferTimeOperatorFunction(source) {\n        return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n    };\n}\nclass BufferTimeOperator {\n    constructor(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));\n    }\n}\nclass Context {\n    constructor() {\n        this.buffer = [];\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber extends Subscriber {\n    constructor(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {\n        super(destination);\n        this.bufferTimeSpan = bufferTimeSpan;\n        this.bufferCreationInterval = bufferCreationInterval;\n        this.maxBufferSize = maxBufferSize;\n        this.scheduler = scheduler;\n        this.contexts = [];\n        const context = this.openContext();\n        this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n        if (this.timespanOnly) {\n            const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n        else {\n            const closeState = { subscriber: this, context };\n            const creationState = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n            this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));\n        }\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        let filledBufferContext;\n        for (let i = 0; i < len; i++) {\n            const context = contexts[i];\n            const buffer = context.buffer;\n            buffer.push(value);\n            if (buffer.length == this.maxBufferSize) {\n                filledBufferContext = context;\n            }\n        }\n        if (filledBufferContext) {\n            this.onBufferFull(filledBufferContext);\n        }\n    }\n    _error(err) {\n        this.contexts.length = 0;\n        super._error(err);\n    }\n    _complete() {\n        const { contexts, destination } = this;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            destination.next(context.buffer);\n        }\n        super._complete();\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        this.contexts = null;\n    }\n    onBufferFull(context) {\n        this.closeContext(context);\n        const closeAction = context.closeAction;\n        closeAction.unsubscribe();\n        this.remove(closeAction);\n        if (!this.closed && this.timespanOnly) {\n            context = this.openContext();\n            const bufferTimeSpan = this.bufferTimeSpan;\n            const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n            this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n        }\n    }\n    openContext() {\n        const context = new Context();\n        this.contexts.push(context);\n        return context;\n    }\n    closeContext(context) {\n        this.destination.next(context.buffer);\n        const contexts = this.contexts;\n        const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n        if (spliceIndex >= 0) {\n            contexts.splice(contexts.indexOf(context), 1);\n        }\n    }\n}\nfunction dispatchBufferTimeSpanOnly(state) {\n    const subscriber = state.subscriber;\n    const prevContext = state.context;\n    if (prevContext) {\n        subscriber.closeContext(prevContext);\n    }\n    if (!subscriber.closed) {\n        state.context = subscriber.openContext();\n        state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n    }\n}\nfunction dispatchBufferCreation(state) {\n    const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n    const context = subscriber.openContext();\n    const action = this;\n    if (!subscriber.closed) {\n        subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n        action.schedule(state, bufferCreationInterval);\n    }\n}\nfunction dispatchBufferClose(arg) {\n    const { subscriber, context } = arg;\n    subscriber.closeContext(context);\n}\n//# sourceMappingURL=bufferTime.js.map","import { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * <img src=\"./img/bufferToggle.png\" width=\"100%\">\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var buffered = clicks.bufferToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle(openings, closingSelector) {\n    return function bufferToggleOperatorFunction(source) {\n        return source.lift(new BufferToggleOperator(openings, closingSelector));\n    };\n}\nclass BufferToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(subscribeToResult(this, openings));\n    }\n    _next(value) {\n        const contexts = this.contexts;\n        const len = contexts.length;\n        for (let i = 0; i < len; i++) {\n            contexts[i].buffer.push(value);\n        }\n    }\n    _error(err) {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._error(err);\n    }\n    _complete() {\n        const contexts = this.contexts;\n        while (contexts.length > 0) {\n            const context = contexts.shift();\n            this.destination.next(context.buffer);\n            context.subscription.unsubscribe();\n            context.buffer = null;\n            context.subscription = null;\n        }\n        this.contexts = null;\n        super._complete();\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n    }\n    notifyComplete(innerSub) {\n        this.closeBuffer(innerSub.context);\n    }\n    openBuffer(value) {\n        try {\n            const closingSelector = this.closingSelector;\n            const closingNotifier = closingSelector.call(this, value);\n            if (closingNotifier) {\n                this.trySubscribe(closingNotifier);\n            }\n        }\n        catch (err) {\n            this._error(err);\n        }\n    }\n    closeBuffer(context) {\n        const contexts = this.contexts;\n        if (contexts && context) {\n            const { buffer, subscription } = context;\n            this.destination.next(buffer);\n            contexts.splice(contexts.indexOf(context), 1);\n            this.remove(subscription);\n            subscription.unsubscribe();\n        }\n    }\n    trySubscribe(closingNotifier) {\n        const contexts = this.contexts;\n        const buffer = [];\n        const subscription = new Subscription();\n        const context = { buffer, subscription };\n        contexts.push(context);\n        const innerSubscription = subscribeToResult(this, closingNotifier, context);\n        if (!innerSubscription || innerSubscription.closed) {\n            this.closeBuffer(context);\n        }\n        else {\n            innerSubscription.context = context;\n            this.add(innerSubscription);\n            subscription.add(innerSubscription);\n        }\n    }\n}\n//# sourceMappingURL=bufferToggle.js.map","import { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * <img src=\"./img/bufferWhen.png\" width=\"100%\">\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * @example <caption>Emit an array of the last clicks every [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var buffered = clicks.bufferWhen(() =>\n *   Rx.Observable.interval(1000 + Math.random() * 4000)\n * );\n * buffered.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen(closingSelector) {\n    return function (source) {\n        return source.lift(new BufferWhenOperator(closingSelector));\n    };\n}\nclass BufferWhenOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber extends OuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.closingSelector = closingSelector;\n        this.subscribing = false;\n        this.openBuffer();\n    }\n    _next(value) {\n        this.buffer.push(value);\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        this.buffer = null;\n        this.subscribing = false;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openBuffer();\n    }\n    notifyComplete() {\n        if (this.subscribing) {\n            this.complete();\n        }\n        else {\n            this.openBuffer();\n        }\n    }\n    openBuffer() {\n        let { closingSubscription } = this;\n        if (closingSubscription) {\n            this.remove(closingSubscription);\n            closingSubscription.unsubscribe();\n        }\n        const buffer = this.buffer;\n        if (this.buffer) {\n            this.destination.next(buffer);\n        }\n        this.buffer = [];\n        const closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            this.error(errorObject.e);\n        }\n        else {\n            closingSubscription = new Subscription();\n            this.closingSubscription = closingSubscription;\n            this.add(closingSubscription);\n            this.subscribing = true;\n            closingSubscription.add(subscribeToResult(this, closingNotifier));\n            this.subscribing = false;\n        }\n    }\n}\n//# sourceMappingURL=bufferWhen.js.map","import { CombineLatestOperator } from '../observable/combineLatest';\nexport function combineAll(project) {\n    return (source) => source.lift(new CombineLatestOperator(project));\n}\n//# sourceMappingURL=combineAll.js.map","import { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nconst none = {};\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static combineLatest.\n */\nexport function combineLatest(...observables) {\n    let project = null;\n    if (typeof observables[observables.length - 1] === 'function') {\n        project = observables.pop();\n    }\n    // if the first and only other argument besides the resultSelector is an array\n    // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n    if (observables.length === 1 && isArray(observables[0])) {\n        observables = observables[0].slice();\n    }\n    return (source) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n//# sourceMappingURL=combineLatest.js.map","import { concat as concatStatic } from '../observable/concat';\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static concat.\n */\nexport function concat(...observables) {\n    return (source) => source.lift.call(concatStatic(source, ...observables));\n}\n//# sourceMappingURL=concat.js.map","import { concatMap } from './concatMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/concatMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * @example <caption>For each click event, tick every second from 0 to 3, with no concurrency</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.concatMapTo(Rx.Observable.interval(1000).take(4));\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo(innerObservable, resultSelector) {\n    return concatMap(() => innerObservable, resultSelector);\n}\n//# sourceMappingURL=concatMapTo.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * <img src=\"./img/count.png\" width=\"100%\">\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * @example <caption>Counts how many seconds have passed before the first click happened</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var secondsBeforeClick = seconds.takeUntil(clicks);\n * var result = secondsBeforeClick.count();\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Counts how many odd numbers are there between 1 and 7</caption>\n * var numbers = Rx.Observable.range(1, 7);\n * var result = numbers.count(i => i % 2 === 1);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 4\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\nexport function count(predicate) {\n    return (source) => source.lift(new CountOperator(predicate, source));\n}\nclass CountOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    }\n    _tryPredicate(value) {\n        let result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    }\n    _complete() {\n        this.destination.next(this.count);\n        this.destination.complete();\n    }\n}\n//# sourceMappingURL=count.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * <img src=\"./img/debounce.png\" width=\"100%\">\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounce(() => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce(durationSelector) {\n    return (source) => source.lift(new DebounceOperator(durationSelector));\n}\nclass DebounceOperator {\n    constructor(durationSelector) {\n        this.durationSelector = durationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector) {\n        super(destination);\n        this.durationSelector = durationSelector;\n        this.hasValue = false;\n        this.durationSubscription = null;\n    }\n    _next(value) {\n        try {\n            const result = this.durationSelector.call(this, value);\n            if (result) {\n                this._tryNext(value, result);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.emitValue();\n        this.destination.complete();\n    }\n    _tryNext(value, duration) {\n        let subscription = this.durationSubscription;\n        this.value = value;\n        this.hasValue = true;\n        if (subscription) {\n            subscription.unsubscribe();\n            this.remove(subscription);\n        }\n        subscription = subscribeToResult(this, duration);\n        if (subscription && !subscription.closed) {\n            this.add(this.durationSubscription = subscription);\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            const value = this.value;\n            const subscription = this.durationSubscription;\n            if (subscription) {\n                this.durationSubscription = null;\n                subscription.unsubscribe();\n                this.remove(subscription);\n            }\n            // This must be done *before* passing the value\n            // along to the destination because it's possible for\n            // the value to synchronously re-enter this operator\n            // recursively if the duration selector Observable\n            // emits synchronously\n            this.value = null;\n            this.hasValue = false;\n            super._next(value);\n        }\n    }\n}\n//# sourceMappingURL=debounce.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * <img src=\"./img/debounceTime.png\" width=\"100%\">\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link IScheduler} for\n * managing timers.\n *\n * @example <caption>Emit the most recent click after a burst of clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.debounceTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            // This must be done *before* passing the value\n            // along to the destination because it's possible for\n            // the value to synchronously re-enter this operator\n            // recursively when scheduled with things like\n            // VirtualScheduler/TestScheduler.\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map","import { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/delayWhen.png\" width=\"100%\">\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * @example <caption>Delay each click by a random amount of time, between 0 and 5 seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var delayedClicks = clicks.delayWhen(event =>\n *   Rx.Observable.interval(Math.random() * 5000)\n * );\n * delayedClicks.subscribe(x => console.log(x));\n *\n * @see {@link debounce}\n * @see {@link delay}\n *\n * @param {function(value: T): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => new SubscriptionDelayObservable(source, subscriptionDelay)\n            .lift(new DelayWhenOperator(delayDurationSelector));\n    }\n    return (source) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\nclass DelayWhenOperator {\n    constructor(delayDurationSelector) {\n        this.delayDurationSelector = delayDurationSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber extends OuterSubscriber {\n    constructor(destination, delayDurationSelector) {\n        super(destination);\n        this.delayDurationSelector = delayDurationSelector;\n        this.completed = false;\n        this.delayNotifierSubscriptions = [];\n        this.values = [];\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(outerValue);\n        this.removeSubscription(innerSub);\n        this.tryComplete();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        const value = this.removeSubscription(innerSub);\n        if (value) {\n            this.destination.next(value);\n        }\n        this.tryComplete();\n    }\n    _next(value) {\n        try {\n            const delayNotifier = this.delayDurationSelector(value);\n            if (delayNotifier) {\n                this.tryDelay(delayNotifier, value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.completed = true;\n        this.tryComplete();\n    }\n    removeSubscription(subscription) {\n        subscription.unsubscribe();\n        const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n        let value = null;\n        if (subscriptionIdx !== -1) {\n            value = this.values[subscriptionIdx];\n            this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n            this.values.splice(subscriptionIdx, 1);\n        }\n        return value;\n    }\n    tryDelay(delayNotifier, value) {\n        const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            this.add(notifierSubscription);\n            this.delayNotifierSubscriptions.push(notifierSubscription);\n        }\n        this.values.push(value);\n    }\n    tryComplete() {\n        if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n            this.destination.complete();\n        }\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable extends Observable {\n    constructor(source, subscriptionDelay) {\n        super();\n        this.source = source;\n        this.subscriptionDelay = subscriptionDelay;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber extends Subscriber {\n    constructor(parent, source) {\n        super();\n        this.parent = parent;\n        this.source = source;\n        this.sourceSubscribed = false;\n    }\n    _next(unused) {\n        this.subscribeToSource();\n    }\n    _error(err) {\n        this.unsubscribe();\n        this.parent.error(err);\n    }\n    _complete() {\n        this.subscribeToSource();\n    }\n    subscribeToSource() {\n        if (!this.sourceSubscribed) {\n            this.sourceSubscribed = true;\n            this.unsubscribe();\n            this.source.subscribe(this.parent);\n        }\n    }\n}\n//# sourceMappingURL=delayWhen.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * <img src=\"./img/dematerialize.png\" width=\"100%\">\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * @example <caption>Convert an Observable of Notifications to an actual Observable</caption>\n * var notifA = new Rx.Notification('N', 'A');\n * var notifB = new Rx.Notification('N', 'B');\n * var notifE = new Rx.Notification('E', void 0,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * var materialized = Rx.Observable.of(notifA, notifB, notifE);\n * var upperCase = materialized.dematerialize();\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize() {\n    return function dematerializeOperatorFunction(source) {\n        return source.lift(new DeMaterializeOperator());\n    };\n}\nclass DeMaterializeOperator {\n    call(subscriber, source) {\n        return source.subscribe(new DeMaterializeSubscriber(subscriber));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    _next(value) {\n        value.observe(this.destination);\n    }\n}\n//# sourceMappingURL=dematerialize.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1)\n *   .distinct()\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n *\n * @example <caption>An example using a keySelector function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     .distinct((p: Person) => p.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n *\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct(keySelector, flushes) {\n    return (source) => source.lift(new DistinctOperator(keySelector, flushes));\n}\nclass DistinctOperator {\n    constructor(keySelector, flushes) {\n        this.keySelector = keySelector;\n        this.flushes = flushes;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber extends OuterSubscriber {\n    constructor(destination, keySelector, flushes) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.values = new Set();\n        if (flushes) {\n            this.add(subscribeToResult(this, flushes));\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values.clear();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    _next(value) {\n        if (this.keySelector) {\n            this._useKeySelector(value);\n        }\n        else {\n            this._finalizeNext(value, value);\n        }\n    }\n    _useKeySelector(value) {\n        let key;\n        const { destination } = this;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this._finalizeNext(key, value);\n    }\n    _finalizeNext(key, value) {\n        const { values } = this;\n        if (!values.has(key)) {\n            values.add(key);\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=distinct.js.map","import { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>A simple example with numbers</caption>\n * Observable.of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4)\n *   .distinctUntilChanged()\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n *\n * @example <caption>An example using a compare function</caption>\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'})\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilChanged((p: Person, q: Person) => p.name === q.name)\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged(compare, keySelector) {\n    return (source) => source.lift(new DistinctUntilChangedOperator(compare, keySelector));\n}\nclass DistinctUntilChangedOperator {\n    constructor(compare, keySelector) {\n        this.compare = compare;\n        this.keySelector = keySelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber extends Subscriber {\n    constructor(destination, compare, keySelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.hasKey = false;\n        if (typeof compare === 'function') {\n            this.compare = compare;\n        }\n    }\n    compare(x, y) {\n        return x === y;\n    }\n    _next(value) {\n        const keySelector = this.keySelector;\n        let key = value;\n        if (keySelector) {\n            key = tryCatch(this.keySelector)(value);\n            if (key === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        let result = false;\n        if (this.hasKey) {\n            result = tryCatch(this.compare)(this.key, key);\n            if (result === errorObject) {\n                return this.destination.error(errorObject.e);\n            }\n        }\n        else {\n            this.hasKey = true;\n        }\n        if (Boolean(result) === false) {\n            this.key = key;\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { distinctUntilChanged } from './distinctUntilChanged';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * @example <caption>An example comparing the name of persons</caption>\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'})\n *     .distinctUntilKeyChanged('name')\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n *\n * @example <caption>An example comparing the first letters of the name</caption>\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * Observable.of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'})\n *     .distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3))\n *     .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged(key, compare) {\n    return distinctUntilChanged((x, y) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n//# sourceMappingURL=distinctUntilKeyChanged.js.map","import { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * <img src=\"./img/elementAt.png\" width=\"100%\">\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * @example <caption>Emit only the third click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.elementAt(2);\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt(index, defaultValue) {\n    if (index < 0) {\n        throw new ArgumentOutOfRangeError();\n    }\n    const hasDefaultValue = arguments.length >= 2;\n    return (source) => source.pipe(filter((v, i) => i === index), take(1), hasDefaultValue\n        ? defaultIfEmpty(defaultValue)\n        : throwIfEmpty(() => new ArgumentOutOfRangeError()));\n}\n//# sourceMappingURL=elementAt.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * <img src=\"./img/exhaust.png\" width=\"100%\">\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(5));\n * var result = higherOrder.exhaust();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switch}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust() {\n    return (source) => source.lift(new SwitchFirstOperator());\n}\nclass SwitchFirstOperator {\n    call(subscriber, source) {\n        return source.subscribe(new SwitchFirstSubscriber(subscriber));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasCompleted = false;\n        this.hasSubscription = false;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, value));\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    }\n    notifyComplete(innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=exhaust.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { map } from './map';\nimport { from } from '../observable/from';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * <img src=\"./img/exhaustMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * @example <caption>Run a finite timer for each click, only if there is no currently active timer</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.exhaustMap((ev) => Rx.Observable.interval(1000).take(5));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap(project, resultSelector) {\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return (source) => source.pipe(exhaustMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new ExhauseMapOperator(project));\n}\nclass ExhauseMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ExhaustMapSubscriber extends OuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.hasSubscription = false;\n        this.hasCompleted = false;\n        this.index = 0;\n    }\n    _next(value) {\n        if (!this.hasSubscription) {\n            this.tryNext(value);\n        }\n    }\n    tryNext(value) {\n        const index = this.index++;\n        const destination = this.destination;\n        try {\n            const result = this.project(value, index);\n            this.hasSubscription = true;\n            this.add(subscribeToResult(this, result, value, index));\n        }\n        catch (err) {\n            destination.error(err);\n        }\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (!this.hasSubscription) {\n            this.destination.complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n    notifyError(err) {\n        this.destination.error(err);\n    }\n    notifyComplete(innerSub) {\n        this.remove(innerSub);\n        this.hasSubscription = false;\n        if (this.hasCompleted) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=exhaustMap.js.map","import { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * <img src=\"./img/expand.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * @example <caption>Start emitting the powers of two on every click, at most 10 of them</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var powersOfTwo = clicks\n *   .mapTo(1)\n *   .expand(x => Rx.Observable.of(2 * x).delay(1000))\n *   .take(10);\n * powersOfTwo.subscribe(x => console.log(x));\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand(project, concurrent = Number.POSITIVE_INFINITY, scheduler = undefined) {\n    concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n    return (source) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\nexport class ExpandOperator {\n    constructor(project, concurrent, scheduler) {\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber extends OuterSubscriber {\n    constructor(destination, project, concurrent, scheduler) {\n        super(destination);\n        this.project = project;\n        this.concurrent = concurrent;\n        this.scheduler = scheduler;\n        this.index = 0;\n        this.active = 0;\n        this.hasCompleted = false;\n        if (concurrent < Number.POSITIVE_INFINITY) {\n            this.buffer = [];\n        }\n    }\n    static dispatch(arg) {\n        const { subscriber, result, value, index } = arg;\n        subscriber.subscribeToProjection(result, value, index);\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (destination.closed) {\n            this._complete();\n            return;\n        }\n        const index = this.index++;\n        if (this.active < this.concurrent) {\n            destination.next(value);\n            let result = tryCatch(this.project)(value, index);\n            if (result === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else if (!this.scheduler) {\n                this.subscribeToProjection(result, value, index);\n            }\n            else {\n                const state = { subscriber: this, result, value, index };\n                this.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    subscribeToProjection(result, value, index) {\n        this.active++;\n        this.add(subscribeToResult(this, result, value, index));\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this._next(innerValue);\n    }\n    notifyComplete(innerSub) {\n        const buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer && buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        if (this.hasCompleted && this.active === 0) {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=expand.js.map","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize(callback) {\n    return (source) => source.lift(new FinallyOperator(callback));\n}\nclass FinallyOperator {\n    constructor(callback) {\n        this.callback = callback;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber extends Subscriber {\n    constructor(destination, callback) {\n        super(destination);\n        this.add(new Subscription(callback));\n    }\n}\n//# sourceMappingURL=finalize.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * <img src=\"./img/find.png\" width=\"100%\">\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * @example <caption>Find and emit the first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.find(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find(predicate, thisArg) {\n    if (typeof predicate !== 'function') {\n        throw new TypeError('predicate is not a function');\n    }\n    return (source) => source.lift(new FindValueOperator(predicate, source, false, thisArg));\n}\nexport class FindValueOperator {\n    constructor(predicate, source, yieldIndex, thisArg) {\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n    }\n    call(observer, source) {\n        return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber extends Subscriber {\n    constructor(destination, predicate, source, yieldIndex, thisArg) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.yieldIndex = yieldIndex;\n        this.thisArg = thisArg;\n        this.index = 0;\n    }\n    notifyComplete(value) {\n        const destination = this.destination;\n        destination.next(value);\n        destination.complete();\n    }\n    _next(value) {\n        const { predicate, thisArg } = this;\n        const index = this.index++;\n        try {\n            const result = predicate.call(thisArg || this, value, index, this.source);\n            if (result) {\n                this.notifyComplete(this.yieldIndex ? index : value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        this.notifyComplete(this.yieldIndex ? -1 : undefined);\n    }\n}\n//# sourceMappingURL=find.js.map","import { FindValueOperator } from '../operators/find';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * <img src=\"./img/findIndex.png\" width=\"100%\">\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * @example <caption>Emit the index of first click that happens on a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.findIndex(ev => ev.target.tagName === 'DIV');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex(predicate, thisArg) {\n    return (source) => source.lift(new FindValueOperator(predicate, source, true, thisArg));\n}\n//# sourceMappingURL=findIndex.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * <img src=\"./img/ignoreElements.png\" width=\"100%\">\n *\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements() {\n    return function ignoreElementsOperatorFunction(source) {\n        return source.lift(new IgnoreElementsOperator());\n    };\n}\nclass IgnoreElementsOperator {\n    call(subscriber, source) {\n        return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber extends Subscriber {\n    _next(unused) {\n        // Do nothing\n    }\n}\n//# sourceMappingURL=ignoreElements.js.map","import { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return (source) => source.lift(new IsEmptyOperator());\n}\nclass IsEmptyOperator {\n    call(observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    notifyComplete(isEmpty) {\n        const destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    }\n    _next(value) {\n        this.notifyComplete(false);\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n//# sourceMappingURL=isEmpty.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * <img src=\"./img/mapTo.png\" width=\"100%\">\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * @example <caption>Map every click to the string 'Hi'</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var greetings = clicks.mapTo('Hi');\n * greetings.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo(value) {\n    return (source) => source.lift(new MapToOperator(value));\n}\nclass MapToOperator {\n    constructor(value) {\n        this.value = value;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapToSubscriber(subscriber, this.value));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber extends Subscriber {\n    constructor(destination, value) {\n        super(destination);\n        this.value = value;\n    }\n    _next(x) {\n        this.destination.next(this.value);\n    }\n}\n//# sourceMappingURL=mapTo.js.map","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * <img src=\"./img/materialize.png\" width=\"100%\">\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * @example <caption>Convert a faulty Observable to an Observable of Notifications</caption>\n * var letters = Rx.Observable.of('a', 'b', 13, 'd');\n * var upperCase = letters.map(x => x.toUpperCase());\n * var materialized = upperCase.materialize();\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize() {\n    return function materializeOperatorFunction(source) {\n        return source.lift(new MaterializeOperator());\n    };\n}\nclass MaterializeOperator {\n    call(subscriber, source) {\n        return source.subscribe(new MaterializeSubscriber(subscriber));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    _next(value) {\n        this.destination.next(Notification.createNext(value));\n    }\n    _error(err) {\n        const destination = this.destination;\n        destination.next(Notification.createError(err));\n        destination.complete();\n    }\n    _complete() {\n        const destination = this.destination;\n        destination.next(Notification.createComplete());\n        destination.complete();\n    }\n}\n//# sourceMappingURL=materialize.js.map","import { reduce } from './reduce';\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * <img src=\"./img/max.png\" width=\"100%\">\n *\n * @example <caption>Get the maximal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .max()\n *   .subscribe(x => console.log(x)); // -> 8\n *\n * @example <caption>Use a comparer function to get the maximal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * }\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max(comparer) {\n    const max = (typeof comparer === 'function')\n        ? (x, y) => comparer(x, y) > 0 ? x : y\n        : (x, y) => x > y ? x : y;\n    return reduce(max);\n}\n//# sourceMappingURL=max.js.map","import { merge as mergeStatic } from '../observable/merge';\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static merge.\n */\nexport function merge(...observables) {\n    return (source) => source.lift.call(mergeStatic(source, ...observables));\n}\n//# sourceMappingURL=merge.js.map","import { mergeMap } from './mergeMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * <img src=\"./img/mergeMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * @example <caption>For each click event, start an interval Observable ticking every 1 second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.mergeMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo(innerObservable, resultSelector, concurrent = Number.POSITIVE_INFINITY) {\n    if (typeof resultSelector === 'function') {\n        return mergeMap(() => innerObservable, resultSelector, concurrent);\n    }\n    if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return mergeMap(() => innerObservable, concurrent);\n}\n//# sourceMappingURL=mergeMapTo.js.map","import { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * @example <caption>Count the number of click events</caption>\n * const click$ = Rx.Observable.fromEvent(document, 'click');\n * const one$ = click$.mapTo(1);\n * const seed = 0;\n * const count$ = one$.mergeScan((acc, one) => Rx.Observable.of(acc + one), seed);\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * 1\n * 2\n * 3\n * 4\n * // ...and so on for each click\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan(accumulator, seed, concurrent = Number.POSITIVE_INFINITY) {\n    return (source) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\nexport class MergeScanOperator {\n    constructor(accumulator, seed, concurrent) {\n        this.accumulator = accumulator;\n        this.seed = seed;\n        this.concurrent = concurrent;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber extends OuterSubscriber {\n    constructor(destination, accumulator, acc, concurrent) {\n        super(destination);\n        this.accumulator = accumulator;\n        this.acc = acc;\n        this.concurrent = concurrent;\n        this.hasValue = false;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.active < this.concurrent) {\n            const index = this.index++;\n            const ish = tryCatch(this.accumulator)(this.acc, value);\n            const destination = this.destination;\n            if (ish === errorObject) {\n                destination.error(errorObject.e);\n            }\n            else {\n                this.active++;\n                this._innerSub(ish, value, index);\n            }\n        }\n        else {\n            this.buffer.push(value);\n        }\n    }\n    _innerSub(ish, value, index) {\n        this.add(subscribeToResult(this, ish, value, index));\n    }\n    _complete() {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        const { destination } = this;\n        this.acc = innerValue;\n        this.hasValue = true;\n        destination.next(innerValue);\n    }\n    notifyComplete(innerSub) {\n        const buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            if (this.hasValue === false) {\n                this.destination.next(this.acc);\n            }\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=mergeScan.js.map","import { reduce } from './reduce';\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * <img src=\"./img/min.png\" width=\"100%\">\n *\n * @example <caption>Get the minimal value of a series of numbers</caption>\n * Rx.Observable.of(5, 4, 7, 2, 8)\n *   .min()\n *   .subscribe(x => console.log(x)); // -> 2\n *\n * @example <caption>Use a comparer function to get the minimal item</caption>\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * Observable.of<Person>({age: 7, name: 'Foo'},\n *                       {age: 5, name: 'Bar'},\n *                       {age: 9, name: 'Beer'})\n *           .min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1)\n *           .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * }\n *\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min(comparer) {\n    const min = (typeof comparer === 'function')\n        ? (x, y) => comparer(x, y) < 0 ? x : y\n        : (x, y) => x < y ? x : y;\n    return reduce(min);\n}\n//# sourceMappingURL=min.js.map","import { Subscriber } from './Subscriber';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber extends Subscriber {\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    }\n    notifyError(error, innerSub) {\n        this.destination.error(error);\n    }\n    notifyComplete(innerSub) {\n        this.destination.complete();\n    }\n}\n//# sourceMappingURL=OuterSubscriber.js.map","import { from } from '../observable/from';\nimport { isArray } from '../util/isArray';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catch} instead.\n *\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * Rx.Observable.of(1, 2, 3, 0)\n *   .map(x => {\n *       if (x === 0) { throw Error(); }\n         return 10 / x;\n *   })\n *   .onErrorResumeNext(Rx.Observable.of(1, 2, 3))\n *   .subscribe(\n *     val => console.log(val),\n *     err => console.log(err),          // Will never be called.\n *     () => console.log('that\\'s it!')\n *   );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\nexport function onErrorResumeNext(...nextSources) {\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    return (source) => source.lift(new OnErrorResumeNextOperator(nextSources));\n}\n/* tslint:enable:max-line-length */\nexport function onErrorResumeNextStatic(...nextSources) {\n    let source = null;\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\n        nextSources = nextSources[0];\n    }\n    source = nextSources.shift();\n    return from(source, null).lift(new OnErrorResumeNextOperator(nextSources));\n}\nclass OnErrorResumeNextOperator {\n    constructor(nextSources) {\n        this.nextSources = nextSources;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n    }\n}\nclass OnErrorResumeNextSubscriber extends OuterSubscriber {\n    constructor(destination, nextSources) {\n        super(destination);\n        this.destination = destination;\n        this.nextSources = nextSources;\n    }\n    notifyError(error, innerSub) {\n        this.subscribeToNextSource();\n    }\n    notifyComplete(innerSub) {\n        this.subscribeToNextSource();\n    }\n    _error(err) {\n        this.subscribeToNextSource();\n    }\n    _complete() {\n        this.subscribeToNextSource();\n    }\n    subscribeToNextSource() {\n        const next = this.nextSources.shift();\n        if (next) {\n            this.add(subscribeToResult(this, next));\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=onErrorResumeNext.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * <img src=\"./img/pairwise.png\" width=\"100%\">\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * @example <caption>On every click (starting from the second), emit the relative distance to the previous click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var pairs = clicks.pairwise();\n * var distance = pairs.map(pair => {\n *   var x0 = pair[0].clientX;\n *   var y0 = pair[0].clientY;\n *   var x1 = pair[1].clientX;\n *   var y1 = pair[1].clientY;\n *   return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n * });\n * distance.subscribe(x => console.log(x));\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise() {\n    return (source) => source.lift(new PairwiseOperator());\n}\nclass PairwiseOperator {\n    call(subscriber, source) {\n        return source.subscribe(new PairwiseSubscriber(subscriber));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n        this.hasPrev = false;\n    }\n    _next(value) {\n        if (this.hasPrev) {\n            this.destination.next([this.prev, value]);\n        }\n        else {\n            this.hasPrev = true;\n        }\n        this.prev = value;\n    }\n}\n//# sourceMappingURL=pairwise.js.map","export function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map","import { not } from '../util/not';\nimport { filter } from './filter';\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * <img src=\"./img/partition.png\" width=\"100%\">\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * @example <caption>Partition click events into those on DIV elements and those elsewhere</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var parts = clicks.partition(ev => ev.target.tagName === 'DIV');\n * var clicksOnDivs = parts[0];\n * var clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n */\nexport function partition(predicate, thisArg) {\n    return (source) => [\n        filter(predicate, thisArg)(source),\n        filter(not(predicate, thisArg))(source)\n    ];\n}\n//# sourceMappingURL=partition.js.map","import { map } from './map';\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * <img src=\"./img/pluck.png\" width=\"100%\">\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * @example <caption>Map every click to the tagName of the clicked target element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var tagNames = clicks.pluck('target', 'tagName');\n * tagNames.subscribe(x => console.log(x));\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return (source) => map(plucker(properties, length))(source);\n}\nfunction plucker(props, length) {\n    const mapper = (x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp[props[i]];\n            if (typeof p !== 'undefined') {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n//# sourceMappingURL=pluck.js.map","import { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior(value) {\n    return (source) => multicast(new BehaviorSubject(value))(source);\n}\n//# sourceMappingURL=publishBehavior.js.map","import { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nexport function publishLast() {\n    return (source) => multicast(new AsyncSubject())(source);\n}\n//# sourceMappingURL=publishLast.js.map","import { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\n/* tslint:enable:max-line-length */\nexport function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {\n    if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n        scheduler = selectorOrScheduler;\n    }\n    const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n    const subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n    return (source) => multicast(() => subject, selector)(source);\n}\n//# sourceMappingURL=publishReplay.js.map","import { isArray } from '../util/isArray';\nimport { race as raceStatic } from '../observable/race';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item\n * from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n */\nexport function race(...observables) {\n    return function raceOperatorFunction(source) {\n        // if the only argument is an array, it was most likely called with\n        // `pair([obs1, obs2, ...])`\n        if (observables.length === 1 && isArray(observables[0])) {\n            observables = observables[0];\n        }\n        return source.lift.call(raceStatic(source, ...observables));\n    };\n}\n//# sourceMappingURL=race.js.map","import { Subscriber } from '../Subscriber';\nimport { empty } from '../observable/empty';\n/**\n * Returns an Observable that repeats the stream of items emitted by the source Observable at most count times.\n *\n * <img src=\"./img/repeat.png\" width=\"100%\">\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that repeats the stream of items emitted by the source Observable at most\n * count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat(count = -1) {\n    return (source) => {\n        if (count === 0) {\n            return empty();\n        }\n        else if (count < 0) {\n            return source.lift(new RepeatOperator(-1, source));\n        }\n        else {\n            return source.lift(new RepeatOperator(count - 1, source));\n        }\n    };\n}\nclass RepeatOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    complete() {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.complete();\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n//# sourceMappingURL=repeat.js.map","import { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/repeatWhen.png\" width=\"100%\">\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen(notifier) {\n    return (source) => source.lift(new RepeatWhenOperator(notifier));\n}\nclass RepeatWhenOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber extends OuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n        this.sourceIsBeingSubscribedTo = true;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.sourceIsBeingSubscribedTo = true;\n        this.source.subscribe(this);\n    }\n    notifyComplete(innerSub) {\n        if (this.sourceIsBeingSubscribedTo === false) {\n            return super.complete();\n        }\n    }\n    complete() {\n        this.sourceIsBeingSubscribedTo = false;\n        if (!this.isStopped) {\n            if (!this.retries) {\n                this.subscribeToRetries();\n            }\n            if (!this.retriesSubscription || this.retriesSubscription.closed) {\n                return super.complete();\n            }\n            this._unsubscribeAndRecycle();\n            this.notifications.next();\n        }\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        const { notifications, retriesSubscription } = this;\n        if (notifications) {\n            notifications.unsubscribe();\n            this.notifications = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribeAndRecycle() {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        super._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        return this;\n    }\n    subscribeToRetries() {\n        this.notifications = new Subject();\n        const retries = tryCatch(this.notifier)(this.notifications);\n        if (retries === errorObject) {\n            return super.complete();\n        }\n        this.retries = retries;\n        this.retriesSubscription = subscribeToResult(this, retries);\n    }\n}\n//# sourceMappingURL=repeatWhen.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * <img src=\"./img/retry.png\" width=\"100%\">\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n//# sourceMappingURL=retry.js.map","import { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * <img src=\"./img/retryWhen.png\" width=\"100%\">\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen(notifier) {\n    return (source) => source.lift(new RetryWhenOperator(notifier, source));\n}\nclass RetryWhenOperator {\n    constructor(notifier, source) {\n        this.notifier = notifier;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber extends OuterSubscriber {\n    constructor(destination, notifier, source) {\n        super(destination);\n        this.notifier = notifier;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            let errors = this.errors;\n            let retries = this.retries;\n            let retriesSubscription = this.retriesSubscription;\n            if (!retries) {\n                errors = new Subject();\n                retries = tryCatch(this.notifier)(errors);\n                if (retries === errorObject) {\n                    return super.error(errorObject.e);\n                }\n                retriesSubscription = subscribeToResult(this, retries);\n            }\n            else {\n                this.errors = null;\n                this.retriesSubscription = null;\n            }\n            this._unsubscribeAndRecycle();\n            this.errors = errors;\n            this.retries = retries;\n            this.retriesSubscription = retriesSubscription;\n            errors.next(err);\n        }\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        const { errors, retriesSubscription } = this;\n        if (errors) {\n            errors.unsubscribe();\n            this.errors = null;\n        }\n        if (retriesSubscription) {\n            retriesSubscription.unsubscribe();\n            this.retriesSubscription = null;\n        }\n        this.retries = null;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        const { _unsubscribe } = this;\n        this._unsubscribe = null;\n        this._unsubscribeAndRecycle();\n        this._unsubscribe = _unsubscribe;\n        this.source.subscribe(this);\n    }\n}\n//# sourceMappingURL=retryWhen.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * <img src=\"./img/sample.png\" width=\"100%\">\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * @example <caption>On every click, sample the most recent \"seconds\" timer</caption>\n * var seconds = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = seconds.sample(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample(notifier) {\n    return (source) => source.lift(new SampleOperator(notifier));\n}\nclass SampleOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const sampleSubscriber = new SampleSubscriber(subscriber);\n        const subscription = source.subscribe(sampleSubscriber);\n        subscription.add(subscribeToResult(sampleSubscriber, this.notifier));\n        return subscription;\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber extends OuterSubscriber {\n    constructor() {\n        super(...arguments);\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.value = value;\n        this.hasValue = true;\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.emitValue();\n    }\n    notifyComplete() {\n        this.emitValue();\n    }\n    emitValue() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.value);\n        }\n    }\n}\n//# sourceMappingURL=sample.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * <img src=\"./img/sampleTime.png\" width=\"100%\">\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * @example <caption>Every second, emit the most recent click at most once</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.sampleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime(period, scheduler = async) {\n    return (source) => source.lift(new SampleTimeOperator(period, scheduler));\n}\nclass SampleTimeOperator {\n    constructor(period, scheduler) {\n        this.period = period;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber extends Subscriber {\n    constructor(destination, period, scheduler) {\n        super(destination);\n        this.period = period;\n        this.scheduler = scheduler;\n        this.hasValue = false;\n        this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n    }\n    _next(value) {\n        this.lastValue = value;\n        this.hasValue = true;\n    }\n    notifyNext() {\n        if (this.hasValue) {\n            this.hasValue = false;\n            this.destination.next(this.lastValue);\n        }\n    }\n}\nfunction dispatchNotification(state) {\n    let { subscriber, period } = state;\n    subscriber.notifyNext();\n    this.schedule(state, period);\n}\n//# sourceMappingURL=sampleTime.js.map","import { Subscriber } from '../Subscriber';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\n/**\n * Compares all values of two observables in sequence using an optional comparor function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * <img src=\"./img/sequenceEqual.png\" width=\"100%\">\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * @example <caption>figure out if the Konami code matches</caption>\n * var code = Rx.Observable.from([\n *  \"ArrowUp\",\n *  \"ArrowUp\",\n *  \"ArrowDown\",\n *  \"ArrowDown\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"ArrowLeft\",\n *  \"ArrowRight\",\n *  \"KeyB\",\n *  \"KeyA\",\n *  \"Enter\" // no start key, clearly.\n * ]);\n *\n * var keys = Rx.Observable.fromEvent(document, 'keyup')\n *  .map(e => e.code);\n * var matches = keys.bufferCount(11, 1)\n *  .mergeMap(\n *    last11 =>\n *      Rx.Observable.from(last11)\n *        .sequenceEqual(code)\n *   );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparor] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual(compareTo, comparor) {\n    return (source) => source.lift(new SequenceEqualOperator(compareTo, comparor));\n}\nexport class SequenceEqualOperator {\n    constructor(compareTo, comparor) {\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparor));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber extends Subscriber {\n    constructor(destination, compareTo, comparor) {\n        super(destination);\n        this.compareTo = compareTo;\n        this.comparor = comparor;\n        this._a = [];\n        this._b = [];\n        this._oneComplete = false;\n        this.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n    }\n    _next(value) {\n        if (this._oneComplete && this._b.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._a.push(value);\n            this.checkValues();\n        }\n    }\n    _complete() {\n        if (this._oneComplete) {\n            this.emit(this._a.length === 0 && this._b.length === 0);\n        }\n        else {\n            this._oneComplete = true;\n        }\n    }\n    checkValues() {\n        const { _a, _b, comparor } = this;\n        while (_a.length > 0 && _b.length > 0) {\n            let a = _a.shift();\n            let b = _b.shift();\n            let areEqual = false;\n            if (comparor) {\n                areEqual = tryCatch(comparor)(a, b);\n                if (areEqual === errorObject) {\n                    this.destination.error(errorObject.e);\n                }\n            }\n            else {\n                areEqual = a === b;\n            }\n            if (!areEqual) {\n                this.emit(false);\n            }\n        }\n    }\n    emit(value) {\n        const { destination } = this;\n        destination.next(value);\n        destination.complete();\n    }\n    nextB(value) {\n        if (this._oneComplete && this._a.length === 0) {\n            this.emit(false);\n        }\n        else {\n            this._b.push(value);\n            this.checkValues();\n        }\n    }\n}\nclass SequenceEqualCompareToSubscriber extends Subscriber {\n    constructor(destination, parent) {\n        super(destination);\n        this.parent = parent;\n    }\n    _next(value) {\n        this.parent.nextB(value);\n    }\n    _error(err) {\n        this.parent.error(err);\n    }\n    _complete() {\n        this.parent._complete();\n    }\n}\n//# sourceMappingURL=sequenceEqual.js.map","import { ReplaySubject } from '../ReplaySubject';\n/**\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay(bufferSize, windowTime, scheduler) {\n    return (source) => source.lift(shareReplayOperator(bufferSize, windowTime, scheduler));\n}\nfunction shareReplayOperator(bufferSize, windowTime, scheduler) {\n    let subject;\n    let refCount = 0;\n    let subscription;\n    let hasError = false;\n    let isComplete = false;\n    return function shareReplayOperation(source) {\n        refCount++;\n        if (!subject || hasError) {\n            hasError = false;\n            subject = new ReplaySubject(bufferSize, windowTime, scheduler);\n            subscription = source.subscribe({\n                next(value) { subject.next(value); },\n                error(err) {\n                    hasError = true;\n                    subject.error(err);\n                },\n                complete() {\n                    isComplete = true;\n                    subject.complete();\n                },\n            });\n        }\n        const innerSub = subject.subscribe(this);\n        return () => {\n            refCount--;\n            innerSub.unsubscribe();\n            if (subscription && refCount === 0 && isComplete) {\n                subscription.unsubscribe();\n            }\n        };\n    };\n}\n//# sourceMappingURL=shareReplay.js.map","import { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emiited.\n *\n * <img src=\"./img/single.png\" width=\"100%\">\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single(predicate) {\n    return (source) => source.lift(new SingleOperator(predicate, source));\n}\nclass SingleOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.seenValue = false;\n        this.index = 0;\n    }\n    applySingleValue(value) {\n        if (this.seenValue) {\n            this.destination.error('Sequence contains more than one element');\n        }\n        else {\n            this.seenValue = true;\n            this.singleValue = value;\n        }\n    }\n    _next(value) {\n        const index = this.index++;\n        if (this.predicate) {\n            this.tryNext(value, index);\n        }\n        else {\n            this.applySingleValue(value);\n        }\n    }\n    tryNext(value, index) {\n        try {\n            if (this.predicate(value, index, this.source)) {\n                this.applySingleValue(value);\n            }\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n    _complete() {\n        const destination = this.destination;\n        if (this.index > 0) {\n            destination.next(this.seenValue ? this.singleValue : undefined);\n            destination.complete();\n        }\n        else {\n            destination.error(new EmptyError);\n        }\n    }\n}\n//# sourceMappingURL=single.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip(count) {\n    return (source) => source.lift(new SkipOperator(count));\n}\nclass SkipOperator {\n    constructor(total) {\n        this.total = total;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    }\n}\n//# sourceMappingURL=skip.js.map","import { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * <img src=\"./img/skipLast.png\" width=\"100%\">\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * @example <caption>Skip the last 2 values of an Observable with many values</caption>\n * var many = Rx.Observable.range(1, 5);\n * var skipLastTwo = many.skipLast(2);\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast(count) {\n    return (source) => source.lift(new SkipLastOperator(count));\n}\nclass SkipLastOperator {\n    constructor(_skipCount) {\n        this._skipCount = _skipCount;\n        if (this._skipCount < 0) {\n            throw new ArgumentOutOfRangeError;\n        }\n    }\n    call(subscriber, source) {\n        if (this._skipCount === 0) {\n            // If we don't want to skip any values then just subscribe\n            // to Subscriber without any further logic.\n            return source.subscribe(new Subscriber(subscriber));\n        }\n        else {\n            return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n        }\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber extends Subscriber {\n    constructor(destination, _skipCount) {\n        super(destination);\n        this._skipCount = _skipCount;\n        this._count = 0;\n        this._ring = new Array(_skipCount);\n    }\n    _next(value) {\n        const skipCount = this._skipCount;\n        const count = this._count++;\n        if (count < skipCount) {\n            this._ring[count] = value;\n        }\n        else {\n            const currentIndex = count % skipCount;\n            const ring = this._ring;\n            const oldValue = ring[currentIndex];\n            ring[currentIndex] = value;\n            this.destination.next(oldValue);\n        }\n    }\n}\n//# sourceMappingURL=skipLast.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * <img src=\"./img/skipUntil.png\" width=\"100%\">\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil(notifier) {\n    return (source) => source.lift(new SkipUntilOperator(notifier));\n}\nclass SkipUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(destination, source) {\n        return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber extends OuterSubscriber {\n    constructor(destination, notifier) {\n        super(destination);\n        this.hasValue = false;\n        this.add(this.innerSubscription = subscribeToResult(this, notifier));\n    }\n    _next(value) {\n        if (this.hasValue) {\n            super._next(value);\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.hasValue = true;\n        this.innerSubscription.unsubscribe();\n    }\n    notifyComplete() {\n        /* do nothing */\n    }\n}\n//# sourceMappingURL=skipUntil.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * <img src=\"./img/skipWhile.png\" width=\"100%\">\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n//# sourceMappingURL=skipWhile.js.map","import { fromArray } from '../observable/fromArray';\nimport { scalar } from '../observable/scalar';\nimport { empty } from '../observable/empty';\nimport { concat as concatStatic } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <img src=\"./img/startWith.png\" width=\"100%\">\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {Scheduler} [scheduler] - A {@link IScheduler} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith(...array) {\n    return (source) => {\n        let scheduler = array[array.length - 1];\n        if (isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        const len = array.length;\n        if (len === 1 && !scheduler) {\n            return concatStatic(scalar(array[0]), source);\n        }\n        else if (len > 0) {\n            return concatStatic(fromArray(array, scheduler), source);\n        }\n        else {\n            return concatStatic(empty(scheduler), source);\n        }\n    };\n}\n//# sourceMappingURL=startWith.js.map","import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    /** @nocollapse */\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    /** @nocollapse */\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n//# sourceMappingURL=SubscribeOnObservable.js.map","import { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\n/**\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\n *\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\n *\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn(scheduler, delay = 0) {\n    return function subscribeOnOperatorFunction(source) {\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\n    };\n}\nclass SubscribeOnOperator {\n    constructor(scheduler, delay) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\n    }\n}\n//# sourceMappingURL=subscribeOn.js.map","import { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n//# sourceMappingURL=switchAll.js.map","import { switchMap } from './switchMap';\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switch} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * <img src=\"./img/switchMapTo.png\" width=\"100%\">\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * @example <caption>Rerun an interval Observable on every click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.switchMapTo(Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link concatMapTo}\n * @see {@link switch}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through `resultSelector`) every\n * time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo(innerObservable, resultSelector) {\n    return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n//# sourceMappingURL=switchMapTo.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * <img src=\"./img/takeUntil.png\" width=\"100%\">\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * @example <caption>Tick every second until the first click happens</caption>\n * var interval = Rx.Observable.interval(1000);\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = interval.takeUntil(clicks);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\n        if (notifierSubscription && !notifierSubscription.closed) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.complete();\n    }\n    notifyComplete() {\n        // noop\n    }\n}\n//# sourceMappingURL=takeUntil.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * <img src=\"./img/takeWhile.png\" width=\"100%\">\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * @example <caption>Emit click events only while the clientX property is greater than 200</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.takeWhile(ev => ev.clientX > 200);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile(predicate) {\n    return (source) => source.lift(new TakeWhileOperator(predicate));\n}\nclass TakeWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        let result;\n        try {\n            result = this.predicate(value, this.index++);\n        }\n        catch (err) {\n            destination.error(err);\n            return;\n        }\n        this.nextOrComplete(value, result);\n    }\n    nextOrComplete(value, predicateResult) {\n        const destination = this.destination;\n        if (Boolean(predicateResult)) {\n            destination.next(value);\n        }\n        else {\n            destination.complete();\n        }\n    }\n}\n//# sourceMappingURL=takeWhile.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * <img src=\"./img/throttle.png\" width=\"100%\">\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttle(ev => Rx.Observable.interval(1000));\n * result.subscribe(x => console.log(x));\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber extends OuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = null;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (duration) {\n            this.add(this._throttled = subscribeToResult(this, duration));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = null;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n//# sourceMappingURL=throttle.js.map","import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * <img src=\"./img/throttleTime.png\" width=\"100%\">\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link IScheduler} for managing timers.\n *\n * @example <caption>Emit clicks at a rate of at most one click per second</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.throttleTime(1000);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {Scheduler} [scheduler=async] The {@link IScheduler} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n//# sourceMappingURL=throttleTime.js.map","import { async } from '../scheduler/async';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\nexport function timeInterval(scheduler = async) {\n    return (source) => defer(() => {\n        return source.pipe(\n        // HACK: the typings seem off with scan\n        scan(({ current }, value) => ({ value, current: scheduler.now(), last: current }), { current: scheduler.now(), value: undefined, last: undefined }), map(({ current, last, value }) => new TimeInterval(value, current - last)));\n    });\n}\nexport class TimeInterval {\n    constructor(value, interval) {\n        this.value = value;\n        this.interval = interval;\n    }\n}\n//# sourceMappingURL=timeInterval.js.map","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * <img src=\"./img/timeoutWith.png\" width=\"100%\">\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * @example <caption>Add fallback observable</caption>\n * const seconds = Rx.Observable.interval(1000);\n * const minutes = Rx.Observable.interval(60 * 1000);\n *\n * seconds.timeoutWith(900, minutes)\n *     .subscribe(\n *         value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                      // since first value of `seconds` will not arrive fast enough.\n *         err => console.log(err) // Would be called after 900ms in case of `timeout`,\n *                                 // but here will never be called.\n *     );\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith(due, withObservable, scheduler = async) {\n    return (source) => {\n        let absoluteTimeout = isDate(due);\n        let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);\n        return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n    };\n}\nclass TimeoutWithOperator {\n    constructor(waitFor, absoluteTimeout, withObservable, scheduler) {\n        this.waitFor = waitFor;\n        this.absoluteTimeout = absoluteTimeout;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber extends OuterSubscriber {\n    constructor(destination, absoluteTimeout, waitFor, withObservable, scheduler) {\n        super(destination);\n        this.absoluteTimeout = absoluteTimeout;\n        this.waitFor = waitFor;\n        this.withObservable = withObservable;\n        this.scheduler = scheduler;\n        this.action = null;\n        this.scheduleTimeout();\n    }\n    static dispatchTimeout(subscriber) {\n        const { withObservable } = subscriber;\n        subscriber._unsubscribeAndRecycle();\n        subscriber.add(subscribeToResult(subscriber, withObservable));\n    }\n    scheduleTimeout() {\n        const { action } = this;\n        if (action) {\n            // Recycle the action if we've already scheduled one. All the production\n            // Scheduler Actions mutate their state/delay time and return themeselves.\n            // VirtualActions are immutable, so they create and return a clone. In this\n            // case, we need to set the action reference to the most recent VirtualAction,\n            // to ensure that's the one we clone from next time.\n            this.action = action.schedule(this, this.waitFor);\n        }\n        else {\n            this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));\n        }\n    }\n    _next(value) {\n        if (!this.absoluteTimeout) {\n            this.scheduleTimeout();\n        }\n        super._next(value);\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        this.action = null;\n        this.scheduler = null;\n        this.withObservable = null;\n    }\n}\n//# sourceMappingURL=timeoutWith.js.map","import { async } from '../scheduler/async';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * <img src=\"./img/timeout.png\" width=\"100%\">\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * @example <caption>Check if ticks are emitted within certain timespan</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(1100) // Let's use bigger timespan to be safe,\n *                       // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err) // Will never be called.\n * );\n *\n * seconds.timeout(900).subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err) // Will emit error before even first value is emitted,\n *                             // since it did not arrive within 900ms period.\n * );\n *\n * @example <caption>Use Date to check if Observable completed</caption>\n * const seconds = Rx.Observable.interval(1000);\n *\n * seconds.timeout(new Date(\"December 17, 2020 03:24:00\"))\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err) // On December 17, 2020 at 03:24:00 it will emit an error,\n *                             // since Observable did not complete by then.\n * );\n *\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Scheduler} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout(due, scheduler = async) {\n    return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n//# sourceMappingURL=timeout.js.map","import { async } from '../scheduler/async';\nimport { map } from './map';\n/**\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp(scheduler = async) {\n    return map((value) => new Timestamp(value, scheduler.now()));\n    // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\nexport class Timestamp {\n    constructor(value, timestamp) {\n        this.value = value;\n        this.timestamp = timestamp;\n    }\n}\n//# sourceMappingURL=timestamp.js.map","import { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n//# sourceMappingURL=toArray.js.map","import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * <img src=\"./img/window.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * @example <caption>In every window of 1 second each, emit at most 2 click events</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var interval = Rx.Observable.interval(1000);\n * var result = clicks.window(interval)\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window(windowBoundaries) {\n    return function windowOperatorFunction(source) {\n        return source.lift(new WindowOperator(windowBoundaries));\n    };\n}\nclass WindowOperator {\n    constructor(windowBoundaries) {\n        this.windowBoundaries = windowBoundaries;\n    }\n    call(subscriber, source) {\n        const windowSubscriber = new WindowSubscriber(subscriber);\n        const sourceSubscription = source.subscribe(windowSubscriber);\n        if (!sourceSubscription.closed) {\n            windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));\n        }\n        return sourceSubscription;\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber extends OuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.window = new Subject();\n        destination.next(this.window);\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow();\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        this._complete();\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        this.window = null;\n    }\n    openWindow() {\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const destination = this.destination;\n        const newWindow = this.window = new Subject();\n        destination.next(newWindow);\n    }\n}\n//# sourceMappingURL=window.js.map","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowCount.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * @example <caption>Ignore every 3rd click event, starting from the first one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(3)\n *   .map(win => win.skip(1)) // skip first of every 3 clicks\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @example <caption>Ignore every 3rd click event, starting from the third one</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks.windowCount(2, 3)\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount(windowSize, startWindowEvery = 0) {\n    return function windowCountOperatorFunction(source) {\n        return source.lift(new WindowCountOperator(windowSize, startWindowEvery));\n    };\n}\nclass WindowCountOperator {\n    constructor(windowSize, startWindowEvery) {\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber extends Subscriber {\n    constructor(destination, windowSize, startWindowEvery) {\n        super(destination);\n        this.destination = destination;\n        this.windowSize = windowSize;\n        this.startWindowEvery = startWindowEvery;\n        this.windows = [new Subject()];\n        this.count = 0;\n        destination.next(this.windows[0]);\n    }\n    _next(value) {\n        const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n        const destination = this.destination;\n        const windowSize = this.windowSize;\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len && !this.closed; i++) {\n            windows[i].next(value);\n        }\n        const c = this.count - windowSize + 1;\n        if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n            windows.shift().complete();\n        }\n        if (++this.count % startWindowEvery === 0 && !this.closed) {\n            const window = new Subject();\n            windows.push(window);\n            destination.next(window);\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().error(err);\n            }\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        if (windows) {\n            while (windows.length > 0 && !this.closed) {\n                windows.shift().complete();\n            }\n        }\n        this.destination.complete();\n    }\n    _unsubscribe() {\n        this.count = 0;\n        this.windows = null;\n    }\n}\n//# sourceMappingURL=windowCount.js.map","import { Subject } from '../Subject';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nexport function windowTime(windowTimeSpan) {\n    let scheduler = async;\n    let windowCreationInterval = null;\n    let maxWindowSize = Number.POSITIVE_INFINITY;\n    if (isScheduler(arguments[3])) {\n        scheduler = arguments[3];\n    }\n    if (isScheduler(arguments[2])) {\n        scheduler = arguments[2];\n    }\n    else if (isNumeric(arguments[2])) {\n        maxWindowSize = arguments[2];\n    }\n    if (isScheduler(arguments[1])) {\n        scheduler = arguments[1];\n    }\n    else if (isNumeric(arguments[1])) {\n        windowCreationInterval = arguments[1];\n    }\n    return function windowTimeOperatorFunction(source) {\n        return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n    };\n}\nclass WindowTimeOperator {\n    constructor(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));\n    }\n}\nclass CountedSubject extends Subject {\n    constructor() {\n        super(...arguments);\n        this._numberOfNextedValues = 0;\n    }\n    next(value) {\n        this._numberOfNextedValues++;\n        super.next(value);\n    }\n    get numberOfNextedValues() {\n        return this._numberOfNextedValues;\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber extends Subscriber {\n    constructor(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {\n        super(destination);\n        this.destination = destination;\n        this.windowTimeSpan = windowTimeSpan;\n        this.windowCreationInterval = windowCreationInterval;\n        this.maxWindowSize = maxWindowSize;\n        this.scheduler = scheduler;\n        this.windows = [];\n        const window = this.openWindow();\n        if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n            const closeState = { subscriber: this, window, context: null };\n            const creationState = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n            this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));\n            this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));\n        }\n        else {\n            const timeSpanOnlyState = { subscriber: this, window, windowTimeSpan };\n            this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n        }\n    }\n    _next(value) {\n        const windows = this.windows;\n        const len = windows.length;\n        for (let i = 0; i < len; i++) {\n            const window = windows[i];\n            if (!window.closed) {\n                window.next(value);\n                if (window.numberOfNextedValues >= this.maxWindowSize) {\n                    this.closeWindow(window);\n                }\n            }\n        }\n    }\n    _error(err) {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            windows.shift().error(err);\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const windows = this.windows;\n        while (windows.length > 0) {\n            const window = windows.shift();\n            if (!window.closed) {\n                window.complete();\n            }\n        }\n        this.destination.complete();\n    }\n    openWindow() {\n        const window = new CountedSubject();\n        this.windows.push(window);\n        const destination = this.destination;\n        destination.next(window);\n        return window;\n    }\n    closeWindow(window) {\n        window.complete();\n        const windows = this.windows;\n        windows.splice(windows.indexOf(window), 1);\n    }\n}\nfunction dispatchWindowTimeSpanOnly(state) {\n    const { subscriber, windowTimeSpan, window } = state;\n    if (window) {\n        subscriber.closeWindow(window);\n    }\n    state.window = subscriber.openWindow();\n    this.schedule(state, windowTimeSpan);\n}\nfunction dispatchWindowCreation(state) {\n    const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n    const window = subscriber.openWindow();\n    const action = this;\n    let context = { action, subscription: null };\n    const timeSpanState = { subscriber, window, context };\n    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);\n    action.add(context.subscription);\n    action.schedule(state, windowCreationInterval);\n}\nfunction dispatchWindowClose(state) {\n    const { subscriber, window, context } = state;\n    if (context && context.action && context.subscription) {\n        context.action.remove(context.subscription);\n    }\n    subscriber.closeWindow(window);\n}\n//# sourceMappingURL=windowTime.js.map","import { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowToggle.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * @example <caption>Every other second, emit the click events from the next 500ms</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var openings = Rx.Observable.interval(1000);\n * var result = clicks.windowToggle(openings, i =>\n *   i % 2 ? Rx.Observable.interval(500) : Rx.Observable.empty()\n * ).mergeAll();\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle(openings, closingSelector) {\n    return (source) => source.lift(new WindowToggleOperator(openings, closingSelector));\n}\nclass WindowToggleOperator {\n    constructor(openings, closingSelector) {\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber extends OuterSubscriber {\n    constructor(destination, openings, closingSelector) {\n        super(destination);\n        this.openings = openings;\n        this.closingSelector = closingSelector;\n        this.contexts = [];\n        this.add(this.openSubscription = subscribeToResult(this, openings, openings));\n    }\n    _next(value) {\n        const { contexts } = this;\n        if (contexts) {\n            const len = contexts.length;\n            for (let i = 0; i < len; i++) {\n                contexts[i].window.next(value);\n            }\n        }\n    }\n    _error(err) {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.error(err);\n                context.subscription.unsubscribe();\n            }\n        }\n        super._error(err);\n    }\n    _complete() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.complete();\n                context.subscription.unsubscribe();\n            }\n        }\n        super._complete();\n    }\n    /** @deprecated This is an internal implementation detail, do not use. */\n    _unsubscribe() {\n        const { contexts } = this;\n        this.contexts = null;\n        if (contexts) {\n            const len = contexts.length;\n            let index = -1;\n            while (++index < len) {\n                const context = contexts[index];\n                context.window.unsubscribe();\n                context.subscription.unsubscribe();\n            }\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (outerValue === this.openings) {\n            const { closingSelector } = this;\n            const closingNotifier = tryCatch(closingSelector)(innerValue);\n            if (closingNotifier === errorObject) {\n                return this.error(errorObject.e);\n            }\n            else {\n                const window = new Subject();\n                const subscription = new Subscription();\n                const context = { window, subscription };\n                this.contexts.push(context);\n                const innerSubscription = subscribeToResult(this, closingNotifier, context);\n                if (innerSubscription.closed) {\n                    this.closeWindow(this.contexts.length - 1);\n                }\n                else {\n                    innerSubscription.context = context;\n                    subscription.add(innerSubscription);\n                }\n                this.destination.next(window);\n            }\n        }\n        else {\n            this.closeWindow(this.contexts.indexOf(outerValue));\n        }\n    }\n    notifyError(err) {\n        this.error(err);\n    }\n    notifyComplete(inner) {\n        if (inner !== this.openSubscription) {\n            this.closeWindow(this.contexts.indexOf(inner.context));\n        }\n    }\n    closeWindow(index) {\n        if (index === -1) {\n            return;\n        }\n        const { contexts } = this;\n        const context = contexts[index];\n        const { window, subscription } = context;\n        contexts.splice(index, 1);\n        window.complete();\n        subscription.unsubscribe();\n    }\n}\n//# sourceMappingURL=windowToggle.js.map","import { Subject } from '../Subject';\nimport { tryCatch } from '../util/tryCatch';\nimport { errorObject } from '../util/errorObject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * <img src=\"./img/windowWhen.png\" width=\"100%\">\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * @example <caption>Emit only the first two clicks events in every window of [1-5] random seconds</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var result = clicks\n *   .windowWhen(() => Rx.Observable.interval(1000 + Math.random() * 4000))\n *   .map(win => win.take(2)) // each window has at most 2 emissions\n *   .mergeAll(); // flatten the Observable-of-Observables\n * result.subscribe(x => console.log(x));\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nclass WindowOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber extends OuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    }\n    notifyError(error, innerSub) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        this.openWindow(innerSub);\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    }\n    unsubscribeClosingNotification() {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    }\n    openWindow(innerSub = null) {\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const window = this.window = new Subject();\n        this.destination.next(window);\n        const closingNotifier = tryCatch(this.closingSelector)();\n        if (closingNotifier === errorObject) {\n            const err = errorObject.e;\n            this.destination.error(err);\n            this.window.error(err);\n        }\n        else {\n            this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n        }\n    }\n}\n//# sourceMappingURL=windowWhen.js.map","import { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n/* tslint:enable:max-line-length */\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * <img src=\"./img/withLatestFrom.png\" width=\"100%\">\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * @example <caption>On every click event, emit an array with the latest timer event plus the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var result = clicks.withLatestFrom(timer);\n * result.subscribe(x => console.log(x));\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.withLatestFrom(b, c, (a1, b1, c1) => a1 + b1 + c1)`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom(...args) {\n    return (source) => {\n        let project;\n        if (typeof args[args.length - 1] === 'function') {\n            project = args.pop();\n        }\n        const observables = args;\n        return source.lift(new WithLatestFromOperator(observables, project));\n    };\n}\nclass WithLatestFromOperator {\n    constructor(observables, project) {\n        this.observables = observables;\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber extends OuterSubscriber {\n    constructor(destination, observables, project) {\n        super(destination);\n        this.observables = observables;\n        this.project = project;\n        this.toRespond = [];\n        const len = observables.length;\n        this.values = new Array(len);\n        for (let i = 0; i < len; i++) {\n            this.toRespond.push(i);\n        }\n        for (let i = 0; i < len; i++) {\n            let observable = observables[i];\n            this.add(subscribeToResult(this, observable, observable, i));\n        }\n    }\n    notifyNext(outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        const toRespond = this.toRespond;\n        if (toRespond.length > 0) {\n            const found = toRespond.indexOf(outerIndex);\n            if (found !== -1) {\n                toRespond.splice(found, 1);\n            }\n        }\n    }\n    notifyComplete() {\n        // noop\n    }\n    _next(value) {\n        if (this.toRespond.length === 0) {\n            const args = [value, ...this.values];\n            if (this.project) {\n                this._tryProject(args);\n            }\n            else {\n                this.destination.next(args);\n            }\n        }\n    }\n    _tryProject(args) {\n        let result;\n        try {\n            result = this.project.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=withLatestFrom.js.map","import { zip as zipStatic } from '../observable/zip';\n/* tslint:enable:max-line-length */\n/**\n * @deprecated Deprecated in favor of static zip.\n */\nexport function zip(...observables) {\n    return function zipOperatorFunction(source) {\n        return source.lift.call(zipStatic(source, ...observables));\n    };\n}\n//# sourceMappingURL=zip.js.map","import { ZipOperator } from '../observable/zip';\nexport function zipAll(project) {\n    return (source) => source.lift(new ZipOperator(project));\n}\n//# sourceMappingURL=zipAll.js.map","/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap } from '../internal/operators/mergeMap';\nexport { mergeMap as flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n//# sourceMappingURL=index.js.map","import { Subscriber } from '../Subscriber';\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * <img src=\"./img/map.png\" width=\"100%\">\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * @example <caption>Map every click to the clientX position of that click</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks.map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map(project, thisArg) {\n    return function mapOperation(source) {\n        if (typeof project !== 'function') {\n            throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n        }\n        return source.lift(new MapOperator(project, thisArg));\n    };\n}\nexport class MapOperator {\n    constructor(project, thisArg) {\n        this.project = project;\n        this.thisArg = thisArg;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber extends Subscriber {\n    constructor(destination, project, thisArg) {\n        super(destination);\n        this.project = project;\n        this.count = 0;\n        this.thisArg = thisArg || this;\n    }\n    // NOTE: This looks unoptimized, but it's actually purposefully NOT\n    // using try/catch optimizations.\n    _next(value) {\n        let result;\n        try {\n            result = this.project.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\n//# sourceMappingURL=map.js.map","import { noop } from './noop';\n/* tslint:enable:max-line-length */\nexport function pipe(...fns) {\n    return pipeFromArray(fns);\n}\n/* @internal */\nexport function pipeFromArray(fns) {\n    if (!fns) {\n        return noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce((prev, fn) => fn(prev), input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n//# sourceMappingURL=isDate.js.map","import { errorObject } from './errorObject';\nlet tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.e = e;\n        return errorObject;\n    }\n}\nexport function tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n//# sourceMappingURL=tryCatch.js.map","export function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = (array) => (subscriber) => {\n    for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n        subscriber.next(array[i]);\n    }\n    if (!subscriber.closed) {\n        subscriber.complete();\n    }\n};\n//# sourceMappingURL=subscribeToArray.js.map","import { connectableObservableDescriptor } from '../observable/ConnectableObservable';\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        let subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        const connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexport class MulticastOperator {\n    constructor(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    call(subscriber, source) {\n        const { selector } = this;\n        const subject = this.subjectFactory();\n        const subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    }\n}\n//# sourceMappingURL=multicast.js.map","import { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * <img src=\"./img/filter.png\" width=\"100%\">\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * @example <caption>Emit only click events whose target was a DIV element</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksOnDivs = clicks.filter(ev => ev.target.tagName === 'DIV');\n * clicksOnDivs.subscribe(x => console.log(x));\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter(predicate, thisArg) {\n    return function filterOperatorFunction(source) {\n        return source.lift(new FilterOperator(predicate, thisArg));\n    };\n}\nclass FilterOperator {\n    constructor(predicate, thisArg) {\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber extends Subscriber {\n    constructor(destination, predicate, thisArg) {\n        super(destination);\n        this.predicate = predicate;\n        this.thisArg = thisArg;\n        this.count = 0;\n    }\n    // the try catch block below is left specifically for\n    // optimization and perf reasons. a tryCatcher is not necessary here.\n    _next(value) {\n        let result;\n        try {\n            result = this.predicate.call(this.thisArg, value, this.count++);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.destination.next(value);\n        }\n    }\n}\n//# sourceMappingURL=filter.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport const subscribeToIterable = (iterable) => (subscriber) => {\n    const iterator = iterable[Symbol_iterator]();\n    do {\n        const item = iterator.next();\n        if (item.done) {\n            subscriber.complete();\n            break;\n        }\n        subscriber.next(item.value);\n        if (subscriber.closed) {\n            break;\n        }\n    } while (true);\n    // Finalize the iterator if it happens to be a Generator\n    if (typeof iterator.return === 'function') {\n        subscriber.add(() => {\n            if (iterator.return) {\n                iterator.return();\n            }\n        });\n    }\n    return subscriber;\n};\n//# sourceMappingURL=subscribeToIterable.js.map","/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport class UnsubscriptionError extends Error {\n    constructor(errors) {\n        super(errors ?\n            `${errors.length} errors occurred during unsubscription:\n  ${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '');\n        this.errors = errors;\n        this.name = 'UnsubscriptionError';\n        Object.setPrototypeOf(this, UnsubscriptionError.prototype);\n    }\n}\n//# sourceMappingURL=UnsubscriptionError.js.map","import { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * @example <caption>Ensure values in subscribe are called just before browser repaint.</caption>\n * const intervals = Rx.Observable.interval(10); // Intervals are scheduled\n *                                               // with async scheduler by default...\n *\n * intervals\n * .observeOn(Rx.Scheduler.animationFrame)       // ...but we will observe on animationFrame\n * .subscribe(val => {                           // scheduler to ensure smooth animation.\n *   someDiv.style.height = val + 'px';\n * });\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn(scheduler, delay = 0) {\n    return function observeOnOperatorFunction(source) {\n        return source.lift(new ObserveOnOperator(scheduler, delay));\n    };\n}\nexport class ObserveOnOperator {\n    constructor(scheduler, delay = 0) {\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber extends Subscriber {\n    constructor(destination, scheduler, delay = 0) {\n        super(destination);\n        this.scheduler = scheduler;\n        this.delay = delay;\n    }\n    /** @nocollapse */\n    static dispatch(arg) {\n        const { notification, destination } = arg;\n        notification.observe(destination);\n        this.unsubscribe();\n    }\n    scheduleMessage(notification) {\n        this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));\n    }\n    _next(value) {\n        this.scheduleMessage(Notification.createNext(value));\n    }\n    _error(err) {\n        this.scheduleMessage(Notification.createError(err));\n    }\n    _complete() {\n        this.scheduleMessage(Notification.createComplete());\n    }\n}\nexport class ObserveOnMessage {\n    constructor(notification, destination) {\n        this.notification = notification;\n        this.destination = destination;\n    }\n}\n//# sourceMappingURL=observeOn.js.map","import { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        // If delay is greater than 0, request as an async action.\n        if (delay !== null && delay > 0) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        // Push the action to the end of the scheduler queue.\n        scheduler.actions.push(this);\n        // If an animation frame has already been requested, don't request another\n        // one. If an animation frame hasn't been requested yet, request one. Return\n        // the current animation frame request id.\n        return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(() => scheduler.flush(null)));\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.recycleAsyncId(scheduler, id, delay);\n        }\n        // If the scheduler queue is empty, cancel the requested animation frame and\n        // set the scheduled flag to undefined so the next AnimationFrameAction will\n        // request its own.\n        if (scheduler.actions.length === 0) {\n            cancelAnimationFrame(id);\n            scheduler.scheduled = undefined;\n        }\n        // Return undefined so the action knows to request a new async id if it's rescheduled.\n        return undefined;\n    }\n}\n//# sourceMappingURL=AnimationFrameAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class AnimationFrameScheduler extends AsyncScheduler {\n    flush(action) {\n        this.active = true;\n        this.scheduled = undefined;\n        const { actions } = this;\n        let error;\n        let index = -1;\n        let count = actions.length;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        } while (++index < count && (action = actions.shift()));\n        this.active = false;\n        if (error) {\n            while (++index < count && (action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n//# sourceMappingURL=AnimationFrameScheduler.js.map","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link async} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * @example <caption>Schedule div height animation</caption>\n * const div = document.querySelector('.some-div');\n *\n * Rx.Scheduler.animationFrame.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see .some-div element growing in height\n *\n *\n * @static true\n * @name animationFrame\n * @owner Scheduler\n */\nexport const animationFrame = new AnimationFrameScheduler(AnimationFrameAction);\n//# sourceMappingURL=animationFrame.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n        super(SchedulerAction, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    /**\n     * Prompt the Scheduler to execute all of its queued actions, therefore\n     * clearing its queue.\n     * @return {void}\n     */\n    flush() {\n        const { actions, maxFrames } = this;\n        let error, action;\n        while ((action = actions.shift()) && (this.frame = action.delay) <= maxFrames) {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = scheduler.index += 1) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (!this.id) {\n            return super.schedule(state, delay);\n        }\n        this.active = false;\n        // If an action is rescheduled, we save allocations by mutating its state,\n        // pushing it to the end of the scheduler queue, and recycling the action.\n        // But since the VirtualTimeScheduler is used for testing, VirtualActions\n        // must be immutable so they can be inspected later.\n        const action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n//# sourceMappingURL=VirtualTimeScheduler.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n// tslint:enable:max-line-length\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, the\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is very important to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - {@link Scheduler} - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to  an Observable calls `func`\n * synchronously, but using `Scheduler.async` as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you use the async Scheduler\n * and call `subscribe` on the output Observable all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use `Scheduler.async` just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n *\n * @example <caption>Convert jQuery's getJSON to an Observable API</caption>\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * var getJSONAsObservable = bindCallback(jQuery.getJSON);\n * var result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Receive an array of arguments passed to a callback</caption>\n * someFunction((a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * });\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n *\n *\n * @example <caption>Compare behaviour with and without async Scheduler</caption>\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n *\n *\n * @example <caption>Use bindCallback on an object method</caption>\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n *\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            // DEPRECATED PATH\n            return (...args) => bindCallback(callbackFunc, scheduler)(...args).pipe(map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const context = this;\n        let subject;\n        const params = {\n            context,\n            subject,\n            callbackFunc,\n            scheduler,\n        };\n        return new Observable(subscriber => {\n            if (!scheduler) {\n                if (!subject) {\n                    subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                const state = {\n                    args, subscriber, params,\n                };\n                return scheduler.schedule(dispatch, 0, state);\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const self = this;\n    const { args, subscriber, params } = state;\n    const { callbackFunc, context, scheduler } = params;\n    let { subject } = params;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n            this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            subject.error(err);\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(state) {\n    const { value, subject } = state;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(state) {\n    const { err, subject } = state;\n    subject.error(err);\n}\n//# sourceMappingURL=bindCallback.js.map","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { map } from '../operators/map';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper {@link Scheduler} provided as optional third parameter. Scheduler\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * Scheduler works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n *\n * @example <caption>Read a file from the filesystem and get the data as an Observable</caption>\n * import * as fs from 'fs';\n * var readFileAsObservable = bindNodeCallback(fs.readFile);\n * var result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n *\n * @example <caption>Use on function calling callback with multiple arguments</caption>\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n *\n * @example <caption>Use on function calling callback in regular style</caption>\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * var boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n *\n *\n * @see {@link bindCallback}\n * @see {@link from}\n * @see {@link fromPromise}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {Scheduler} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback(callbackFunc, resultSelector, scheduler) {\n    if (resultSelector) {\n        if (isScheduler(resultSelector)) {\n            scheduler = resultSelector;\n        }\n        else {\n            // DEPRECATED PATH\n            return (...args) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n        }\n    }\n    return function (...args) {\n        const params = {\n            subject: undefined,\n            args,\n            callbackFunc,\n            scheduler,\n            context: this,\n        };\n        return new Observable(subscriber => {\n            const { context } = params;\n            let { subject } = params;\n            if (!scheduler) {\n                if (!subject) {\n                    subject = params.subject = new AsyncSubject();\n                    const handler = (...innerArgs) => {\n                        const err = innerArgs.shift();\n                        if (err) {\n                            subject.error(err);\n                            return;\n                        }\n                        subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n                        subject.complete();\n                    };\n                    try {\n                        callbackFunc.apply(context, [...args, handler]);\n                    }\n                    catch (err) {\n                        subject.error(err);\n                    }\n                }\n                return subject.subscribe(subscriber);\n            }\n            else {\n                return scheduler.schedule(dispatch, 0, { params, subscriber, context });\n            }\n        });\n    };\n}\nfunction dispatch(state) {\n    const { params, subscriber, context } = state;\n    const { callbackFunc, args, scheduler } = params;\n    let subject = params.subject;\n    if (!subject) {\n        subject = params.subject = new AsyncSubject();\n        const handler = (...innerArgs) => {\n            const err = innerArgs.shift();\n            if (err) {\n                this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n            }\n            else {\n                const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n                this.add(scheduler.schedule(dispatchNext, 0, { value, subject }));\n            }\n        };\n        try {\n            callbackFunc.apply(context, [...args, handler]);\n        }\n        catch (err) {\n            this.add(scheduler.schedule(dispatchError, 0, { err, subject }));\n        }\n    }\n    this.add(subject.subscribe(subscriber));\n}\nfunction dispatchNext(arg) {\n    const { value, subject } = arg;\n    subject.next(value);\n    subject.complete();\n}\nfunction dispatchError(arg) {\n    const { err, subject } = arg;\n    subject.error(err);\n}\n//# sourceMappingURL=bindNodeCallback.js.map","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\n/* tslint:enable:max-line-length */\n/**\n * Creates an Observable from an API based on addHandler/removeHandler\n * functions.\n *\n * <span class=\"informal\">Converts any addHandler/removeHandler API to an\n * Observable.</span>\n *\n * <img src=\"./img/fromEventPattern.png\" width=\"100%\">\n *\n * Creates an Observable by using the `addHandler` and `removeHandler`\n * functions to add and remove the handlers. The `addHandler` is\n * called when the output Observable is subscribed, and `removeHandler` is\n * called when the Subscription is unsubscribed.\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * var clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * @see {@link from}\n * @see {@link fromEvent}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, signal?: any): void} [removeHandler] An optional function that\n * takes a `handler` function as argument and removes it in case it was\n * previously attached using `addHandler`. if addHandler returns signal to teardown when remove,\n * removeHandler function will forward it.\n * @return {Observable<T>}\n * @name fromEventPattern\n */\nexport function fromEventPattern(addHandler, removeHandler, resultSelector) {\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return fromEventPattern(addHandler, removeHandler).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        const handler = (...e) => subscriber.next(e.length === 1 ? e[0] : e);\n        let retValue;\n        try {\n            retValue = addHandler(handler);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!isFunction(removeHandler)) {\n            return undefined;\n        }\n        return () => removeHandler(handler, retValue);\n    });\n}\n//# sourceMappingURL=fromEventPattern.js.map","import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    let resultSelector;\n    let initialState;\n    if (arguments.length == 1) {\n        const options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(subscriber => {\n        let state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber,\n                iterate,\n                condition,\n                resultSelector,\n                state\n            });\n        }\n        do {\n            if (condition) {\n                let conditionResult;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            let value;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        let conditionResult;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    let value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n//# sourceMappingURL=generate.js.map","import { defer } from './defer';\nimport { EMPTY } from './empty';\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `if` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * then controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `if` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * @example <caption>Change at runtime which Observable will be subscribed</caption>\n * let subscribeToFirst;\n * const firstOrSecond = Rx.Observable.if(\n *   () => subscribeToFirst,\n *   Rx.Observable.of('first'),\n *   Rx.Observable.of('second')\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n *\n * @example <caption>Control an access to an Observable</caption>\n * let accessGranted;\n * const observableIfYouHaveAccess = Rx.Observable.if(\n *   () => accessGranted,\n *   Rx.Observable.of('It seems you have an access...') // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end')\n * );\n *\n * // Logs:\n * // \"The end\"\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n */\nexport function iif(condition, trueResult = EMPTY, falseResult = EMPTY) {\n    return defer(() => condition() ? trueResult : falseResult);\n}\n//# sourceMappingURL=iif.js.map","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified IScheduler.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * <img src=\"./img/interval.png\" width=\"100%\">\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` IScheduler to provide a notion of time, but you may pass any\n * IScheduler to it.\n *\n * @example <caption>Emits ascending numbers, one every second (1000ms)</caption>\n * var numbers = Rx.Observable.interval(1000);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {Scheduler} [scheduler=async] The IScheduler to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { Observable } from '../Observable';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n/* tslint:enable:max-line-length */\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * <img src=\"./img/onErrorResumeNext.png\" width=\"100%\">\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the resuult of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * @example <caption>Subscribe to the next Observable after map fails</caption>\n * import { onErrorResumeNext, of } from 'rxjs/create';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n *\n * @see {@link concat}\n * @see {@link catch}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext(...sources) {\n    if (sources.length === 0) {\n        return EMPTY;\n    }\n    const [first, ...remainder] = sources;\n    if (sources.length === 1 && isArray(first)) {\n        return onErrorResumeNext(...first);\n    }\n    return new Observable(subscriber => {\n        const subNext = () => subscriber.add(onErrorResumeNext(...remainder).subscribe(subscriber));\n        return from(first).subscribe({\n            next(value) { subscriber.next(value); },\n            error: subNext,\n            complete: subNext,\n        });\n    });\n}\n//# sourceMappingURL=onErrorResumeNext.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\n/**\n * Convert an object into an observable sequence of [key, value] pairs\n * using an optional IScheduler to enumerate the object.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * var obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * var source = Rx.Observable.pairs(obj);\n *\n * var subscription = source.subscribe(\n *   function (x) {\n *     console.log('Next: %s', x);\n *   },\n *   function (err) {\n *     console.log('Error: %s', err);\n *   },\n *   function () {\n *     console.log('Completed');\n *   });\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to run the\n * enumeration of the input sequence on.\n * @returns {(Observable<[string, T]>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n                const key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            const subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n            return subscription;\n        });\n    }\n}\n/** @internal */\nexport function dispatch(state) {\n    const { keys, index, subscriber, subscription, obj } = state;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            const key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n//# sourceMappingURL=pairs.js.map","import { Observable } from '../Observable';\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * <img src=\"./img/range.png\" width=\"100%\">\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * IScheduler and just delivers the notifications synchronously, but may use\n * an optional IScheduler to regulate those deliveries.\n *\n * @example <caption>Emits the numbers 1 to 10</caption>\n * var numbers = Rx.Observable.range(1, 10);\n * numbers.subscribe(x => console.log(x));\n *\n * @see {@link timer}\n * @see {@link interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} [count=0] The number of sequential integers to generate.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start = 0, count = 0, scheduler) {\n    return new Observable(subscriber => {\n        let index = 0;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                index, count, start, subscriber\n            });\n        }\n        else {\n            do {\n                if (index++ >= count) {\n                    subscriber.complete();\n                    break;\n                }\n                subscriber.next(start++);\n                if (subscriber.closed) {\n                    break;\n                }\n            } while (true);\n        }\n        return undefined;\n    });\n}\n/** @internal */\nexport function dispatch(state) {\n    const { start, index, count, subscriber } = state;\n    if (index >= count) {\n        subscriber.complete();\n        return;\n    }\n    subscriber.next(start);\n    if (subscriber.closed) {\n        return;\n    }\n    state.index = index + 1;\n    state.start = start + 1;\n    this.schedule(state);\n}\n//# sourceMappingURL=range.js.map","import { Observable } from '../Observable';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using(resourceFactory, observableFactory) {\n    return new Observable(subscriber => {\n        let resource;\n        try {\n            resource = resourceFactory();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        let result;\n        try {\n            result = observableFactory(resource);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        const source = result ? from(result) : EMPTY;\n        const subscription = source.subscribe(subscriber);\n        return () => {\n            subscription.unsubscribe();\n            if (resource) {\n                resource.unsubscribe();\n            }\n        };\n    });\n}\n//# sourceMappingURL=using.js.map","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { observable } from './internal/symbol/observable';\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n/* Schedulers */\nexport { asap as asapScheduler } from './internal/scheduler/asap';\nexport { async as asyncScheduler } from './internal/scheduler/async';\nexport { queue as queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame as animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n/* Notification */\nexport { Notification } from './internal/Notification';\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n/* Config */\nexport { config } from './internal/config';\n//# sourceMappingURL=index.js.map","import { AsyncAction } from './AsyncAction';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction extends AsyncAction {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n    }\n    schedule(state, delay = 0) {\n        if (delay > 0) {\n            return super.schedule(state, delay);\n        }\n        this.delay = delay;\n        this.state = state;\n        this.scheduler.flush(this);\n        return this;\n    }\n    execute(state, delay) {\n        return (delay > 0 || this.closed) ?\n            super.execute(state, delay) :\n            this._execute(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        // If delay exists and is greater than 0, or if the delay is null (the\n        // action wasn't rescheduled) but was originally scheduled as an async\n        // action, then recycle as an async action.\n        if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n            return super.requestAsyncId(scheduler, id, delay);\n        }\n        // Otherwise flush the scheduler starting with this action.\n        return scheduler.flush(this);\n    }\n}\n//# sourceMappingURL=QueueAction.js.map","import { AsyncScheduler } from './AsyncScheduler';\nexport class QueueScheduler extends AsyncScheduler {\n}\n//# sourceMappingURL=QueueScheduler.js.map","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link async} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * @examples <caption>Schedule recursively first, then do something</caption>\n *\n * Rx.Scheduler.queue.schedule(() => {\n *   Rx.Scheduler.queue.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n *\n *\n * @example <caption>Reschedule itself recursively</caption>\n *\n * Rx.Scheduler.queue.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n *\n *\n * @static true\n * @name queue\n * @owner Scheduler\n */\nexport const queue = new QueueScheduler(QueueAction);\n//# sourceMappingURL=queue.js.map","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { tryCatch } from './util/tryCatch';\nimport { errorObject } from './util/errorObject';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    constructor(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        /** @internal */\n        this._parent = null;\n        /** @internal */\n        this._parents = null;\n        /** @internal */\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    unsubscribe() {\n        let hasErrors = false;\n        let errors;\n        if (this.closed) {\n            return;\n        }\n        let { _parent, _parents, _unsubscribe, _subscriptions } = this;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        let index = -1;\n        let len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction(_unsubscribe)) {\n            let trial = tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.e instanceof UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.e.errors) : [errorObject.e]);\n            }\n        }\n        if (isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                const sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    let trial = tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        let err = errorObject.e;\n                        if (err instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError(errors);\n        }\n    }\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    add(teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        let subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    const tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        const subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    }\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    remove(subscription) {\n        const subscriptions = this._subscriptions;\n        if (subscriptions) {\n            const subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    }\n    /** @internal */\n    _addParent(parent) {\n        let { _parent, _parents } = this;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    }\n}\n/** @nocollapse */\nSubscription.EMPTY = (function (empty) {\n    empty.closed = true;\n    return empty;\n}(new Subscription()));\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n//# sourceMappingURL=Subscription.js.map","/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport class EmptyError extends Error {\n    constructor() {\n        super('no elements in sequence');\n        this.name = 'EmptyError';\n        Object.setPrototypeOf(this, EmptyError.prototype);\n    }\n}\n//# sourceMappingURL=EmptyError.js.map","import { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n/* tslint:enable:max-line-length */\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * <img src=\"./img/do.png\" width=\"100%\">\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `do` is not subscribed, the side effects specified by the\n * Observer will never happen. `do` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * @example <caption>Map every click to the clientX position of that click, while also logging the click event</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var positions = clicks\n *   .do(ev => console.log(ev))\n *   .map(ev => ev.clientX);\n * positions.subscribe(x => console.log(x));\n *\n * @see {@link map}\n * @see {@link subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nclass DoOperator {\n    constructor(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TapSubscriber extends Subscriber {\n    constructor(destination, observerOrNext, error, complete) {\n        super(destination);\n        this._tapNext = noop;\n        this._tapError = noop;\n        this._tapComplete = noop;\n        this._tapError = error || noop;\n        this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            this._context = this;\n            this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            this._context = observerOrNext;\n            this._tapNext = observerOrNext.next || noop;\n            this._tapError = observerOrNext.error || noop;\n            this._tapComplete = observerOrNext.complete || noop;\n        }\n    }\n    _next(value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    }\n    _error(err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    }\n}\n//# sourceMappingURL=tap.js.map","import { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\nfunction shareSubjectFactory() {\n    return new Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share() {\n    return (source) => refCount()(multicast(shareSubjectFactory)(source));\n}\n//# sourceMappingURL=share.js.map","import { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nclass RefCountOperator {\n    constructor(connectable) {\n        this.connectable = connectable;\n    }\n    call(subscriber, source) {\n        const { connectable } = this;\n        connectable._refCount++;\n        const refCounter = new RefCountSubscriber(subscriber, connectable);\n        const subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    }\n}\nclass RefCountSubscriber extends Subscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _unsubscribe() {\n        const { connectable } = this;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        const refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        const { connection } = this;\n        const sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    }\n}\n//# sourceMappingURL=refCount.js.map","import { Subscriber } from '../Subscriber';\n/* tslint:enable:max-line-length */\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * <img src=\"./img/defaultIfEmpty.png\" width=\"100%\">\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * @example <caption>If no clicks happen in 5 seconds, then emit \"no clicks\"</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var clicksBeforeFive = clicks.takeUntil(Rx.Observable.interval(5000));\n * var result = clicksBeforeFive.defaultIfEmpty('no clicks');\n * result.subscribe(x => console.log(x));\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty(defaultValue = null) {\n    return (source) => source.lift(new DefaultIfEmptyOperator(defaultValue));\n}\nclass DefaultIfEmptyOperator {\n    constructor(defaultValue) {\n        this.defaultValue = defaultValue;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n    }\n}\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber extends Subscriber {\n    constructor(destination, defaultValue) {\n        super(destination);\n        this.defaultValue = defaultValue;\n        this.isEmpty = true;\n    }\n    _next(value) {\n        this.isEmpty = false;\n        this.destination.next(value);\n    }\n    _complete() {\n        if (this.isEmpty) {\n            this.destination.next(this.defaultValue);\n        }\n        this.destination.complete();\n    }\n}\n//# sourceMappingURL=defaultIfEmpty.js.map","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\nconst toString = Object.prototype.toString;\n/* tslint:enable:max-line-length */\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * <img src=\"./img/fromEvent.png\" width=\"100%\">\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * @example <caption>Emits clicks happening on the DOM document</caption>\n * var clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n *\n *\n * @example <caption>Use addEventListener with capture option</caption>\n * var clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                                          // which will be passed to addEventListener\n * var clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        // DEPRECATED PATH\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        // DEPRECATED PATH\n        return fromEvent(target, eventName, options).pipe(map(args => isArray(args) ? resultSelector(...args) : resultSelector(args)));\n    }\n    return new Observable(subscriber => {\n        function handler(e) {\n            if (arguments.length > 1) {\n                subscriber.next(Array.prototype.slice.call(arguments));\n            }\n            else {\n                subscriber.next(e);\n            }\n        }\n        setupSubscription(target, eventName, handler, subscriber, options);\n    });\n}\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n    let unsubscribe;\n    if (isEventTarget(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addEventListener(eventName, handler, options);\n        unsubscribe = () => source.removeEventListener(eventName, handler, options);\n    }\n    else if (isJQueryStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.on(eventName, handler);\n        unsubscribe = () => source.off(eventName, handler);\n    }\n    else if (isNodeStyleEventEmitter(sourceObj)) {\n        const source = sourceObj;\n        sourceObj.addListener(eventName, handler);\n        unsubscribe = () => source.removeListener(eventName, handler);\n    }\n    else if (sourceObj && sourceObj.length) {\n        for (let i = 0, len = sourceObj.length; i < len; i++) {\n            setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n        }\n    }\n    else {\n        throw new TypeError('Invalid event target');\n    }\n    subscriber.add(unsubscribe);\n}\nfunction isNodeStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\nfunction isJQueryStyleEventEmitter(sourceObj) {\n    return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\nfunction isEventTarget(sourceObj) {\n    return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n//# sourceMappingURL=fromEvent.js.map","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToArray } from '../util/subscribeToArray';\nexport function fromArray(input, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscribeToArray(input));\n    }\n    else {\n        return new Observable(subscriber => {\n            const sub = new Subscription();\n            let i = 0;\n            sub.add(scheduler.schedule(function () {\n                if (i === input.length) {\n                    subscriber.complete();\n                    return;\n                }\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    sub.add(this.schedule());\n                }\n            }));\n            return sub;\n        });\n    }\n}\n//# sourceMappingURL=fromArray.js.map","export function isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\n//# sourceMappingURL=isScheduler.js.map","import { Observable } from '../Observable';\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * <img src=\"./img/throw.png\" width=\"100%\">\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * @example <caption>Emit the number 7, then emit an error.</caption>\n * import { throwError, concat, of } from 'rxjs/create';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * @example <caption>Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 13</caption>\n * import { throwError, interval, of } from 'rxjs/create';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 13 ?\n *     throwError('Thirteens are bad') :\n *     of('a', 'b', 'c')\n *   )\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * @see {@link create}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throw\n * @owner Observable\n */\nexport function throwError(error, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => subscriber.error(error));\n    }\n    else {\n        return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n    }\n}\nfunction dispatch({ error, subscriber }) {\n    subscriber.error(error);\n}\n//# sourceMappingURL=throwError.js.map","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SharedModule } from './shared/shared.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FeaturesModule } from './features/features.module';\nimport { BreadcrumbsModule } from 'ng6-breadcrumbs';\n\nimport { AppComponent } from './app.component';\nimport { FeaturesComponent } from './features/features.component';\nimport { AppRoutingModule } from './app-routing.module';\n// import { AuthComponent } from './auth/auth.component';\nimport { AccountModule } from './account/account.module';\nimport { AuthModule } from './auth/auth.module';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { TabContentComponent } from './tab-content/tab-content.component';\nimport { FeatureComponent } from './feature/feature.component';\nimport { OtherComponent } from './other/other.component';\nimport { UserComponent } from './user/user.component';\nimport { OtherLoginComponent } from './other-login/other-login.component';\nimport { UserProfileComponent } from './user/user-profile/user-profile.component';\nimport { UserDashboardComponent } from './user/user-dashboard/user-dashboard.component';\nimport { ClientComponent } from './client/client.component';\nimport { NewLoginComponent } from './new-login/new-login.component';\nimport { ClientHomeComponent } from './client/client-home/client-home.component';\nimport { ClientProfileComponent } from './client/client-profile/client-profile.component';\nimport { AuthInterceptor } from './core/intercepter/http-interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FeaturesComponent,\n    NotFoundComponent,\n    TabContentComponent,\n    FeatureComponent,\n    OtherComponent,\n    UserComponent,\n    OtherLoginComponent,\n    UserProfileComponent,\n    UserDashboardComponent,\n    ClientComponent,\n    NewLoginComponent,\n    ClientHomeComponent,\n    ClientProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedModule,\n    BreadcrumbsModule,\n    FeaturesModule,\n    AuthModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  exports: [\n    SharedModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router, NavigationStart, ActivatedRoute } from '@angular/router';\nimport { AuthService } from './core/services/auth.service';\nimport { LoadingActionService } from './core/services/loading-action.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('addClassEle') addClassEle: ElementRef;\n\n  title = 'new-angular-training';\n  toggleLoading = false;\n\n  addClass = false;\n\n  tabId = 1;\n\n  constructor(\n    private router: Router,\n    private auth: AuthService,\n    private loading: LoadingActionService\n  ) {\n\n  }\n\n  toggle(evt: any, asd: string) {\n    this.addClass = !this.addClass;\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe((data) => {\n      if (data instanceof NavigationStart) {\n        window.scrollTo(0, 0);\n        this.auth.checkLogged();\n      }\n    });\n\n    // this.router.navigate(['/events']);\n\n    this.loading.listerning$.subscribe(data => {\n      console.log(data);\n      this.toggleLoading = data;\n    });\n  }\n\n  send(id: number) {\n    this.tabId = id;\n  }\n\n  move() {\n    // this.router.navigateByUrl('/feature');\n    this.router.navigate(['/feature'], {queryParams: {abc: 'dong'}});\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nvar RouterModuleNgFactory = i0.ɵcmf(i1.RouterModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [ɵEmptyOutletComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(1073742336, i1.RouterModule, i1.RouterModule, [[2, i1.ɵangular_packages_router_router_a], [2, i1.Router]])]); });\nexport { RouterModuleNgFactory as RouterModuleNgFactory };\nvar styles_ɵEmptyOutletComponent = [];\nvar RenderType_ɵEmptyOutletComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_ɵEmptyOutletComponent, data: {} });\nexport { RenderType_ɵEmptyOutletComponent as RenderType_ɵEmptyOutletComponent };\nexport function View_ɵEmptyOutletComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i0.ɵdid(1, 212992, null, 0, i1.RouterOutlet, [i1.ChildrenOutletContexts, i0.ViewContainerRef, i0.ComponentFactoryResolver, [8, null], i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nexport function View_ɵEmptyOutletComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_ɵEmptyOutletComponent_0, RenderType_ɵEmptyOutletComponent)), i0.ɵdid(1, 49152, null, 0, i1.ɵEmptyOutletComponent, [], null, null)], null, null); }\nvar ɵEmptyOutletComponentNgFactory = i0.ɵccf(\"ng-component\", i1.ɵEmptyOutletComponent, View_ɵEmptyOutletComponent_Host_0, {}, {}, []);\nexport { ɵEmptyOutletComponentNgFactory as ɵEmptyOutletComponentNgFactory };\n","<router-outlet></router-outlet>","import { Component, OnInit, Input } from '@angular/core';\nimport { PageTitle } from './../../../core/interfaces/interface-common';\n\n@Component({\n  selector: 'app-page-title',\n  templateUrl: './page-title.component.html',\n  styleUrls: ['./page-title.component.scss']\n})\nexport class PageTitleComponent implements OnInit {\n\n  @Input() pageTitle: PageTitle;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./page-title.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./page-title.component\";\nvar styles_PageTitleComponent = [i0.styles];\nvar RenderType_PageTitleComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_PageTitleComponent, data: {} });\nexport { RenderType_PageTitleComponent as RenderType_PageTitleComponent };\nfunction View_PageTitleComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 3, \"section\", [[\"class\", \"page-title\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 2, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"h1\", [], null, null, null, null, null)), (_l()(), i1.ɵted(3, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.pageTitle.title || \"Page title\"); _ck(_v, 3, 0, currVal_0); }); }\nexport function View_PageTitleComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵand(16777216, null, null, 1, null, View_PageTitleComponent_1)), i1.ɵdid(1, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = !_co.pageTitle.hideTitle; _ck(_v, 1, 0, currVal_0); }, null); }\nexport function View_PageTitleComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-page-title\", [], null, null, null, View_PageTitleComponent_0, RenderType_PageTitleComponent)), i1.ɵdid(1, 114688, null, 0, i3.PageTitleComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar PageTitleComponentNgFactory = i1.ɵccf(\"app-page-title\", i3.PageTitleComponent, View_PageTitleComponent_Host_0, { pageTitle: \"pageTitle\" }, {}, []);\nexport { PageTitleComponentNgFactory as PageTitleComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".page-title[_ngcontent-%COMP%]{background:url(slider1.b87b4f92e9925accdd78.jpg) center/cover no-repeat;padding:120px 0 47px;color:#fff}\"];\nexport { styles as styles };\n","<section class=\"page-title\" *ngIf=\"!pageTitle.hideTitle\">\n  <div class=\"container\">\n    <h1>{{ pageTitle.title || 'Page title' }}</h1>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-features',\n  templateUrl: './features.component.html',\n  styleUrls: ['./features.component.scss']\n})\nexport class FeaturesComponent implements OnInit {\n\n  pageTitle = {\n    title: ''\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onActivate(event: any): void {\n    this.pageTitle = event.pageTitle || this.pageTitle;\n  }\n\n  onDeactivate(event: any): void {\n    // console.log(event);\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./features.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../shared/components/page-title/page-title.component.ngfactory\";\nimport * as i3 from \"../shared/components/page-title/page-title.component\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./features.component\";\nvar styles_FeaturesComponent = [i0.styles];\nvar RenderType_FeaturesComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_FeaturesComponent, data: {} });\nexport { RenderType_FeaturesComponent as RenderType_FeaturesComponent };\nexport function View_FeaturesComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-page-title\", [], null, null, null, i2.View_PageTitleComponent_0, i2.RenderType_PageTitleComponent)), i1.ɵdid(1, 114688, null, 0, i3.PageTitleComponent, [], { pageTitle: [0, \"pageTitle\"] }, null), (_l()(), i1.ɵeld(2, 0, null, null, 2, \"main\", [[\"class\", \"page-main\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 16777216, null, null, 1, \"router-outlet\", [], null, [[null, \"activate\"], [null, \"deactivate\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"activate\" === en)) {\n        var pd_0 = (_co.onActivate($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"deactivate\" === en)) {\n        var pd_1 = (_co.onDeactivate($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i1.ɵdid(4, 212992, null, 0, i4.RouterOutlet, [i4.ChildrenOutletContexts, i1.ViewContainerRef, i1.ComponentFactoryResolver, [8, null], i1.ChangeDetectorRef], null, { activateEvents: \"activate\", deactivateEvents: \"deactivate\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.pageTitle; _ck(_v, 1, 0, currVal_0); _ck(_v, 4, 0); }, null); }\nexport function View_FeaturesComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-features\", [], null, null, null, View_FeaturesComponent_0, RenderType_FeaturesComponent)), i1.ɵdid(1, 114688, null, 0, i5.FeaturesComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar FeaturesComponentNgFactory = i1.ɵccf(\"app-features\", i5.FeaturesComponent, View_FeaturesComponent_Host_0, {}, {}, []);\nexport { FeaturesComponentNgFactory as FeaturesComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<app-page-title [pageTitle]=\"pageTitle\"></app-page-title>\n<main class=\"page-main\">\n  <router-outlet (activate)=\"onActivate($event)\" (deactivate)=\"onDeactivate($event)\"></router-outlet>\n</main>\n","import { Component, OnInit, HostListener } from '@angular/core';\nimport { ComponentInterationService } from './../../core/services/component-interation.service';\nimport { hostElement } from '@angular/core/src/render3/instructions';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  pageTitle = {\n    hideTitle: true\n  };\n\n  abc = 12;\n\n  birthday = new Date(1988, 12, 15);\n\n  style = {'color': 'red', 'background': '#000'};\n\n\n  inputVal = 1;\n\n  isActive = 100;\n\n  obj: any;\n\n  // @HostBinding('class.valid') isValid;\n\n  constructor(\n    private _interator: ComponentInterationService\n  ) { }\n\n  ngOnInit() {\n    this.obj = {name: 'dong'};\n  }\n\n  // @HostListener('click', ['$event'])\n  // click(e) {\n  //   console.log(e);\n  //   this.isValid = !this.isValid;\n  // }\n\n  openDlg() {\n    this._interator.send(true);\n  }\n\n  styleN(): object {\n    return this.style;\n  }\n\n  inputKeyup(event: any): void {\n    console.log(event.target.value);\n  }\n\n  toggle(event: any): void {\n    console.log(event.target.value);\n  }\n\n  getContentFromChild(data: any) {\n    console.log(data);\n  }\n\n  emitForDetail(data) {\n    this.inputVal = data;\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComponentInterationService {\n\n  private source = new Subject<any>();\n  $getSource = this.source.asObservable();\n\n  send(data: any) {\n    this.source.next(data);\n  }\n}\n","import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ComponentInterationService {\n    constructor() {\n        this.source = new Subject();\n        this.$getSource = this.source.asObservable();\n    }\n    send(data) {\n        this.source.next(data);\n    }\n}\nComponentInterationService.ngInjectableDef = i0.defineInjectable({ factory: function ComponentInterationService_Factory() { return new ComponentInterationService(); }, token: ComponentInterationService, providedIn: \"root\" });\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./home.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./home.component\";\nimport * as i5 from \"../../core/services/component-interation.service\";\nvar styles_HomeComponent = [i0.styles];\nvar RenderType_HomeComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_HomeComponent, data: {} });\nexport { RenderType_HomeComponent as RenderType_HomeComponent };\nexport function View_HomeComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 12, \"section\", [[\"class\", \"section-banner\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 0, \"img\", [[\"alt\", \"\"], [\"src\", \"./assets/slider1.jpg\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 10, \"div\", [[\"class\", \"caption\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 9, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"We are here to help you\"])), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Welcome to Angular Courses\"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Lorem ipsum dolor sit amet consectetur, adipisicing elit.\"])), (_l()(), i1.ɵeld(10, 0, null, null, 2, \"a\", [[\"routerLink\", \"/auth/register\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 11).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(11, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Register now\"])), (_l()(), i1.ɵeld(13, 0, null, null, 11, \"section\", [[\"class\", \"section-about\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(14, 0, null, null, 10, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(15, 0, null, null, 9, \"div\", [[\"class\", \"row align-items-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(16, 0, null, null, 6, \"div\", [[\"class\", \"col-md-7\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(17, 0, null, null, 1, \"h5\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"About something\"])), (_l()(), i1.ɵeld(19, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Welcome To Readycue Is A Specialized Business Consulting\"])), (_l()(), i1.ɵeld(21, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Dolorum sed ipsa placeat nisi eius, sint distinctio eligendi eveniet, quaerat doloribus neque modi similique perferendis nam, vero rem blanditiis libero quos?\"])), (_l()(), i1.ɵeld(23, 0, null, null, 1, \"div\", [[\"class\", \"col-md-5\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(24, 0, null, null, 0, \"img\", [[\"alt\", \"\"], [\"src\", \"./assets/section-1.png\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(25, 0, null, null, 26, \"section\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(26, 0, null, null, 25, \"div\", [[\"class\", \"container-fluid\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(27, 0, null, null, 24, \"div\", [[\"class\", \"row course-banner-list\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(28, 0, null, null, 7, \"div\", [[\"class\", \"col-md-4 p-0 item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(29, 0, null, null, 0, \"div\", [[\"class\", \"img-bg\"], [\"style\", \"background-image: url('./assets/slider1.jpg')\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(30, 0, null, null, 5, \"div\", [[\"class\", \"caption\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(31, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Component\"])), (_l()(), i1.ɵeld(33, 0, null, null, 2, \"a\", [[\"routerLink\", \"/auth/register\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 34).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(34, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Register now\"])), (_l()(), i1.ɵeld(36, 0, null, null, 7, \"div\", [[\"class\", \"col-md-4 p-0 item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(37, 0, null, null, 0, \"div\", [[\"class\", \"img-bg\"], [\"style\", \"background-image: url('./assets/slider2.jpg')\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(38, 0, null, null, 5, \"div\", [[\"class\", \"caption\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(39, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Directive\"])), (_l()(), i1.ɵeld(41, 0, null, null, 2, \"a\", [[\"routerLink\", \"/auth/register\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 42).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(42, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Register now\"])), (_l()(), i1.ɵeld(44, 0, null, null, 7, \"div\", [[\"class\", \"col-md-4 p-0 item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(45, 0, null, null, 0, \"div\", [[\"class\", \"img-bg\"], [\"style\", \"background-image: url('./assets/slider3.jpg')\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(46, 0, null, null, 5, \"div\", [[\"class\", \"caption\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(47, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Pipe\"])), (_l()(), i1.ɵeld(49, 0, null, null, 2, \"a\", [[\"routerLink\", \"/auth/register\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 50).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(50, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Register now\"])), (_l()(), i1.ɵeld(52, 0, null, null, 37, \"section\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(53, 0, null, null, 36, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(54, 0, null, null, 4, \"div\", [[\"class\", \"section-head\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(55, 0, null, null, 1, \"h2\", [[\"class\", \"section-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Events\"])), (_l()(), i1.ɵeld(57, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Lorem, ipsum dolor sit amet consectetur adipisicing elit.\"])), (_l()(), i1.ɵeld(59, 0, null, null, 30, \"ul\", [[\"class\", \"event-list row\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(60, 0, null, null, 9, \"li\", [[\"class\", \"event-item mb-5 col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(61, 0, null, null, 8, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(62, 0, null, null, 2, \"a\", [[\"routerLink\", \"/events/12\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 63).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(63, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵeld(64, 0, null, null, 0, \"div\", [[\"class\", \"img-bg\"], [\"style\", \"background-image: url('./assets/slider1.jpg')\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(65, 0, null, null, 4, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(66, 0, null, null, 1, \"h5\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Card title\"])), (_l()(), i1.ɵeld(68, 0, null, null, 1, \"p\", [[\"class\", \"card-text\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Some quick example text to build on the card title and make up the bulk of the card's content.\"])), (_l()(), i1.ɵeld(70, 0, null, null, 9, \"li\", [[\"class\", \"event-item mb-5 col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(71, 0, null, null, 8, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(72, 0, null, null, 2, \"a\", [[\"routerLink\", \"/events/14\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 73).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(73, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵeld(74, 0, null, null, 0, \"div\", [[\"class\", \"img-bg\"], [\"style\", \"background-image: url('./assets/slider2.jpg')\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(75, 0, null, null, 4, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(76, 0, null, null, 1, \"h5\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Card title\"])), (_l()(), i1.ɵeld(78, 0, null, null, 1, \"p\", [[\"class\", \"card-text\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Some quick example text to build on the card title and make up the bulk of the card's content.\"])), (_l()(), i1.ɵeld(80, 0, null, null, 9, \"li\", [[\"class\", \"event-item mb-5 col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(81, 0, null, null, 8, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(82, 0, null, null, 2, \"a\", [[\"routerLink\", \"/events/15\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 83).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(83, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵeld(84, 0, null, null, 0, \"div\", [[\"class\", \"img-bg\"], [\"style\", \"background-image: url('./assets/slider3.jpg')\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(85, 0, null, null, 4, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(86, 0, null, null, 1, \"h5\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Card title\"])), (_l()(), i1.ɵeld(88, 0, null, null, 1, \"p\", [[\"class\", \"card-text\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Some quick example text to build on the card title and make up the bulk of the card's content.\"]))], function (_ck, _v) { var currVal_2 = \"/auth/register\"; _ck(_v, 11, 0, currVal_2); var currVal_5 = \"/auth/register\"; _ck(_v, 34, 0, currVal_5); var currVal_8 = \"/auth/register\"; _ck(_v, 42, 0, currVal_8); var currVal_11 = \"/auth/register\"; _ck(_v, 50, 0, currVal_11); var currVal_14 = \"/events/12\"; _ck(_v, 63, 0, currVal_14); var currVal_17 = \"/events/14\"; _ck(_v, 73, 0, currVal_17); var currVal_20 = \"/events/15\"; _ck(_v, 83, 0, currVal_20); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 11).target; var currVal_1 = i1.ɵnov(_v, 11).href; _ck(_v, 10, 0, currVal_0, currVal_1); var currVal_3 = i1.ɵnov(_v, 34).target; var currVal_4 = i1.ɵnov(_v, 34).href; _ck(_v, 33, 0, currVal_3, currVal_4); var currVal_6 = i1.ɵnov(_v, 42).target; var currVal_7 = i1.ɵnov(_v, 42).href; _ck(_v, 41, 0, currVal_6, currVal_7); var currVal_9 = i1.ɵnov(_v, 50).target; var currVal_10 = i1.ɵnov(_v, 50).href; _ck(_v, 49, 0, currVal_9, currVal_10); var currVal_12 = i1.ɵnov(_v, 63).target; var currVal_13 = i1.ɵnov(_v, 63).href; _ck(_v, 62, 0, currVal_12, currVal_13); var currVal_15 = i1.ɵnov(_v, 73).target; var currVal_16 = i1.ɵnov(_v, 73).href; _ck(_v, 72, 0, currVal_15, currVal_16); var currVal_18 = i1.ɵnov(_v, 83).target; var currVal_19 = i1.ɵnov(_v, 83).href; _ck(_v, 82, 0, currVal_18, currVal_19); }); }\nexport function View_HomeComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-home\", [], null, null, null, View_HomeComponent_0, RenderType_HomeComponent)), i1.ɵdid(1, 114688, null, 0, i4.HomeComponent, [i5.ComponentInterationService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar HomeComponentNgFactory = i1.ɵccf(\"app-home\", i4.HomeComponent, View_HomeComponent_Host_0, {}, {}, []);\nexport { HomeComponentNgFactory as HomeComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".tab-content[_ngcontent-%COMP%]{border:1px solid #dee2e6;border-top:0;padding:20px 16px}.course-banner-list[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%]{position:relative;overflow:hidden}.course-banner-list[_ngcontent-%COMP%]   .item[_ngcontent-%COMP%]:hover   .img-bg[_ngcontent-%COMP%]{transform:scale(1.1)}.course-banner-list[_ngcontent-%COMP%]   .caption[_ngcontent-%COMP%]{position:absolute;top:0;left:0;right:0;bottom:0;background:rgba(0,0,0,.2);color:#fff;padding:8%;display:flex;flex-direction:column;justify-content:space-between}.course-banner-list[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{align-self:baseline;color:#fff;text-transform:uppercase;font-size:11px;border-bottom:1px solid #fff;padding-bottom:4px}a[_ngcontent-%COMP%]{text-decoration:none}.section-banner[_ngcontent-%COMP%]{position:relative}.section-banner[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;display:block}.section-banner[_ngcontent-%COMP%]   .caption[_ngcontent-%COMP%]{position:absolute;top:50%;left:0;right:0;transform:translateY(-50%) scale(.999);z-index:12;color:#fff}.section-banner[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{font-size:50px;max-width:500px}.section-banner[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{text-transform:uppercase;font-size:20px;display:block;margin-bottom:6px;font-weight:500;letter-spacing:.05em}.section-banner[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#d8d8d8;font-weight:300}.section-banner[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-transform:uppercase;color:#fff;border-bottom:1px solid #fff;padding-bottom:5px;font-size:13px;margin-top:40px;display:inline-block}.section-about[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{color:#3470ac}.section-gray[_ngcontent-%COMP%]{padding:70px 0;background:#f8f9fa}.ul-reset-default[_ngcontent-%COMP%]{list-style-type:none;padding:0}.section-title[_ngcontent-%COMP%]{font-size:42px;position:relative}.section-title[_ngcontent-%COMP%]::after{border-bottom:3px solid #3470ac;width:55px;bottom:0;margin:5px auto 10px;content:\\\"\\\";display:block}.section-head[_ngcontent-%COMP%]{text-align:center;margin-bottom:46px}\"];\nexport { styles as styles };\n","<!-- <div class=\"container\">\n\n  <h2>Tab content</h2>\n  <ul class=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"inputVal === 1\" (click)=\"emitForDetail(1)\">Home</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"inputVal === 2\" (click)=\"emitForDetail(2)\">Profile</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"inputVal === 3\" (click)=\"emitForDetail(3)\">Contact</a>\n    </li>\n  </ul>\n  <div class=\"tab-content\" id=\"myTabContent\">\n    <app-home-child [getContent]=\"inputVal\" (shared)=\"getContentFromChild($event)\"></app-home-child>\n  </div>\n  \n</div> -->\n<section class=\"section-banner\">\n  <img src=\"./assets/slider1.jpg\" alt=\"\">\n  <div class=\"caption\">\n    <div class=\"container\">\n      <span>We are here to help you</span>\n      <h2>Welcome to Angular Courses</h2>\n      <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit.</p>\n      <a routerLink=\"/auth/register\">Register now</a>\n    </div>\n  </div>\n</section>\n\n<section class=\"section-about\">\n  <div class=\"container\">\n    <div class=\"row align-items-center\">\n      <div class=\"col-md-7\">\n        <h5>About something</h5>\n        <h2>Welcome To Readycue Is A Specialized Business Consulting</h2>\n        <p>Lorem ipsum dolor, sit amet consectetur adipisicing elit. Dolorum sed ipsa placeat nisi eius, sint distinctio eligendi eveniet, quaerat doloribus neque modi similique perferendis nam, vero rem blanditiis libero quos?</p>\n      </div>\n      <div class=\"col-md-5\">\n        <img src=\"./assets/section-1.png\" alt=\"\">\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div class=\"container-fluid\">\n    <div class=\"row course-banner-list\">\n      <div class=\"col-md-4 p-0 item\">\n        <div class=\"img-bg\" style=\"background-image: url('./assets/slider1.jpg')\"></div>\n        <div class=\"caption\">\n          <h3>Component</h3>\n          <a routerLink=\"/auth/register\">Register now</a>\n        </div>\n      </div>\n      <div class=\"col-md-4 p-0 item\">\n        <div class=\"img-bg\" style=\"background-image: url('./assets/slider2.jpg')\"></div>\n        <div class=\"caption\">\n          <h3>Directive</h3>\n          <a routerLink=\"/auth/register\">Register now</a>\n        </div>\n      </div>\n      <div class=\"col-md-4 p-0 item\">\n        <div class=\"img-bg\" style=\"background-image: url('./assets/slider3.jpg')\"></div>\n        <div class=\"caption\">\n          <h3>Pipe</h3>\n          <a routerLink=\"/auth/register\">Register now</a>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section>\n  <div class=\"container\">\n    <div class=\"section-head\">\n      <h2 class=\"section-title\">Events</h2>\n      <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit.</p>\n    </div>\n    <ul class=\"event-list row\">\n      <li class=\"event-item mb-5 col-md-4\">\n        <div class=\"card\">\n          <a routerLink=\"/events/12\"><div class=\"img-bg\" style=\"background-image: url('./assets/slider1.jpg')\"></div></a>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Card title</h5>\n            <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n          </div>\n        </div>\n      </li>\n      <li class=\"event-item mb-5 col-md-4\">\n        <div class=\"card\">\n          <a routerLink=\"/events/14\"><div class=\"img-bg\" style=\"background-image: url('./assets/slider2.jpg')\"></div></a>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Card title</h5>\n            <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n          </div>\n        </div>\n      </li>\n      <li class=\"event-item mb-5 col-md-4\">\n        <div class=\"card\">\n          <a routerLink=\"/events/15\"><div class=\"img-bg\" style=\"background-image: url('./assets/slider3.jpg')\"></div></a>\n          <div class=\"card-body\">\n            <h5 class=\"card-title\">Card title</h5>\n            <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n</section>\n\n<!-- <section class=\"section section-gray\">\n  <div class=\"container\">\n    <h2 class=\"section-title\">Latest news</h2>\n    <ul class=\"news-list ul-reset-default row\">\n      <li class=\"news-item col-md-4\">\n        <div class=\"img-bg\" style=\"background-image: url('./assets/slider1.jpg')\"></div>\n        <div class=\"info\">\n          <time>\n            09<br>\n            Jul\n          </time>\n          <div class=\"info-inner\">\n            <h2>Hot news for today</h2>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Asperiores, molestias atque! Nesciunt nobis et est quaerat voluptate!</p>\n          </div>\n        </div>\n      </li>\n      <li class=\"news-item col-md-4\">\n        <div class=\"img-bg\" style=\"background-image: url('./assets/slider1.jpg')\"></div>\n        <div class=\"info\">\n          <time>\n            09<br>\n            Jul\n          </time>\n          <div class=\"info-inner\">\n            <h2>Hot news for today</h2>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Asperiores, molestias atque! Nesciunt nobis et est quaerat voluptate!</p>\n          </div>\n        </div>\n      </li>\n      <li class=\"news-item col-md-4\">\n        <div class=\"img-bg\" style=\"background-image: url('./assets/slider1.jpg')\"></div>\n        <div class=\"info\">\n          <time>\n            09<br>\n            Jul\n          </time>\n          <div class=\"info-inner\">\n            <h2>Hot news for today</h2>\n            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Asperiores, molestias atque! Nesciunt nobis et est quaerat voluptate!</p>\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n</section> -->\n","import { Component, OnInit, Input, OnChanges, SimpleChanges, Output, EventEmitter, OnDestroy } from '@angular/core';\nimport { ComponentInterationService } from './../../../core/services/component-interation.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit, OnChanges, OnDestroy {\n\n  public toogleDlg = false;\n  sub = new Subscription();\n\n  @Output() afterClose = new EventEmitter();\n\n  @Input('toggle')\n  set toggle(event: boolean) {\n    this.toogleDlg = event;\n  }\n  get toogle() {\n    return this.toogleDlg;\n  }\n\n  constructor(\n    private _interactor: ComponentInterationService\n  ) { }\n\n  ngOnInit() {\n    this.sub.add(this._interactor.$getSource.subscribe((data) => {\n      this.toogleDlg = data;\n      console.log(data);\n    }));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // this.toggle = true;\n  }\n\n  close(data: any) {\n    this.toogleDlg = false;\n    this.afterClose.emit(data);\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./dialog.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./dialog.component\";\nimport * as i3 from \"../../../core/services/component-interation.service\";\nvar styles_DialogComponent = [i0.styles];\nvar RenderType_DialogComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_DialogComponent, data: {} });\nexport { RenderType_DialogComponent as RenderType_DialogComponent };\nexport function View_DialogComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 15, \"div\", [[\"class\", \"modal fade\"], [\"role\", \"dialog\"], [\"tabindex\", \"-1\"]], [[2, \"show\", null]], null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 14, \"div\", [[\"class\", \"modal-dialog\"], [\"role\", \"document\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 13, \"div\", [[\"class\", \"modal-content\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 5, \"div\", [[\"class\", \"modal-header\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 1, \"h5\", [[\"class\", \"modal-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Modal title\"])), (_l()(), i1.ɵeld(6, 0, null, null, 2, \"button\", [[\"aria-label\", \"Close\"], [\"class\", \"close\"], [\"data-dismiss\", \"modal\"], [\"type\", \"button\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.close(false) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵeld(7, 0, null, null, 1, \"span\", [[\"aria-hidden\", \"true\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u00D7\"])), (_l()(), i1.ɵeld(9, 0, null, null, 1, \"div\", [[\"class\", \"modal-body\"]], null, null, null, null, null)), i1.ɵncd(null, 0), (_l()(), i1.ɵeld(11, 0, null, null, 4, \"div\", [[\"class\", \"modal-footer\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(12, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-secondary\"], [\"data-dismiss\", \"modal\"], [\"type\", \"button\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.close(true) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(-1, null, [\"Ok\"])), (_l()(), i1.ɵeld(14, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary\"], [\"type\", \"button\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.close(false) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(-1, null, [\"Cancle\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.toogleDlg; _ck(_v, 0, 0, currVal_0); }); }\nexport function View_DialogComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-dialog\", [], null, null, null, View_DialogComponent_0, RenderType_DialogComponent)), i1.ɵdid(1, 770048, null, 0, i2.DialogComponent, [i3.ComponentInterationService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar DialogComponentNgFactory = i1.ɵccf(\"app-dialog\", i2.DialogComponent, View_DialogComponent_Host_0, { toggle: \"toggle\" }, { afterClose: \"afterClose\" }, [\"*\"]);\nexport { DialogComponentNgFactory as DialogComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" [class.show]=\"toogleDlg\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Modal title</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" (click)=\"close(false)\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <ng-content></ng-content>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"close(true)\">Ok</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"close(false)\">Cancle</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Dir } from './../directive/directive.component';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.scss']\n})\nexport class DetailComponent implements OnInit {\n\n  @Input() getDetail: Dir;\n  @Output() reverse = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  emit(): void {\n    this.reverse.emit('alo');\n  }\n\n  getNumber(): number {\n    return 2;\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./detail.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./detail.component\";\nvar styles_DetailComponent = [i0.styles];\nvar RenderType_DetailComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_DetailComponent, data: {} });\nexport { RenderType_DetailComponent as RenderType_DetailComponent };\nfunction View_DetailComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, null, null, null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"h1\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.emit() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(2, null, [\"\", \"\"])), (_l()(), i1.ɵeld(3, 0, null, null, 1, \"p\", [], [[8, \"className\", 0]], null, null, null, null)), (_l()(), i1.ɵted(4, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.getDetail.title; _ck(_v, 2, 0, currVal_0); var currVal_1 = _co.getNumber(); _ck(_v, 3, 0, currVal_1); var currVal_2 = _co.getDetail.desc; _ck(_v, 4, 0, currVal_2); }); }\nexport function View_DetailComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵand(16777216, null, null, 1, null, View_DetailComponent_1)), i1.ɵdid(1, 16384, null, 0, i2.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵted(2, null, [\"\\n\", \"\\n\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.getDetail; _ck(_v, 1, 0, currVal_0); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = ((1 + 1) + _co.getNumber()); _ck(_v, 2, 0, currVal_1); }); }\nexport function View_DetailComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-detail\", [], null, null, null, View_DetailComponent_0, RenderType_DetailComponent)), i1.ɵdid(1, 114688, null, 0, i3.DetailComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar DetailComponentNgFactory = i1.ɵccf(\"app-detail\", i3.DetailComponent, View_DetailComponent_Host_0, { getDetail: \"getDetail\" }, { reverse: \"reverse\" }, []);\nexport { DetailComponentNgFactory as DetailComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<ng-container *ngIf=\"getDetail\">\n  <h1 (click)=\"emit()\">{{getDetail.title}}</h1>\n  <p [class]=\"getNumber()\">{{getDetail.desc}}</p>\n</ng-container>\n\n\n<!-- Interpolation -->\n{{ 1 + 1 + getNumber() }}\n","import { Component, OnInit, ChangeDetectorRef, ViewChild, Input } from '@angular/core';\nimport { DialogComponent } from './../../shared/components/dialog/dialog.component';\nimport { LoggerService } from 'src/app/core/services/logger.service';\n\nexport class Dir {\n  title: string;\n  desc: string;\n}\n\nexport interface Dird {\n  title: string;\n  name: string;\n}\n\n@Component({\n  selector: 'app-directive',\n  templateUrl: './directive.component.html',\n  styleUrls: ['./directive.component.scss']\n})\nexport class DirectiveComponent implements OnInit {\n\n  pageTitle = {\n    title: 'Directive'\n  };\n\n  // @ViewChild('dlg') dlg: DialogComponent;\n\n  toggleDlg = false;\n\n  details: Dir;\n\n  demoNgModel = '1234';\n\n  directiveList: Dir[] = [\n    {\n      title: 'Directive 1',\n      desc: 'Lorem in dolor'\n    },\n    {\n      title: 'Directive 2',\n      desc: 'Lorem in dinlor'\n    },\n    {\n      title: 'Directive 3',\n      desc: 'Lorem in donglor'\n    }\n  ];\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private logger: LoggerService\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.directiveList.map((v) => {\n      return v.desc += ' abc';\n    });\n\n    this.logger.warning('Warning');\n    this.logger.err('Err');\n    this.logger.log('Console log');\n  }\n\n  openDlg() {\n    this.toggleDlg = true;\n  }\n\n  close() {\n    this.toggleDlg = false;\n  }\n\n  detail(data: Dir) {\n    this.details = data;\n  }\n\n  getEmit(zoo) {\n    // console.log(zoo);\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n\n  constructor() { }\n\n  log(data: any) {\n    console.log(data);\n  }\n\n  warning(data: any) {\n    console.warn(data);\n  }\n\n  err(data: any) {\n    console.error(data);\n  }\n\n}\n","import * as i0 from \"@angular/core\";\nexport class LoggerService {\n    constructor() { }\n    log(data) {\n        console.log(data);\n    }\n    warning(data) {\n        console.warn(data);\n    }\n    err(data) {\n        console.error(data);\n    }\n}\nLoggerService.ngInjectableDef = i0.defineInjectable({ factory: function LoggerService_Factory() { return new LoggerService(); }, token: LoggerService, providedIn: \"root\" });\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./directive.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../shared/components/dialog/dialog.component.ngfactory\";\nimport * as i3 from \"../../shared/components/dialog/dialog.component\";\nimport * as i4 from \"../../core/services/component-interation.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../detail/detail.component.ngfactory\";\nimport * as i7 from \"../detail/detail.component\";\nimport * as i8 from \"./directive.component\";\nimport * as i9 from \"../../core/services/logger.service\";\nvar styles_DirectiveComponent = [i0.styles];\nvar RenderType_DirectiveComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_DirectiveComponent, data: {} });\nexport { RenderType_DirectiveComponent as RenderType_DirectiveComponent };\nfunction View_DirectiveComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"li\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.detail(_v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(2, null, [\"\", \"\"])), (_l()(), i1.ɵeld(3, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(4, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = _v.context.$implicit.title; _ck(_v, 2, 0, currVal_0); var currVal_1 = _v.context.$implicit.desc; _ck(_v, 4, 0, currVal_1); }); }\nexport function View_DirectiveComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"div\", [[\"class\", \"page-title\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 3, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" directive works! \"])), (_l()(), i1.ɵeld(3, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary\"], [\"type\", \"button\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.openDlg() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(-1, null, [\"Open dialog\"])), (_l()(), i1.ɵeld(5, 0, null, null, 8, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 2, \"app-dialog\", [], null, [[null, \"afterClose\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"afterClose\" === en)) {\n        var pd_0 = (_co.close() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_DialogComponent_0, i2.RenderType_DialogComponent)), i1.ɵdid(7, 770048, null, 0, i3.DialogComponent, [i4.ComponentInterationService], { toggle: [0, \"toggle\"] }, { afterClose: \"afterClose\" }), (_l()(), i1.ɵted(-1, 0, [\" Alo \"])), (_l()(), i1.ɵeld(9, 0, null, null, 2, \"ul\", [], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_DirectiveComponent_1)), i1.ɵdid(11, 278528, null, 0, i5.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i1.ɵeld(12, 0, null, null, 1, \"app-detail\", [], null, [[null, \"reverse\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"reverse\" === en)) {\n        var pd_0 = (_co.getEmit($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i6.View_DetailComponent_0, i6.RenderType_DetailComponent)), i1.ɵdid(13, 114688, null, 0, i7.DetailComponent, [], { getDetail: [0, \"getDetail\"] }, { reverse: \"reverse\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.toggleDlg; _ck(_v, 7, 0, currVal_0); var currVal_1 = _co.directiveList; _ck(_v, 11, 0, currVal_1); var currVal_2 = _co.details; _ck(_v, 13, 0, currVal_2); }, null); }\nexport function View_DirectiveComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-directive\", [], null, null, null, View_DirectiveComponent_0, RenderType_DirectiveComponent)), i1.ɵdid(1, 114688, null, 0, i8.DirectiveComponent, [i1.ChangeDetectorRef, i9.LoggerService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar DirectiveComponentNgFactory = i1.ɵccf(\"app-directive\", i8.DirectiveComponent, View_DirectiveComponent_Host_0, {}, {}, []);\nexport { DirectiveComponentNgFactory as DirectiveComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"page-title\">\n  <div class=\"container\">\n    directive works!\n    <button class=\"btn btn-primary\" type=\"button\" (click)=\"openDlg()\">Open dialog</button>\n  </div>\n</div>\n<div class=\"container\">\n  <app-dialog [toggle]=\"toggleDlg\" (afterClose)=\"close()\">\n    Alo\n  </app-dialog>\n  \n  <ul>\n    <li *ngFor=\"let dir of directiveList\" (click)=\"detail(dir)\">\n      <h2>{{dir.title}}</h2>\n      <p>{{dir.desc}}</p>\n    </li>\n  </ul>\n  <app-detail [getDetail]=\"details\" (reverse)=\"getEmit($event)\"></app-detail>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PageTitle } from './../../core/interfaces/interface-common';\nimport { LoggerService } from './../../core/services/logger.service';\nimport { ComponentInterationService } from './../../core/services/component-interation.service';\nimport { ApiService, ENDPOINT } from './../../core/services/api.service';\nimport { logder } from './../../core/functions/func-utils';\n\n@Component({\n  selector: 'app-events',\n  templateUrl: './events.component.html',\n  styleUrls: ['./events.component.scss']\n})\nexport class EventsComponent implements OnInit {\n\n  pageTitle = {\n    title: 'Events'\n  };\n\n  events$: any;\n\n  constructor(\n    private logger: LoggerService,\n    private interaction: ComponentInterationService,\n    private api: ApiService\n  ) { }\n\n  ngOnInit() {\n    this.events$ = this.api.getAssets('assets/events.json');\n\n    this.logger.warning('Events');\n\n    logder('i love you');\n  }\n\n}\n","export function logder(val: string) {\n  console.log(val);\n}\n","/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n *\n * @abstract\n */\nclass HttpHandler {\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n *\n * @abstract\n */\nclass HttpBackend {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n *\n */\nclass HttpHeaders {\n    /**\n     * @param {?=} headers\n     */\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach(line => {\n                    /** @type {?} */\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        /** @type {?} */\n                        const name = line.slice(0, index);\n                        /** @type {?} */\n                        const key = name.toLowerCase();\n                        /** @type {?} */\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            /** @type {?} */ ((this.headers.get(key))).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach(name => {\n                    /** @type {?} */\n                    let values = headers[name];\n                    /** @type {?} */\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    get(name) {\n        this.init();\n        /** @type {?} */\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(update => this.applyUpdate(update));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach(key => {\n            this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    }\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    applyUpdate(update) {\n        /** @type {?} */\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                /** @type {?} */\n                let value = /** @type {?} */ ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                /** @type {?} */\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                /** @type {?} */\n                const toDelete = /** @type {?} */ (update.value);\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    /** @type {?} */\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(value => toDelete.indexOf(value) === -1);\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(key => fn(/** @type {?} */ ((this.normalizedNames.get(key))), /** @type {?} */ ((this.headers.get(key)))));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n *\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    encodeKey(key) { return standardEncoding(key); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    encodeValue(value) { return standardEncoding(value); }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    decodeKey(key) { return decodeURIComponent(key); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    decodeValue(value) { return decodeURIComponent(value); }\n}\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    /** @type {?} */\n    const map$$1 = new Map();\n    if (rawParams.length > 0) {\n        /** @type {?} */\n        const params = rawParams.split('&');\n        params.forEach((param) => {\n            /** @type {?} */\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            /** @type {?} */\n            const list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable - all mutation operations return a new instance.\n *\n *\n */\nclass HttpParams {\n    /**\n     * @param {?=} options\n     */\n    constructor(options = /** @type {?} */ ({})) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(key => {\n                /** @type {?} */\n                const value = (/** @type {?} */ (options.fromObject))[key]; /** @type {?} */\n                ((this.map)).set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    has(param) {\n        this.init();\n        return /** @type {?} */ ((this.map)).has(param);\n    }\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    get(param) {\n        this.init();\n        /** @type {?} */\n        const res = /** @type {?} */ ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    getAll(param) {\n        this.init();\n        return /** @type {?} */ ((this.map)).get(param) || null;\n    }\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    keys() {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    }\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    append(param, value) { return this.clone({ param, value, op: 'a' }); }\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    set(param, value) { return this.clone({ param, value, op: 's' }); }\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    delete(param, value) { return this.clone({ param, value, op: 'd' }); }\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map(key => {\n            /** @type {?} */\n            const eKey = this.encoder.encodeKey(key);\n            return /** @type {?} */ ((/** @type {?} */ ((this.map)).get(key))).map(value => eKey + '=' + this.encoder.encodeValue(value)).join('&');\n        })\n            .join('&');\n    }\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpParams(/** @type {?} */ ({ encoder: this.encoder }));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @return {?}\n     */\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(key => /** @type {?} */ ((this.map)).set(key, /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((this.cloneFrom)).map)).get(key))))); /** @type {?} */\n            ((this.updates)).forEach(update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        /** @type {?} */\n                        const base = (update.op === 'a' ? /** @type {?} */ ((this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            /** @type {?} */\n                            let base = /** @type {?} */ ((this.map)).get(update.param) || [];\n                            /** @type {?} */\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                /** @type {?} */ ((this.map)).set(update.param, base);\n                            }\n                            else {\n                                /** @type {?} */ ((this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            /** @type {?} */ ((this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n *\n * @template T\n */\nclass HttpRequest {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        /** @type {?} */\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? /** @type {?} */ (third) : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = /** @type {?} */ (third);\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            /** @type {?} */\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                /** @type {?} */\n                const qIdx = url.indexOf('?');\n                /** @type {?} */\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return (/** @type {?} */ (this.body)).toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        /** @type {?} */\n        const method = update.method || this.method;\n        /** @type {?} */\n        const url = update.url || this.url;\n        /** @type {?} */\n        const responseType = update.responseType || this.responseType;\n        /** @type {?} */\n        const body = (update.body !== undefined) ? update.body : this.body;\n        /** @type {?} */\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        /** @type {?} */\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        /** @type {?} */\n        let headers = update.headers || this.headers;\n        /** @type {?} */\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((headers, name) => headers.set(name, /** @type {?} */ ((update.setHeaders))[name]), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((params, param) => params.set(param, /** @type {?} */ ((update.setParams))[param]), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params, headers, reportProgress, responseType, withCredentials,\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HttpEventType = {\n    /**\n       * The request was sent out over the wire.\n       */\n    Sent: 0,\n    /**\n       * An upload progress event was received.\n       */\n    UploadProgress: 1,\n    /**\n       * The response status code and headers were received.\n       */\n    ResponseHeader: 2,\n    /**\n       * A download progress event was received.\n       */\n    DownloadProgress: 3,\n    /**\n       * The full response including the body was received.\n       */\n    Response: 4,\n    /**\n       * A custom event from an interceptor or a backend.\n       */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = 'Sent';\nHttpEventType[HttpEventType.UploadProgress] = 'UploadProgress';\nHttpEventType[HttpEventType.ResponseHeader] = 'ResponseHeader';\nHttpEventType[HttpEventType.DownloadProgress] = 'DownloadProgress';\nHttpEventType[HttpEventType.Response] = 'Response';\nHttpEventType[HttpEventType.User] = 'User';\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n *\n * @abstract\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n *\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n *\n * @template T\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n *\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    /**\n     * @param {?} init\n     */\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message =\n                `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n *\n */\nclass HttpClient {\n    /**\n     * @param {?} handler\n     */\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    request(first, url, options = {}) {\n        /** @type {?} */\n        let req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = /** @type {?} */ (first);\n        }\n        else {\n            /** @type {?} */\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            /** @type {?} */\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams(/** @type {?} */ ({ fromObject: options.params }));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        /** @type {?} */\n        const events$ = of(req).pipe(concatMap((req) => this.handler.handle(req)));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        /** @type {?} */\n        const res$ = /** @type {?} */ (events$.pipe(filter((event) => event instanceof HttpResponse)));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        }));\n                    case 'blob':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        }));\n                    case 'text':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        }));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((res) => res.body));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    }\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, /** @type {?} */ (options));\n    }\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    }\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    }\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PUT request to be executed on the server. See the individual overloads for\n     * details of `put()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\n/** *\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n *\n  @type {?} */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextRequestId = 0;\n/** @type {?} */\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n/** @type {?} */\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\n/** @type {?} */\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n * @abstract\n */\nclass JsonpCallbackContext {\n}\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n *\n */\nclass JsonpClientBackend {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    nextCallback() { return `ng_jsonp_callback_${nextRequestId++}`; }\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((observer) => {\n            /** @type {?} */\n            const callback = this.nextCallback();\n            /** @type {?} */\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            /** @type {?} */\n            const node = this.document.createElement('script');\n            node.src = url;\n            /** @type {?} */\n            let body = null;\n            /** @type {?} */\n            let finished = false;\n            /** @type {?} */\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            /** @type {?} */\n            const cleanup = () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            };\n            /** @type {?} */\n            const onLoad = (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK', url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            };\n            /** @type {?} */\n            const onError = (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error', url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    }\n}\nJsonpClientBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n *\n */\nclass JsonpInterceptor {\n    /**\n     * @param {?} jsonp\n     */\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n *\n * @abstract\n */\nclass XhrFactory {\n}\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    build() { return /** @type {?} */ ((new XMLHttpRequest())); }\n}\nBrowserXhr.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nBrowserXhr.ctorParameters = () => [];\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n *\n */\nclass HttpXhrBackend {\n    /**\n     * @param {?} xhrFactory\n     */\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((observer) => {\n            /** @type {?} */\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                /** @type {?} */\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                /** @type {?} */\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = /** @type {?} */ (((responseType !== 'json') ? responseType : 'text'));\n            }\n            /** @type {?} */\n            const reqBody = req.serializeBody();\n            /** @type {?} */\n            let headerResponse = null;\n            /** @type {?} */\n            const partialFromXhr = () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                /** @type {?} */\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                /** @type {?} */\n                const statusText = xhr.statusText || 'OK';\n                /** @type {?} */\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                /** @type {?} */\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            };\n            /** @type {?} */\n            const onLoad = () => {\n                let { headers, status, statusText, url } = partialFromXhr();\n                /** @type {?} */\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                /** @type {?} */\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    /** @type {?} */\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = /** @type {?} */ ({ error, text: body });\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            /** @type {?} */\n            const onError = (error) => {\n                /** @type {?} */\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            /** @type {?} */\n            let sentHeaders = false;\n            /** @type {?} */\n            const onDownProgress = (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                /** @type {?} */\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            /** @type {?} */\n            const onUpProgress = (event) => {\n                /** @type {?} */\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    }\n}\nHttpXhrBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\n/** @type {?} */\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n *\n * @abstract\n */\nclass HttpXsrfTokenExtractor {\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        /** @type {?} */\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        /** @type {?} */\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        /** @type {?} */\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    /**\n     * @param {?} backend\n     * @param {?} injector\n     */\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        if (this.chain === null) {\n            /** @type {?} */\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n *\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param {?=} options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     * @return {?}\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n *\n */\nclass HttpClientModule {\n}\nHttpClientModule.decorators = [\n    { type: NgModule, args: [{\n                /**\n                   * Optional configuration for XSRF protection.\n                   */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                /**\n                   * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                   * with supporting services for HTTP communications.\n                   */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n *\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpInterceptingHandler as ɵHttpInterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor };\n//# sourceMappingURL=http.js.map\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { environment } from './../../../environments/environment';\nimport { HttpClient, HttpErrorResponse, HttpResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { LoggerService } from './logger.service';\n\nexport const ENDPOINT = {\n  users: 'users',\n  register: 'register',\n};\nexport const API_DOMAIN = environment.api;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': 'my-auth-token'\n    })\n  };\n\n  constructor(\n    private http: HttpClient,\n    private logger: LoggerService\n  ) {}\n\n  /**\n   * Get api\n   * @param url : path from ENDPOINT\n   * @param params : ex: {key: value}\n   */\n  get(url: string, params?: any): Observable<any> {\n    return this.http.get(API_DOMAIN + url, {\n      params: params\n    }).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Post api\n   * @param url : path from ENDPOINT\n   * @param params : ex: {key: value}\n   */\n  post(url: string, params?: any): Observable<any> {\n    return this.http.post(API_DOMAIN + url, params).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Put api\n   * @param url : path from ENDPOINT\n   * @param params : ex: {key: value}\n   */\n  put(url: string, params?: any): Observable<any> {\n    return this.http.put(API_DOMAIN + url, params).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Get file from assets folder\n   * @param url : path from assets folder\n   */\n  getAssets(url: string): Observable<any> {\n    return this.http.get(url).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Get api with full response\n   * include: headers, body, ...\n   * @param url : string\n   */\n  getConfigResponse(url: string): Observable<HttpResponse<any>> {\n    return this.http.get(API_DOMAIN + url, {observe: 'response'}).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Handle error from Response\n   * @param error: any\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  }\n}\n","export const environment = {\n  production: true,\n  api: 'https://reqres.in/prod/api/'\n};\n","import { environment } from './../../../environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { LoggerService } from './logger.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./logger.service\";\nexport const ENDPOINT = {\n    users: 'users',\n    register: 'register',\n};\nexport const API_DOMAIN = environment.api;\nexport class ApiService {\n    constructor(http, logger) {\n        this.http = http;\n        this.logger = logger;\n        this.httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json',\n                'Authorization': 'my-auth-token'\n            })\n        };\n    }\n    /**\n     * Get api\n     * @param url : path from ENDPOINT\n     * @param params : ex: {key: value}\n     */\n    get(url, params) {\n        return this.http.get(API_DOMAIN + url, {\n            params: params\n        }).pipe(catchError(this.handleError));\n    }\n    /**\n     * Post api\n     * @param url : path from ENDPOINT\n     * @param params : ex: {key: value}\n     */\n    post(url, params) {\n        return this.http.post(API_DOMAIN + url, params).pipe(catchError(this.handleError));\n    }\n    /**\n     * Put api\n     * @param url : path from ENDPOINT\n     * @param params : ex: {key: value}\n     */\n    put(url, params) {\n        return this.http.put(API_DOMAIN + url, params).pipe(catchError(this.handleError));\n    }\n    /**\n     * Get file from assets folder\n     * @param url : path from assets folder\n     */\n    getAssets(url) {\n        return this.http.get(url).pipe(catchError(this.handleError));\n    }\n    /**\n     * Get api with full response\n     * include: headers, body, ...\n     * @param url : string\n     */\n    getConfigResponse(url) {\n        return this.http.get(API_DOMAIN + url, { observe: 'response' }).pipe(catchError(this.handleError));\n    }\n    /**\n     * Handle error from Response\n     * @param error: any\n     */\n    handleError(error) {\n        if (error.error instanceof ErrorEvent) {\n            // A client-side or network error occurred. Handle it accordingly.\n            console.error('An error occurred:', error.error.message);\n        }\n        else {\n            // The backend returned an unsuccessful response code.\n            // The response body may contain clues as to what went wrong,\n            console.error(`Backend returned code ${error.status}, ` +\n                `body was: ${error.error}`);\n        }\n        // return an observable with a user-facing error message\n        return throwError('Something bad happened; please try again later.');\n    }\n}\nApiService.ngInjectableDef = i0.defineInjectable({ factory: function ApiService_Factory() { return new ApiService(i0.inject(i1.HttpClient), i0.inject(i2.LoggerService)); }, token: ApiService, providedIn: \"root\" });\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./events.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./events.component\";\nimport * as i5 from \"../../core/services/logger.service\";\nimport * as i6 from \"../../core/services/component-interation.service\";\nimport * as i7 from \"../../core/services/api.service\";\nvar styles_EventsComponent = [i0.styles];\nvar RenderType_EventsComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_EventsComponent, data: {} });\nexport { RenderType_EventsComponent as RenderType_EventsComponent };\nfunction View_EventsComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 10, \"li\", [[\"class\", \"event-item mb-5 col-md-4\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 9, \"div\", [[\"class\", \"card\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 3, \"a\", [], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 3).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(3, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { queryParams: [0, \"queryParams\"], routerLink: [1, \"routerLink\"] }, null), i1.ɵpod(4, { page: 0, dong: 1 }), (_l()(), i1.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"img-bg\"], [\"style\", \"background-image: url('../../../assets/slider1.jpg')\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 4, \"div\", [[\"class\", \"card-body\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(7, 0, null, null, 1, \"h5\", [[\"class\", \"card-title\"]], null, null, null, null, null)), (_l()(), i1.ɵted(8, null, [\"\", \"\"])), (_l()(), i1.ɵeld(9, 0, null, null, 1, \"p\", [[\"class\", \"card-text\"]], null, null, null, null, null)), (_l()(), i1.ɵted(10, null, [\"\", \"\"]))], function (_ck, _v) { var currVal_2 = _ck(_v, 4, 0, 99, 22); var currVal_3 = i1.ɵinlineInterpolate(1, \"\", _v.context.$implicit.id, \"\"); _ck(_v, 3, 0, currVal_2, currVal_3); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 3).target; var currVal_1 = i1.ɵnov(_v, 3).href; _ck(_v, 2, 0, currVal_0, currVal_1); var currVal_4 = _v.context.$implicit.title; _ck(_v, 8, 0, currVal_4); var currVal_5 = _v.context.$implicit.desc; _ck(_v, 10, 0, currVal_5); }); }\nexport function View_EventsComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 3, \"ul\", [[\"class\", \"event-list row\"]], null, null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 2, null, View_EventsComponent_1)), i1.ɵdid(3, 278528, null, 0, i3.NgForOf, [i1.ViewContainerRef, i1.TemplateRef, i1.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), i1.ɵpid(131072, i3.AsyncPipe, [i1.ChangeDetectorRef]), (_l()(), i1.ɵeld(5, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i1.ɵdid(6, 212992, null, 0, i2.RouterOutlet, [i2.ChildrenOutletContexts, i1.ViewContainerRef, i1.ComponentFactoryResolver, [8, null], i1.ChangeDetectorRef], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = i1.ɵunv(_v, 3, 0, i1.ɵnov(_v, 4).transform(_co.events$)); _ck(_v, 3, 0, currVal_0); _ck(_v, 6, 0); }, null); }\nexport function View_EventsComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-events\", [], null, null, null, View_EventsComponent_0, RenderType_EventsComponent)), i1.ɵdid(1, 114688, null, 0, i4.EventsComponent, [i5.LoggerService, i6.ComponentInterationService, i7.ApiService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar EventsComponentNgFactory = i1.ɵccf(\"app-events\", i4.EventsComponent, View_EventsComponent_Host_0, {}, {}, []);\nexport { EventsComponentNgFactory as EventsComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  <ul class=\"event-list row\">\n    <li *ngFor=\"let event of events$ | async\" class=\"event-item mb-5 col-md-4\">\n      <div class=\"card\">\n        <a routerLink=\"{{ event.id }}\" [queryParams]=\"{ page: 99, dong: 22 }\"><div class=\"img-bg\" style=\"background-image: url('../../../assets/slider1.jpg')\"></div></a>\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{ event.title }}</h5>\n          <p class=\"card-text\">{{ event.desc }}</p>\n        </div>\n      </div>\n    </li>\n  </ul>\n</div>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-event-detail',\n  templateUrl: './event-detail.component.html',\n  styleUrls: ['./event-detail.component.scss']\n})\nexport class EventDetailComponent implements OnInit {\n\n  pageTitle = {\n    title: ''\n  };\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(data => console.log(data));\n    this.route.queryParamMap.subscribe(data => console.log(data));\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./event-detail.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./event-detail.component\";\nimport * as i3 from \"@angular/router\";\nvar styles_EventDetailComponent = [i0.styles];\nvar RenderType_EventDetailComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_EventDetailComponent, data: {} });\nexport { RenderType_EventDetailComponent as RenderType_EventDetailComponent };\nexport function View_EventDetailComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" event-detail works! \"]))], null, null); }\nexport function View_EventDetailComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-event-detail\", [], null, null, null, View_EventDetailComponent_0, RenderType_EventDetailComponent)), i1.ɵdid(1, 114688, null, 0, i2.EventDetailComponent, [i3.ActivatedRoute, i3.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar EventDetailComponentNgFactory = i1.ɵccf(\"app-event-detail\", i2.EventDetailComponent, View_EventDetailComponent_Host_0, {}, {}, []);\nexport { EventDetailComponentNgFactory as EventDetailComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  <p>\n    event-detail works!\n  </p>\n</div>\n","import { Component, OnInit, OnChanges, QueryList, ViewChildren,\n  AfterViewInit, AfterViewChecked, OnDestroy, ChangeDetectorRef, ViewChild, ElementRef } from '@angular/core';\nimport { LifecycleHooksChildComponent } from './lifecycle-hooks-child/lifecycle-hooks-child.component';\nimport { LoggerService } from './../../core/services/logger.service';\n\n@Component({\n  selector: 'app-lifecycle-hooks',\n  templateUrl: './lifecycle-hooks.component.html',\n  styleUrls: ['./lifecycle-hooks.component.scss']\n})\nexport class LifecycleHooksComponent implements OnInit, OnChanges, AfterViewInit, AfterViewChecked, OnDestroy {\n\n  @ViewChildren(LifecycleHooksChildComponent) child: QueryList<LifecycleHooksChildComponent>;\n\n  @ViewChildren('li') li: QueryList<ElementRef>;\n\n  pageTitle = {\n    title: 'Lifecycle Hooks'\n  };\n\n  emitChild = 'First value';\n\n  datea = '1993-02-11';\n\n  listLifeCycle = [\n    {\n      id: 1,\n      name: 'ngOnChanges()',\n      desc: `Anim pariatur cliche reprehenderit, enim eiusmod\n      high life accusamus terry richardson ad squid. 3 wolf\n      moon officia aute, non cupidatat skateboard dolor brunch. ngOnChanges()`\n    },\n    {\n      id: 2,\n      name: 'ngOninit()',\n      desc: `Anim pariatur cliche reprehenderit, enim eiusmod\n      high life accusamus terry richardson ad squid. 3 wolf\n      moon officia aute, non cupidatat skateboard dolor brunch. ngOninit()`\n    },\n    {\n      id: 3,\n      name: 'ngDoCheck()',\n      desc: `Anim pariatur cliche reprehenderit, enim eiusmod\n      high life accusamus terry richardson ad squid. 3 wolf\n      moon officia aute, non cupidatat skateboard dolor brunch. ngDoCheck()`\n    },\n    {\n      id: 4,\n      name: 'ngAfterContentInit()',\n      desc: `Anim pariatur cliche reprehenderit, enim eiusmod\n      high life accusamus terry richardson ad squid. 3 wolf\n      moon officia aute, non cupidatat skateboard dolor brunch. ngAfterContentInit()`\n    },\n    {\n      id: 5,\n      name: 'ngAfterContentChecked()',\n      desc: `Anim pariatur cliche reprehenderit, enim eiusmod\n      high life accusamus terry richardson ad squid. 3 wolf\n      moon officia aute, non cupidatat skateboard dolor brunch. ngAfterContentChecked()`\n    },\n    {\n      id: 6,\n      name: 'ngAfterViewInit()',\n      desc: `Anim pariatur cliche reprehenderit, enim eiusmod\n      high life accusamus terry richardson ad squid. 3 wolf\n      moon officia aute, non cupidatat skateboard dolor brunch. ngAfterViewInit()`\n    },\n    {\n      id: 7,\n      name: 'ngAfterViewChecked()',\n      desc: `Anim pariatur cliche reprehenderit, enim eiusmod\n      high life accusamus terry richardson ad squid. 3 wolf\n      moon officia aute, non cupidatat skateboard dolor brunch. ngAfterViewChecked()`\n    },\n    {\n      id: 8,\n      name: 'ngOnDestroy()',\n      desc: `Anim pariatur cliche reprehenderit, enim eiusmod\n      high life accusamus terry richardson ad squid. 3 wolf\n      moon officia aute, non cupidatat skateboard dolor brunch. ngOnDestroy()`\n    }\n  ];\n\n  currentId: any;\n\n  toggleDlg = false;\n  nameCycleDelete = '';\n\n\n  directiveColor = '';\n\n\n  styleCustom = '';\n\n  constructor(\n    private _cdr: ChangeDetectorRef,\n    private logger: LoggerService\n  ) {\n    // console.log('constrcutor');\n  }\n\n  ngOnInit() {\n    // console.log('oninit');\n  }\n\n  ngOnChanges() {\n    // console.log('ngOnChanges');\n  }\n\n  ngAfterViewInit() {\n    // this.child.forEach(val => val.value = '1234');\n    this.li.forEach(val => {\n      val.nativeElement.style.color = 'red';\n    });\n  }\n\n  ngAfterViewChecked() {\n    // console.log('ngAfterViewChecked');\n  }\n\n  ngOnDestroy() {\n    console.log('destroy');\n  }\n\n  confirmClose(event: any): void {\n    this.currentId = event;\n    this.listLifeCycle.forEach(val => {\n      if (val.id === event) {\n        this.nameCycleDelete = val.name;\n      }\n    });\n    this.toggleDlg = true;\n    this._cdr.detectChanges();\n  }\n\n  dlgClose(event: any) {\n    if (event) {\n      this.listLifeCycle.forEach((element, id) => {\n        if (element.id === this.currentId) {\n          this.listLifeCycle.splice(id, 1);\n        }\n      });\n    }\n    this.toggleDlg = false;\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./lifecycle-hooks.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../shared/components/dialog/dialog.component.ngfactory\";\nimport * as i3 from \"../../shared/components/dialog/dialog.component\";\nimport * as i4 from \"../../core/services/component-interation.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"./lifecycle-hooks.component\";\nimport * as i8 from \"../../core/services/logger.service\";\nvar styles_LifecycleHooksComponent = [i0.styles];\nvar RenderType_LifecycleHooksComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_LifecycleHooksComponent, data: {} });\nexport { RenderType_LifecycleHooksComponent as RenderType_LifecycleHooksComponent };\nexport function View_LifecycleHooksComponent_0(_l) { return i1.ɵvid(0, [i1.ɵqud(671088640, 1, { child: 1 }), i1.ɵqud(671088640, 2, { li: 1 }), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 0, \"ul\", [[\"class\", \"list-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 4, \"app-dialog\", [], null, [[null, \"afterClose\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"afterClose\" === en)) {\n        var pd_0 = (_co.dlgClose($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i2.View_DialogComponent_0, i2.RenderType_DialogComponent)), i1.ɵdid(5, 770048, null, 0, i3.DialogComponent, [i4.ComponentInterationService], { toggle: [0, \"toggle\"] }, { afterClose: \"afterClose\" }), (_l()(), i1.ɵted(-1, 0, [\" Do you want to delete \"])), (_l()(), i1.ɵeld(7, 0, null, 0, 1, \"h5\", [], null, null, null, null, null)), (_l()(), i1.ɵted(8, null, [\"\", \"\"])), (_l()(), i1.ɵeld(9, 0, null, null, 2, \"a\", [[\"class\", \"btn btn-primary\"], [\"routerLink\", \"life-child\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 10).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(10, 671744, null, 0, i5.RouterLinkWithHref, [i5.Router, i5.ActivatedRoute, i6.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"life-child\"])), (_l()(), i1.ɵeld(12, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i1.ɵdid(13, 212992, null, 0, i5.RouterOutlet, [i5.ChildrenOutletContexts, i1.ViewContainerRef, i1.ComponentFactoryResolver, [8, null], i1.ChangeDetectorRef], null, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.toggleDlg; _ck(_v, 5, 0, currVal_0); var currVal_4 = \"life-child\"; _ck(_v, 10, 0, currVal_4); _ck(_v, 13, 0); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.nameCycleDelete; _ck(_v, 8, 0, currVal_1); var currVal_2 = i1.ɵnov(_v, 10).target; var currVal_3 = i1.ɵnov(_v, 10).href; _ck(_v, 9, 0, currVal_2, currVal_3); }); }\nexport function View_LifecycleHooksComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-lifecycle-hooks\", [], null, null, null, View_LifecycleHooksComponent_0, RenderType_LifecycleHooksComponent)), i1.ɵdid(1, 13352960, null, 0, i7.LifecycleHooksComponent, [i1.ChangeDetectorRef, i8.LoggerService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar LifecycleHooksComponentNgFactory = i1.ɵccf(\"app-lifecycle-hooks\", i7.LifecycleHooksComponent, View_LifecycleHooksComponent_Host_0, {}, {}, []);\nexport { LifecycleHooksComponentNgFactory as LifecycleHooksComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  <ul class=\"list-group\">\n    <!-- <ng-container *ngFor=\"let cycle of listLifeCycle\">\n      <app-lifecycle-hooks-child [name]=\"cycle.name\" [id]=\"cycle.id\" (close)=\"confirmClose($event)\">\n        <app-lifecycle-hooks-other-child [desc]=\"cycle.desc\" [id]=\"cycle.id\"></app-lifecycle-hooks-other-child>\n      </app-lifecycle-hooks-child>\n    </ng-container> -->\n  </ul>\n</div>\n<app-dialog [toggle]=\"toggleDlg\" (afterClose)=\"dlgClose($event)\">\n  Do you want to delete <h5>{{nameCycleDelete}}</h5>\n</app-dialog>\n<a routerLink=\"life-child\" class=\"btn btn-primary\">life-child</a>\n<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n\n  pageTitle = {\n    title: ''\n  };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onActivate(event: any) {\n    // console.log(event);\n    this.pageTitle = event.pageTitle || this.pageTitle;\n  }\n\n\n  onDeactivate(event: any) {\n\n  }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./auth.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../shared/components/page-title/page-title.component.ngfactory\";\nimport * as i3 from \"../shared/components/page-title/page-title.component\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"./auth.component\";\nvar styles_AuthComponent = [i0.styles];\nvar RenderType_AuthComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_AuthComponent, data: {} });\nexport { RenderType_AuthComponent as RenderType_AuthComponent };\nexport function View_AuthComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-page-title\", [], null, null, null, i2.View_PageTitleComponent_0, i2.RenderType_PageTitleComponent)), i1.ɵdid(1, 114688, null, 0, i3.PageTitleComponent, [], { pageTitle: [0, \"pageTitle\"] }, null), (_l()(), i1.ɵeld(2, 0, null, null, 2, \"main\", [[\"class\", \"page-main\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 16777216, null, null, 1, \"router-outlet\", [], null, [[null, \"activate\"], [null, \"deactivate\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"activate\" === en)) {\n        var pd_0 = (_co.onActivate($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"deactivate\" === en)) {\n        var pd_1 = (_co.onDeactivate($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i1.ɵdid(4, 212992, null, 0, i4.RouterOutlet, [i4.ChildrenOutletContexts, i1.ViewContainerRef, i1.ComponentFactoryResolver, [8, null], i1.ChangeDetectorRef], null, { activateEvents: \"activate\", deactivateEvents: \"deactivate\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.pageTitle.title; _ck(_v, 1, 0, currVal_0); _ck(_v, 4, 0); }, null); }\nexport function View_AuthComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-auth\", [], null, null, null, View_AuthComponent_0, RenderType_AuthComponent)), i1.ɵdid(1, 114688, null, 0, i5.AuthComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AuthComponentNgFactory = i1.ɵccf(\"app-auth\", i5.AuthComponent, View_AuthComponent_Host_0, {}, {}, []);\nexport { AuthComponentNgFactory as AuthComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<!-- <app-header></app-header> -->\n<app-page-title [pageTitle]=\"pageTitle.title\"></app-page-title>\n<main class=\"page-main\">\n  <router-outlet (activate)=\"onActivate($event)\" (deactivate)=\"onDeactivate($event)\"></router-outlet>\n</main>\n<!-- <app-footer></app-footer> -->\n","/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { InjectionToken, ɵisObservable, ɵisPromise, Directive, ElementRef, Renderer2, forwardRef, Inject, Optional, Injectable, Injector, Input, Host, ɵlooseIdentical, isDevMode, Self, EventEmitter, SkipSelf, Output, Version, NgModule } from '@angular/core';\nimport { forkJoin, from } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ɵgetDOM } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @abstract\n */\nclass AbstractControlDirective {\n    /**\n     * \\@description\n     * Reports the value of the control if it is present, otherwise null.\n     * @return {?}\n     */\n    get value() { return this.control ? this.control.value : null; }\n    /**\n     * \\@description\n     * Reports whether the control is valid. A control is considered valid if no\n     * validation errors exist with the current value.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get valid() { return this.control ? this.control.valid : null; }\n    /**\n     * \\@description\n     * Reports whether the control is invalid, meaning that an error exists in the input value.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get invalid() { return this.control ? this.control.invalid : null; }\n    /**\n     * \\@description\n     * Reports whether a control is pending, meaning that that async validation is occurring and\n     * errors are not yet available for the input value. If the control is not present, null is\n     * returned.\n     * @return {?}\n     */\n    get pending() { return this.control ? this.control.pending : null; }\n    /**\n     * \\@description\n     * Reports whether the control is disabled, meaning that the control is disabled\n     * in the UI and is exempt from validation checks and excluded from aggregate\n     * values of ancestor controls. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get disabled() { return this.control ? this.control.disabled : null; }\n    /**\n     * \\@description\n     * Reports whether the control is enabled, meaning that the control is included in ancestor\n     * calculations of validity or value. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get enabled() { return this.control ? this.control.enabled : null; }\n    /**\n     * \\@description\n     * Reports the control's validation errors. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get errors() { return this.control ? this.control.errors : null; }\n    /**\n     * \\@description\n     * Reports whether the control is pristine, meaning that the user has not yet changed\n     * the value in the UI. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get pristine() { return this.control ? this.control.pristine : null; }\n    /**\n     * \\@description\n     * Reports whether the control is dirty, meaning that the user has changed\n     * the value in the UI. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get dirty() { return this.control ? this.control.dirty : null; }\n    /**\n     * \\@description\n     * Reports whether the control is touched, meaning that the user has triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get touched() { return this.control ? this.control.touched : null; }\n    /**\n     * \\@description\n     * Reports the validation status of the control. Possible values include:\n     * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get status() { return this.control ? this.control.status : null; }\n    /**\n     * \\@description\n     * Reports whether the control is untouched, meaning that the user has not yet triggered\n     * a `blur` event on it. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get untouched() { return this.control ? this.control.untouched : null; }\n    /**\n     * \\@description\n     * Returns a multicasting observable that emits a validation status whenever it is\n     * calculated for the control. If the control is not present, null is returned.\n     * @return {?}\n     */\n    get statusChanges() {\n        return this.control ? this.control.statusChanges : null;\n    }\n    /**\n     * \\@description\n     * Returns a multicasting observable of value changes for the control that emits every time the\n     * value of the control changes in the UI or programmatically.\n     * If the control is not present, null is returned.\n     * @return {?}\n     */\n    get valueChanges() {\n        return this.control ? this.control.valueChanges : null;\n    }\n    /**\n     * \\@description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     * @return {?}\n     */\n    get path() { return null; }\n    /**\n     * \\@description\n     * Resets the control with the provided value if the control is present.\n     * @param {?=} value\n     * @return {?}\n     */\n    reset(value = undefined) {\n        if (this.control)\n            this.control.reset(value);\n    }\n    /**\n     * \\@description\n     * Reports whether the control with the given path has the error specified.\n     * If no path is given, it checks for the error on the present control.\n     * If the control is not present, false is returned.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    hasError(errorCode, path) {\n        return this.control ? this.control.hasError(errorCode, path) : false;\n    }\n    /**\n     * \\@description\n     * Reports error data for the control with the given path.\n     * If the control is not present, null is returned.\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    getError(errorCode, path) {\n        return this.control ? this.control.getError(errorCode, path) : null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n * @abstract\n */\nclass ControlContainer extends AbstractControlDirective {\n    /**\n     * \\@description\n     * The top-level form directive for the control.\n     * @return {?}\n     */\n    get formDirective() { return null; }\n    /**\n     * \\@description\n     * The path to this group.\n     * @return {?}\n     */\n    get path() { return null; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isEmptyInputValue(value) {\n    // we don't check for string here so it also works with arrays\n    return value == null || value.length === 0;\n}\n/** *\n * \\@description\n * An `InjectionToken` for registering additional synchronous validators used with `AbstractControl`s.\n *\n * @see `NG_ASYNC_VALIDATORS`\n *\n * \\@usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * \\@Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n  @type {?} */\nconst NG_VALIDATORS = new InjectionToken('NgValidators');\n/** *\n * \\@description\n * An `InjectionToken` for registering additional asynchronous validators used with `AbstractControl`s.\n *\n * @see `NG_VALIDATORS`\n *\n  @type {?} */\nconst NG_ASYNC_VALIDATORS = new InjectionToken('NgAsyncValidators');\n/** @type {?} */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+(\\.[-!#$%&'*+/0-9=?A-Z^_`a-z{|}~]+)*@[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?(\\.[A-Za-z0-9]([A-Za-z0-9-]{0,61}[A-Za-z0-9])?)*$/;\n/**\n * \\@description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n */\nclass Validators {\n    /**\n     * \\@description\n     * Validator that requires the control's value to be greater than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate against a minimum of 3\n     *\n     * ```typescript\n     * const control = new FormControl(2, Validators.min(3));\n     *\n     * console.log(control.errors); // {min: {min: 3, actual: 2}}\n     * ```\n     *\n     * @param {?} min\n     * @return {?} A validator function that returns an error map with the\n     * `min` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static min(min) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n            return !isNaN(value) && value < min ? { 'min': { 'min': min, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value to be less than or equal to the provided number.\n     * The validator exists only as a function and not as a directive.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate against a maximum of 15\n     *\n     * ```typescript\n     * const control = new FormControl(16, Validators.max(15));\n     *\n     * console.log(control.errors); // {max: {max: 15, actual: 16}}\n     * ```\n     *\n     * @param {?} max\n     * @return {?} A validator function that returns an error map with the\n     * `max` property if the validation check fails, otherwise `null`.\n     *\n     */\n    static max(max) {\n        return (control) => {\n            if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const value = parseFloat(control.value);\n            // Controls with NaN values after parsing should be treated as not having a\n            // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n            return !isNaN(value) && value > max ? { 'max': { 'max': max, 'actual': control.value } } : null;\n        };\n    }\n    /**\n     * \\@description\n     * Validator that requires the control have a non-empty value.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field is non-empty\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.required);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @param {?} control\n     * @return {?} An error map with the `required` property\n     * if the validation check fails, otherwise `null`.\n     *\n     */\n    static required(control) {\n        return isEmptyInputValue(control.value) ? { 'required': true } : null;\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value be true. This validator is commonly\n     * used for required checkboxes.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field value is true\n     *\n     * ```typescript\n     * const control = new FormControl('', Validators.requiredTrue);\n     *\n     * console.log(control.errors); // {required: true}\n     * ```\n     *\n     * @param {?} control\n     * @return {?} An error map that contains the `required` property\n     * set to `true` if the validation check fails, otherwise `null`.\n     */\n    static requiredTrue(control) {\n        return control.value === true ? null : { 'required': true };\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value pass an email validation test.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field matches a valid email pattern\n     *\n     * ```typescript\n     * const control = new FormControl('bad\\@', Validators.email);\n     *\n     * console.log(control.errors); // {email: true}\n     * ```\n     *\n     * @param {?} control\n     * @return {?} An error map with the `email` property\n     * if the validation check fails, otherwise `null`.\n     *\n     */\n    static email(control) {\n        if (isEmptyInputValue(control.value)) {\n            return null; // don't validate empty values to allow optional controls\n        }\n        return EMAIL_REGEXP.test(control.value) ? null : { 'email': true };\n    }\n    /**\n     * \\@description\n     * Validator that requires the length of the control's value to be greater than or equal\n     * to the provided minimum length. This validator is also provided by default if you use the\n     * the HTML5 `minlength` attribute.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field has a minimum of 3 characters\n     *\n     * ```typescript\n     * const control = new FormControl('ng', Validators.minLength(3));\n     *\n     * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n     * ```\n     *\n     * ```html\n     * <input minlength=\"5\">\n     * ```\n     *\n     * @param {?} minLength\n     * @return {?} A validator function that returns an error map with the\n     * `minlength` if the validation check fails, otherwise `null`.\n     */\n    static minLength(minLength) {\n        return (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const length = control.value ? control.value.length : 0;\n            return length < minLength ?\n                { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                null;\n        };\n    }\n    /**\n     * \\@description\n     * Validator that requires the length of the control's value to be less than or equal\n     * to the provided maximum length. This validator is also provided by default if you use the\n     * the HTML5 `maxlength` attribute.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field has maximum of 5 characters\n     *\n     * ```typescript\n     * const control = new FormControl('Angular', Validators.maxLength(5));\n     *\n     * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n     * ```\n     *\n     * ```html\n     * <input maxlength=\"5\">\n     * ```\n     *\n     * @param {?} maxLength\n     * @return {?} A validator function that returns an error map with the\n     * `maxlength` property if the validation check fails, otherwise `null`.\n     */\n    static maxLength(maxLength) {\n        return (control) => {\n            /** @type {?} */\n            const length = control.value ? control.value.length : 0;\n            return length > maxLength ?\n                { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                null;\n        };\n    }\n    /**\n     * \\@description\n     * Validator that requires the control's value to match a regex pattern. This validator is also\n     * provided\n     * by default if you use the HTML5 `pattern` attribute.\n     *\n     * \\@usageNotes\n     *\n     * ### Validate that the field only contains letters or spaces\n     *\n     * ```typescript\n     * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n     *\n     * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n     * ```\n     *\n     * ```html\n     * <input pattern=\"[a-zA-Z ]*\">\n     * ```\n     *\n     * @param {?} pattern\n     * @return {?} A validator function that returns an error map with the\n     * `pattern` property if the validation check fails, otherwise `null`.\n     */\n    static pattern(pattern) {\n        if (!pattern)\n            return Validators.nullValidator;\n        /** @type {?} */\n        let regex;\n        /** @type {?} */\n        let regexStr;\n        if (typeof pattern === 'string') {\n            regexStr = '';\n            if (pattern.charAt(0) !== '^')\n                regexStr += '^';\n            regexStr += pattern;\n            if (pattern.charAt(pattern.length - 1) !== '$')\n                regexStr += '$';\n            regex = new RegExp(regexStr);\n        }\n        else {\n            regexStr = pattern.toString();\n            regex = pattern;\n        }\n        return (control) => {\n            if (isEmptyInputValue(control.value)) {\n                return null; // don't validate empty values to allow optional controls\n            }\n            /** @type {?} */\n            const value = control.value;\n            return regex.test(value) ? null :\n                { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n        };\n    }\n    /**\n     * \\@description\n     * Validator that performs no operation.\n     * @param {?} control\n     * @return {?}\n     */\n    static nullValidator(control) { return null; }\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    static compose(validators) {\n        if (!validators)\n            return null;\n        /** @type {?} */\n        const presentValidators = /** @type {?} */ (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            return _mergeErrors(_executeValidators(control, presentValidators));\n        };\n    }\n    /**\n     * \\@description\n     * Compose multiple async validators into a single function that returns the union\n     * of the individual error objects for the provided control.\n     *\n     * @param {?} validators\n     * @return {?} A validator function that returns an error map with the\n     * merged error objects of the async validators if the validation check fails, otherwise `null`.\n     */\n    static composeAsync(validators) {\n        if (!validators)\n            return null;\n        /** @type {?} */\n        const presentValidators = /** @type {?} */ (validators.filter(isPresent));\n        if (presentValidators.length == 0)\n            return null;\n        return function (control) {\n            /** @type {?} */\n            const observables = _executeAsyncValidators(control, presentValidators).map(toObservable);\n            return forkJoin(observables).pipe(map(_mergeErrors));\n        };\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPresent(o) {\n    return o != null;\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction toObservable(r) {\n    /** @type {?} */\n    const obs = ɵisPromise(r) ? from(r) : r;\n    if (!(ɵisObservable(obs))) {\n        throw new Error(`Expected validator to return Promise or Observable.`);\n    }\n    return obs;\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeValidators(control, validators) {\n    return validators.map(v => v(control));\n}\n/**\n * @param {?} control\n * @param {?} validators\n * @return {?}\n */\nfunction _executeAsyncValidators(control, validators) {\n    return validators.map(v => v(control));\n}\n/**\n * @param {?} arrayOfErrors\n * @return {?}\n */\nfunction _mergeErrors(arrayOfErrors) {\n    /** @type {?} */\n    const res = arrayOfErrors.reduce((res, errors) => {\n        return errors != null ? Object.assign({}, /** @type {?} */ ((res)), errors) : /** @type {?} */ ((res));\n    }, {});\n    return Object.keys(res).length === 0 ? null : res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n  @type {?} */\nconst NG_VALUE_ACCESSOR = new InjectionToken('NgValueAccessor');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CheckboxControlValueAccessor),\n    multi: true,\n};\n/**\n * The accessor for writing a value and listening to changes on a checkbox input element.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n * ```\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass CheckboxControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', value);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nCheckboxControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                providers: [CHECKBOX_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nCheckboxControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DEFAULT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => DefaultValueAccessor),\n    multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n * @return {?}\n */\nfunction _isAndroid() {\n    /** @type {?} */\n    const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n    return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/** *\n * Turn this mode on if you want form directives to buffer IME input until compositionend\n * \\@experimental\n  @type {?} */\nconst COMPOSITION_BUFFER_MODE = new InjectionToken('CompositionEventMode');\n/**\n * The default accessor for writing a value and listening to changes that is used by the\n * `NgModel`, `FormControlDirective`, and `FormControlName` directives.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * <input type=\"text\" name=\"searchQuery\" ngModel>\n * ```\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass DefaultValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _compositionMode\n     */\n    constructor(_renderer, _elementRef, _compositionMode) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._compositionMode = _compositionMode;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        /**\n         * Whether the user is creating a composition string (IME events).\n         */\n        this._composing = false;\n        if (this._compositionMode == null) {\n            this._compositionMode = !_isAndroid();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        /** @type {?} */\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _handleInput(value) {\n        if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n            this.onChange(value);\n        }\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _compositionStart() { this._composing = true; }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _compositionEnd(value) {\n        this._composing = false;\n        this._compositionMode && this.onChange(value);\n    }\n}\nDefaultValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                // TODO: vsavkin replace the above selector with the one below it once\n                // https://github.com/angular/angular/issues/3011 is implemented\n                // selector: '[ngModel],[formControl],[formControlName]',\n                host: {\n                    '(input)': '$any(this)._handleInput($event.target.value)',\n                    '(blur)': 'onTouched()',\n                    '(compositionstart)': '$any(this)._compositionStart()',\n                    '(compositionend)': '$any(this)._compositionEnd($event.target.value)'\n                },\n                providers: [DEFAULT_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nDefaultValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: Boolean, decorators: [{ type: Optional }, { type: Inject, args: [COMPOSITION_BUFFER_MODE,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeValidator(validator) {\n    if ((/** @type {?} */ (validator)).validate) {\n        return (c) => (/** @type {?} */ (validator)).validate(c);\n    }\n    else {\n        return /** @type {?} */ (validator);\n    }\n}\n/**\n * @param {?} validator\n * @return {?}\n */\nfunction normalizeAsyncValidator(validator) {\n    if ((/** @type {?} */ (validator)).validate) {\n        return (c) => (/** @type {?} */ (validator)).validate(c);\n    }\n    else {\n        return /** @type {?} */ (validator);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NUMBER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NumberValueAccessor),\n    multi: true\n};\n/**\n * The accessor for writing a number value and listening to changes that is used by the\n * `NgModel`, `FormControlDirective`, and `FormControlName` directives.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * <input type=\"number\" [(ngModel)]=\"age\">\n * ```\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass NumberValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        /** @type {?} */\n        const normalizedValue = value == null ? '' : value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => { fn(value == '' ? null : parseFloat(value)); };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nNumberValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [NUMBER_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nNumberValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction unimplemented() {\n    throw new Error('unimplemented');\n}\n/**\n * \\@description\n * A base class that all control `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n * @abstract\n */\nclass NgControl extends AbstractControlDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * \\@description\n         * The parent form for the control.\n         *\n         * \\@internal\n         */\n        this._parent = null;\n        /**\n         * \\@description\n         * The name for the control\n         */\n        this.name = null;\n        /**\n         * \\@description\n         * The value accessor for the control\n         */\n        this.valueAccessor = null;\n        /**\n         * \\@description\n         * The uncomposed array of synchronous validators for the control\n         *\n         * \\@internal\n         */\n        this._rawValidators = [];\n        /**\n         * \\@description\n         * The uncomposed array of async validators for the control\n         *\n         * \\@internal\n         */\n        this._rawAsyncValidators = [];\n    }\n    /**\n     * \\@description\n     * The registered synchronous validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     * @return {?}\n     */\n    get validator() { return /** @type {?} */ (unimplemented()); }\n    /**\n     * \\@description\n     * The registered async validator function for the control\n     *\n     * @throws An exception that this method is not implemented\n     * @return {?}\n     */\n    get asyncValidator() { return /** @type {?} */ (unimplemented()); }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RadioControlValueAccessor),\n    multi: true\n};\n/**\n * Internal class used by Angular to uncheck radio buttons with the matching name.\n */\nclass RadioControlRegistry {\n    constructor() {\n        this._accessors = [];\n    }\n    /**\n     * @param {?} control\n     * @param {?} accessor\n     * @return {?}\n     */\n    add(control, accessor) {\n        this._accessors.push([control, accessor]);\n    }\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    remove(accessor) {\n        for (let i = this._accessors.length - 1; i >= 0; --i) {\n            if (this._accessors[i][1] === accessor) {\n                this._accessors.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * @param {?} accessor\n     * @return {?}\n     */\n    select(accessor) {\n        this._accessors.forEach((c) => {\n            if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                c[1].fireUncheck(accessor.value);\n            }\n        });\n    }\n    /**\n     * @param {?} controlPair\n     * @param {?} accessor\n     * @return {?}\n     */\n    _isSameGroup(controlPair, accessor) {\n        if (!controlPair[0].control)\n            return false;\n        return controlPair[0]._parent === accessor._control._parent &&\n            controlPair[1].name === accessor.name;\n    }\n}\nRadioControlRegistry.decorators = [\n    { type: Injectable }\n];\n/**\n * \\@description\n *\n * Writes radio control values and listens to radio control changes.\n *\n * Used by `NgModel`, `FormControlDirective`, and `FormControlName`\n * to keep the view synced with the `FormControl` model.\n *\n * If you have imported the `FormsModule` or the `ReactiveFormsModule`, this\n * value accessor will be active on any radio control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * \\@usageNotes\n * ### How to use radio buttons with form directives\n *\n * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n * in the same group have the same `name` attribute.  Radio buttons with different `name`\n * attributes do not affect each other.\n *\n * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n *\n * When using radio buttons in a reactive form, radio buttons in the same group should have the\n * same `formControlName`. You can also add a `name` attribute, but it's optional.\n *\n * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass RadioControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _registry\n     * @param {?} _injector\n     */\n    constructor(_renderer, _elementRef, _registry, _injector) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._registry = _registry;\n        this._injector = _injector;\n        this.onChange = () => { };\n        this.onTouched = () => { };\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._control = this._injector.get(NgControl);\n        this._checkName();\n        this._registry.add(this._control, this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this._registry.remove(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._state = value === this.value;\n        this._renderer.setProperty(this._elementRef.nativeElement, 'checked', this._state);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._fn = fn;\n        this.onChange = () => {\n            fn(this.value);\n            this._registry.select(this);\n        };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    fireUncheck(value) { this.writeValue(value); }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * @return {?}\n     */\n    _checkName() {\n        if (this.name && this.formControlName && this.name !== this.formControlName) {\n            this._throwNameError();\n        }\n        if (!this.name && this.formControlName)\n            this.name = this.formControlName;\n    }\n    /**\n     * @return {?}\n     */\n    _throwNameError() {\n        throw new Error(`\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n    }\n}\nRadioControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                providers: [RADIO_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nRadioControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: RadioControlRegistry },\n    { type: Injector }\n];\nRadioControlValueAccessor.propDecorators = {\n    name: [{ type: Input }],\n    formControlName: [{ type: Input }],\n    value: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst RANGE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => RangeValueAccessor),\n    multi: true\n};\n/**\n * The accessor for writing a range value and listening to changes that is used by the\n * `NgModel`, `FormControlDirective`, and `FormControlName` directives.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * <input type=\"range\" [(ngModel)]=\"age\" >\n * ```\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass RangeValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (value) => { fn(value == '' ? null : parseFloat(value)); };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n}\nRangeValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                host: {\n                    '(change)': 'onChange($event.target.value)',\n                    '(input)': 'onChange($event.target.value)',\n                    '(blur)': 'onTouched()'\n                },\n                providers: [RANGE_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nRangeValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst FormErrorExamples = {\n    formControlName: `\n    <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       firstName: new FormControl()\n    });`,\n    formGroupName: `\n    <div [formGroup]=\"myGroup\">\n       <div formGroupName=\"person\">\n          <input formControlName=\"firstName\">\n       </div>\n    </div>\n\n    In your class:\n\n    this.myGroup = new FormGroup({\n       person: new FormGroup({ firstName: new FormControl() })\n    });`,\n    formArrayName: `\n    <div [formGroup]=\"myGroup\">\n      <div formArrayName=\"cities\">\n        <div *ngFor=\"let city of cityArray.controls; index as i\">\n          <input [formControlName]=\"i\">\n        </div>\n      </div>\n    </div>\n\n    In your class:\n\n    this.cityArray = new FormArray([new FormControl('SF')]);\n    this.myGroup = new FormGroup({\n      cities: this.cityArray\n    });`,\n    ngModelGroup: `\n    <form>\n       <div ngModelGroup=\"person\">\n          <input [(ngModel)]=\"person.name\" name=\"firstName\">\n       </div>\n    </form>`,\n    ngModelWithFormGroup: `\n    <div [formGroup]=\"myGroup\">\n       <input formControlName=\"firstName\">\n       <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n    </div>\n  `\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ReactiveErrors {\n    /**\n     * @return {?}\n     */\n    static controlParentException() {\n        throw new Error(`formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formControlName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static ngModelGroupException() {\n        throw new Error(`formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n       that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n        ${FormErrorExamples.formGroupName}\n\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n        ${FormErrorExamples.ngModelGroup}`);\n    }\n    /**\n     * @return {?}\n     */\n    static missingFormException() {\n        throw new Error(`formGroup expects a FormGroup instance. Please pass one in.\n\n       Example:\n\n       ${FormErrorExamples.formControlName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static groupParentException() {\n        throw new Error(`formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${FormErrorExamples.formGroupName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static arrayParentException() {\n        throw new Error(`formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n       directive and pass it an existing FormGroup instance (you can create one in your class).\n\n        Example:\n\n        ${FormErrorExamples.formArrayName}`);\n    }\n    /**\n     * @return {?}\n     */\n    static disabledAttrWarning() {\n        console.warn(`\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n      you. We recommend using this approach to avoid 'changed after checked' errors.\n       \n      Example: \n      form = new FormGroup({\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n        last: new FormControl('Drew', Validators.required)\n      });\n    `);\n    }\n    /**\n     * @param {?} directiveName\n     * @return {?}\n     */\n    static ngModelWarning(directiveName) {\n        console.warn(`\n    It looks like you're using ngModel on the same form field as ${directiveName}. \n    Support for using the ngModel input property and ngModelChange event with \n    reactive form directives has been deprecated in Angular v6 and will be removed \n    in Angular v7.\n    \n    For more information on this, see our API docs here:\n    https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective'\n            : 'FormControlName'}#use-with-ngmodel\n    `);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SELECT_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectControlValueAccessor),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * \\@description\n *\n * Writes values and listens to changes on a select element.\n *\n * Used by `NgModel`, `FormControlDirective`, and `FormControlName`\n * to keep the view synced with the `FormControl` model.\n *\n * If you have imported the `FormsModule` or the `ReactiveFormsModule`, this\n * value accessor will be active on any select control that has a form directive. You do\n * **not** need to add a special selector to activate it.\n *\n * \\@usageNotes\n * ### How to use select controls with form directives\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * If your option values are simple strings, you can bind to the normal `value` property\n * on the option.  If your option values happen to be objects (and you'd like to save the\n * selection in your form as an object), use `ngValue` instead:\n *\n * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * In reactive forms, you'll also want to add your form directive (`formControlName` or\n * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n * choice of binding to the  `value` or `ngValue` property on the select's options.\n *\n * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Caveat: Option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ### Syntax\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * Note: We listen to the 'change' event because 'input' events aren't fired\n * for selects in Firefox and IE:\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass SelectControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        /** @type {?} */\n        const id = this._getOptionId(value);\n        if (id == null) {\n            this._renderer.setProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n        }\n        /** @type {?} */\n        const valueString = _buildValueString(id, value);\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', valueString);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (valueString) => {\n            this.value = this._getOptionValue(valueString);\n            fn(this.value);\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _registerOption() { return (this._idCounter++).toString(); }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(this._optionMap.get(id), value))\n                return id;\n        }\n        return null;\n    }\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    _getOptionValue(valueString) {\n        /** @type {?} */\n        const id = _extractId(valueString);\n        return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n}\nSelectControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                providers: [SELECT_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nSelectControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/**\n * \\@description\n *\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * See docs for `SelectControlValueAccessor` for usage examples.\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass NgSelectOption {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select)\n            this.id = this._select._registerOption();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._select._optionMap.set(this.id, value);\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this._setElementValue(value);\n        if (this._select)\n            this._select.writeValue(this._select.value);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] }\n];\n/** @nocollapse */\nNgSelectOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nNgSelectOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SelectMultipleControlValueAccessor),\n    multi: true\n};\n/**\n * @param {?} id\n * @param {?} value\n * @return {?}\n */\nfunction _buildValueString$1(id, value) {\n    if (id == null)\n        return `${value}`;\n    if (typeof value === 'string')\n        value = `'${value}'`;\n    if (value && typeof value === 'object')\n        value = 'Object';\n    return `${id}: ${value}`.slice(0, 50);\n}\n/**\n * @param {?} valueString\n * @return {?}\n */\nfunction _extractId$1(valueString) {\n    return valueString.split(':')[0];\n}\n/**\n * The accessor for writing a value and listening to changes on a select element.\n *\n * \\@usageNotes\n * ### Caveat: Options selection\n *\n * Angular uses object identity to select options. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select multiple>` supports `compareWith`\n * input. `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects options by the return value of the function.\n *\n * ### Syntax\n *\n * ```\n * <select multiple [compareWith]=\"compareFn\"  [(ngModel)]=\"selectedCountries\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n */\nclass SelectMultipleControlValueAccessor {\n    /**\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     */\n    constructor(_renderer, _elementRef) {\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        /**\n         * \\@internal\n         */\n        this._optionMap = new Map();\n        /**\n         * \\@internal\n         */\n        this._idCounter = 0;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this._compareWith = ɵlooseIdentical;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw new Error(`compareWith must be a function, but received ${JSON.stringify(fn)}`);\n        }\n        this._compareWith = fn;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.value = value;\n        /** @type {?} */\n        let optionSelectedStateSetter;\n        if (Array.isArray(value)) {\n            /** @type {?} */\n            const ids = value.map((v) => this._getOptionId(v));\n            optionSelectedStateSetter = (opt, o) => { opt._setSelected(ids.indexOf(o.toString()) > -1); };\n        }\n        else {\n            optionSelectedStateSetter = (opt, o) => { opt._setSelected(false); };\n        }\n        this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.onChange = (_) => {\n            /** @type {?} */\n            const selected = [];\n            if (_.hasOwnProperty('selectedOptions')) {\n                /** @type {?} */\n                const options = _.selectedOptions;\n                for (let i = 0; i < options.length; i++) {\n                    /** @type {?} */\n                    const opt = options.item(i);\n                    /** @type {?} */\n                    const val = this._getOptionValue(opt.value);\n                    selected.push(val);\n                }\n            }\n            // Degrade on IE\n            else {\n                /** @type {?} */\n                const options = /** @type {?} */ (_.options);\n                for (let i = 0; i < options.length; i++) {\n                    /** @type {?} */\n                    const opt = options.item(i);\n                    if (opt.selected) {\n                        /** @type {?} */\n                        const val = this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n            }\n            this.value = selected;\n            fn(selected);\n        };\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _registerOption(value) {\n        /** @type {?} */\n        const id = (this._idCounter++).toString();\n        this._optionMap.set(id, value);\n        return id;\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _getOptionId(value) {\n        for (const id of Array.from(this._optionMap.keys())) {\n            if (this._compareWith(/** @type {?} */ ((this._optionMap.get(id)))._value, value))\n                return id;\n        }\n        return null;\n    }\n    /**\n     * \\@internal\n     * @param {?} valueString\n     * @return {?}\n     */\n    _getOptionValue(valueString) {\n        /** @type {?} */\n        const id = _extractId$1(valueString);\n        return this._optionMap.has(id) ? /** @type {?} */ ((this._optionMap.get(id)))._value : valueString;\n    }\n}\nSelectMultipleControlValueAccessor.decorators = [\n    { type: Directive, args: [{\n                selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n            },] }\n];\n/** @nocollapse */\nSelectMultipleControlValueAccessor.ctorParameters = () => [\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nSelectMultipleControlValueAccessor.propDecorators = {\n    compareWith: [{ type: Input }]\n};\n/**\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * <select multiple name=\"city\" ngModel>\n *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n * </select>\n * ```\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass NgSelectMultipleOption {\n    /**\n     * @param {?} _element\n     * @param {?} _renderer\n     * @param {?} _select\n     */\n    constructor(_element, _renderer, _select) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this._select = _select;\n        if (this._select) {\n            this.id = this._select._registerOption(this);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set ngValue(value) {\n        if (this._select == null)\n            return;\n        this._value = value;\n        this._setElementValue(_buildValueString$1(this.id, value));\n        this._select.writeValue(this._select.value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (this._select) {\n            this._value = value;\n            this._setElementValue(_buildValueString$1(this.id, value));\n            this._select.writeValue(this._select.value);\n        }\n        else {\n            this._setElementValue(value);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _setElementValue(value) {\n        this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /**\n     * \\@internal\n     * @param {?} selected\n     * @return {?}\n     */\n    _setSelected(selected) {\n        this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._select) {\n            this._select._optionMap.delete(this.id);\n            this._select.writeValue(this._select.value);\n        }\n    }\n}\nNgSelectMultipleOption.decorators = [\n    { type: Directive, args: [{ selector: 'option' },] }\n];\n/** @nocollapse */\nNgSelectMultipleOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: SelectMultipleControlValueAccessor, decorators: [{ type: Optional }, { type: Host }] }\n];\nNgSelectMultipleOption.propDecorators = {\n    ngValue: [{ type: Input, args: ['ngValue',] }],\n    value: [{ type: Input, args: ['value',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} name\n * @param {?} parent\n * @return {?}\n */\nfunction controlPath(name, parent) {\n    return [.../** @type {?} */ ((parent.path)), name];\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpControl(control, dir) {\n    if (!control)\n        _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor)\n        _throwError(dir, 'No value accessor for form control with');\n    control.validator = Validators.compose([/** @type {?} */ ((control.validator)), dir.validator]);\n    control.asyncValidator = Validators.composeAsync([/** @type {?} */ ((control.asyncValidator)), dir.asyncValidator]); /** @type {?} */\n    ((dir.valueAccessor)).writeValue(control.value);\n    setUpViewChangePipeline(control, dir);\n    setUpModelChangePipeline(control, dir);\n    setUpBlurPipeline(control, dir);\n    if (/** @type {?} */ ((dir.valueAccessor)).setDisabledState) {\n        control.registerOnDisabledChange((isDisabled) => { /** @type {?} */ ((/** @type {?} */ ((dir.valueAccessor)).setDisabledState))(isDisabled); });\n    }\n    // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n    dir._rawValidators.forEach((validator) => {\n        if ((/** @type {?} */ (validator)).registerOnValidatorChange)\n            /** @type {?} */ (((/** @type {?} */ (validator)).registerOnValidatorChange))(() => control.updateValueAndValidity());\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if ((/** @type {?} */ (validator)).registerOnValidatorChange)\n            /** @type {?} */ (((/** @type {?} */ (validator)).registerOnValidatorChange))(() => control.updateValueAndValidity());\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction cleanUpControl(control, dir) {\n    /** @type {?} */ ((dir.valueAccessor)).registerOnChange(() => _noControlError(dir)); /** @type {?} */\n    ((dir.valueAccessor)).registerOnTouched(() => _noControlError(dir));\n    dir._rawValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    dir._rawAsyncValidators.forEach((validator) => {\n        if (validator.registerOnValidatorChange) {\n            validator.registerOnValidatorChange(null);\n        }\n    });\n    if (control)\n        control._clearChangeFns();\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpViewChangePipeline(control, dir) {\n    /** @type {?} */ ((dir.valueAccessor)).registerOnChange((newValue) => {\n        control._pendingValue = newValue;\n        control._pendingChange = true;\n        control._pendingDirty = true;\n        if (control.updateOn === 'change')\n            updateControl(control, dir);\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpBlurPipeline(control, dir) {\n    /** @type {?} */ ((dir.valueAccessor)).registerOnTouched(() => {\n        control._pendingTouched = true;\n        if (control.updateOn === 'blur' && control._pendingChange)\n            updateControl(control, dir);\n        if (control.updateOn !== 'submit')\n            control.markAsTouched();\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction updateControl(control, dir) {\n    if (control._pendingDirty)\n        control.markAsDirty();\n    control.setValue(control._pendingValue, { emitModelToViewChange: false });\n    dir.viewToModelUpdate(control._pendingValue);\n    control._pendingChange = false;\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpModelChangePipeline(control, dir) {\n    control.registerOnChange((newValue, emitModelEvent) => {\n        /** @type {?} */ ((\n        // control -> view\n        dir.valueAccessor)).writeValue(newValue);\n        // control -> ngModel\n        if (emitModelEvent)\n            dir.viewToModelUpdate(newValue);\n    });\n}\n/**\n * @param {?} control\n * @param {?} dir\n * @return {?}\n */\nfunction setUpFormContainer(control, dir) {\n    if (control == null)\n        _throwError(dir, 'Cannot find control with');\n    control.validator = Validators.compose([control.validator, dir.validator]);\n    control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n}\n/**\n * @param {?} dir\n * @return {?}\n */\nfunction _noControlError(dir) {\n    return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\n/**\n * @param {?} dir\n * @param {?} message\n * @return {?}\n */\nfunction _throwError(dir, message) {\n    /** @type {?} */\n    let messageEnd;\n    if (/** @type {?} */ ((dir.path)).length > 1) {\n        messageEnd = `path: '${(/** @type {?} */ ((dir.path))).join(' -> ')}'`;\n    }\n    else if (/** @type {?} */ ((dir.path))[0]) {\n        messageEnd = `name: '${dir.path}'`;\n    }\n    else {\n        messageEnd = 'unspecified name attribute';\n    }\n    throw new Error(`${message} ${messageEnd}`);\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeValidators(validators) {\n    return validators != null ? Validators.compose(validators.map(normalizeValidator)) : null;\n}\n/**\n * @param {?} validators\n * @return {?}\n */\nfunction composeAsyncValidators(validators) {\n    return validators != null ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n        null;\n}\n/**\n * @param {?} changes\n * @param {?} viewModel\n * @return {?}\n */\nfunction isPropertyUpdated(changes, viewModel) {\n    if (!changes.hasOwnProperty('model'))\n        return false;\n    /** @type {?} */\n    const change = changes['model'];\n    if (change.isFirstChange())\n        return true;\n    return !ɵlooseIdentical(viewModel, change.currentValue);\n}\n/** @type {?} */\nconst BUILTIN_ACCESSORS = [\n    CheckboxControlValueAccessor,\n    RangeValueAccessor,\n    NumberValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n];\n/**\n * @param {?} valueAccessor\n * @return {?}\n */\nfunction isBuiltInAccessor(valueAccessor) {\n    return BUILTIN_ACCESSORS.some(a => valueAccessor.constructor === a);\n}\n/**\n * @param {?} form\n * @param {?} directives\n * @return {?}\n */\nfunction syncPendingControls(form, directives) {\n    form._syncPendingControls();\n    directives.forEach(dir => {\n        /** @type {?} */\n        const control = /** @type {?} */ (dir.control);\n        if (control.updateOn === 'submit' && control._pendingChange) {\n            dir.viewToModelUpdate(control._pendingValue);\n            control._pendingChange = false;\n        }\n    });\n}\n/**\n * @param {?} dir\n * @param {?} valueAccessors\n * @return {?}\n */\nfunction selectValueAccessor(dir, valueAccessors) {\n    if (!valueAccessors)\n        return null;\n    if (!Array.isArray(valueAccessors))\n        _throwError(dir, 'Value accessor was not provided as an array for form control with');\n    /** @type {?} */\n    let defaultAccessor = undefined;\n    /** @type {?} */\n    let builtinAccessor = undefined;\n    /** @type {?} */\n    let customAccessor = undefined;\n    valueAccessors.forEach((v) => {\n        if (v.constructor === DefaultValueAccessor) {\n            defaultAccessor = v;\n        }\n        else if (isBuiltInAccessor(v)) {\n            if (builtinAccessor)\n                _throwError(dir, 'More than one built-in value accessor matches form control with');\n            builtinAccessor = v;\n        }\n        else {\n            if (customAccessor)\n                _throwError(dir, 'More than one custom value accessor matches form control with');\n            customAccessor = v;\n        }\n    });\n    if (customAccessor)\n        return customAccessor;\n    if (builtinAccessor)\n        return builtinAccessor;\n    if (defaultAccessor)\n        return defaultAccessor;\n    _throwError(dir, 'No valid value accessor for form control with');\n    return null;\n}\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction removeDir(list, el) {\n    /** @type {?} */\n    const index = list.indexOf(el);\n    if (index > -1)\n        list.splice(index, 1);\n}\n/**\n * @param {?} name\n * @param {?} type\n * @param {?} instance\n * @param {?} warningConfig\n * @return {?}\n */\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n    if (!isDevMode() || warningConfig === 'never')\n        return;\n    if (((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce) ||\n        (warningConfig === 'always' && !instance._ngModelWarningSent)) {\n        ReactiveErrors.ngModelWarning(name);\n        type._ngModelWarningSentOnce = true;\n        instance._ngModelWarningSent = true;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n */\nclass AbstractFormGroupDirective extends ControlContainer {\n    /**\n     * \\@description\n     * An internal callback method triggered on the instance after the inputs are set.\n     * Registers the group with its parent group.\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormGroup(this);\n    }\n    /**\n     * \\@description\n     * An internal callback method triggered before the instance is destroyed.\n     * Removes the group from its parent group.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormGroup(this);\n        }\n    }\n    /**\n     * \\@description\n     * The `FormGroup` bound to this directive.\n     * @return {?}\n     */\n    get control() { return /** @type {?} */ ((this.formDirective)).getFormGroup(this); }\n    /**\n     * \\@description\n     * The path to this group from the top-level directive.\n     * @return {?}\n     */\n    get path() { return controlPath(this.name, this._parent); }\n    /**\n     * \\@description\n     * The top-level directive for this group if present, otherwise null.\n     * @return {?}\n     */\n    get formDirective() { return this._parent ? this._parent.formDirective : null; }\n    /**\n     * \\@description\n     * The synchronous validators registered with this group.\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._validators); }\n    /**\n     * \\@description\n     * The async validators registered with this group.\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _checkParentType() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass AbstractControlStatus {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) { this._cd = cd; }\n    /**\n     * @return {?}\n     */\n    get ngClassUntouched() { return this._cd.control ? this._cd.control.untouched : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassTouched() { return this._cd.control ? this._cd.control.touched : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassPristine() { return this._cd.control ? this._cd.control.pristine : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassDirty() { return this._cd.control ? this._cd.control.dirty : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassValid() { return this._cd.control ? this._cd.control.valid : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassInvalid() { return this._cd.control ? this._cd.control.invalid : false; }\n    /**\n     * @return {?}\n     */\n    get ngClassPending() { return this._cd.control ? this._cd.control.pending : false; }\n}\n/** @type {?} */\nconst ngControlStatusHost = {\n    '[class.ng-untouched]': 'ngClassUntouched',\n    '[class.ng-touched]': 'ngClassTouched',\n    '[class.ng-pristine]': 'ngClassPristine',\n    '[class.ng-dirty]': 'ngClassDirty',\n    '[class.ng-valid]': 'ngClassValid',\n    '[class.ng-invalid]': 'ngClassInvalid',\n    '[class.ng-pending]': 'ngClassPending',\n};\n/**\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status. The following classes are applied as the properties\n * become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass NgControlStatus extends AbstractControlStatus {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) { super(cd); }\n}\nNgControlStatus.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] }\n];\n/** @nocollapse */\nNgControlStatus.ctorParameters = () => [\n    { type: NgControl, decorators: [{ type: Self }] }\n];\n/**\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc).\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass NgControlStatusGroup extends AbstractControlStatus {\n    /**\n     * @param {?} cd\n     */\n    constructor(cd) { super(cd); }\n}\nNgControlStatusGroup.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                host: ngControlStatusHost\n            },] }\n];\n/** @nocollapse */\nNgControlStatusGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Self }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Reports that a FormControl is valid, meaning that no errors exist in the input value.\n *\n * @see `status`\n  @type {?} */\nconst VALID = 'VALID';\n/** *\n * Reports that a FormControl is invalid, meaning that an error exists in the input value.\n *\n * @see `status`\n  @type {?} */\nconst INVALID = 'INVALID';\n/** *\n * Reports that a FormControl is pending, meaning that that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see `markAsPending`\n * @see `status`\n  @type {?} */\nconst PENDING = 'PENDING';\n/** *\n * Reports that a FormControl is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see `markAsDisabled`\n * @see `status`\n  @type {?} */\nconst DISABLED = 'DISABLED';\n/**\n * @param {?} control\n * @param {?} path\n * @param {?} delimiter\n * @return {?}\n */\nfunction _find(control, path, delimiter) {\n    if (path == null)\n        return null;\n    if (!(path instanceof Array)) {\n        path = (/** @type {?} */ (path)).split(delimiter);\n    }\n    if (path instanceof Array && (path.length === 0))\n        return null;\n    return (/** @type {?} */ (path)).reduce((v, name) => {\n        if (v instanceof FormGroup) {\n            return v.controls.hasOwnProperty(/** @type {?} */ (name)) ? v.controls[name] : null;\n        }\n        if (v instanceof FormArray) {\n            return v.at(/** @type {?} */ (name)) || null;\n        }\n        return null;\n    }, control);\n}\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToValidator(validatorOrOpts) {\n    /** @type {?} */\n    const validator = /** @type {?} */ ((isOptionsObj(validatorOrOpts) ? (/** @type {?} */ (validatorOrOpts)).validators :\n        validatorOrOpts));\n    return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * @param {?=} asyncValidator\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction coerceToAsyncValidator(asyncValidator, validatorOrOpts) {\n    /** @type {?} */\n    const origAsyncValidator = /** @type {?} */ ((isOptionsObj(validatorOrOpts) ? (/** @type {?} */ (validatorOrOpts)).asyncValidators :\n        asyncValidator));\n    return Array.isArray(origAsyncValidator) ? composeAsyncValidators(origAsyncValidator) :\n        origAsyncValidator || null;\n}\n/**\n * @param {?=} validatorOrOpts\n * @return {?}\n */\nfunction isOptionsObj(validatorOrOpts) {\n    return validatorOrOpts != null && !Array.isArray(validatorOrOpts) &&\n        typeof validatorOrOpts === 'object';\n}\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @abstract\n */\nclass AbstractControl {\n    /**\n     * Initialize the AbstractControl instance.\n     *\n     * @param {?} validator The function that determines the synchronous validity of this control.\n     * @param {?} asyncValidator The function that determines the asynchronous validity of this\n     * control.\n     */\n    constructor(validator, asyncValidator) {\n        this.validator = validator;\n        this.asyncValidator = asyncValidator;\n        /**\n         * \\@internal\n         */\n        this._onCollectionChange = () => { };\n        /**\n         * A control is `pristine` if the user has not yet changed\n         * the value in the UI.\n         *\n         * @return True if the user has not yet changed the value in the UI; compare `dirty`.\n         * Programmatic changes to a control's value do not mark it dirty.\n         */\n        this.pristine = true;\n        /**\n         * True if the control is marked as `touched`.\n         *\n         * A control is marked `touched` once the user has triggered\n         * a `blur` event on it.\n         */\n        this.touched = false;\n        /**\n         * \\@internal\n         */\n        this._onDisabledChange = [];\n    }\n    /**\n     * The parent control.\n     * @return {?}\n     */\n    get parent() { return this._parent; }\n    /**\n     * A control is `valid` when its `status` is `VALID`.\n     *\n     * @see `status`\n     *\n     * @return {?} True if the control has passed all of its validation tests,\n     * false otherwise.\n     */\n    get valid() { return this.status === VALID; }\n    /**\n     * A control is `invalid` when its `status` is `INVALID`.\n     *\n     * @see `status`\n     *\n     * @return {?} True if this control has failed one or more of its validation checks,\n     * false otherwise.\n     */\n    get invalid() { return this.status === INVALID; }\n    /**\n     * A control is `pending` when its `status` is `PENDING`.\n     *\n     * @see `status`\n     *\n     * @return {?} True if this control is in the process of conducting a validation check,\n     * false otherwise.\n     */\n    get pending() { return this.status == PENDING; }\n    /**\n     * A control is `disabled` when its `status` is `DISABLED`.\n     *\n     * @see `status`\n     *\n     * Disabled controls are exempt from validation checks and\n     * are not included in the aggregate value of their ancestor\n     * controls.\n     *\n     * @return {?} True if the control is disabled, false otherwise.\n     */\n    get disabled() { return this.status === DISABLED; }\n    /**\n     * A control is `enabled` as long as its `status` is not `DISABLED`.\n     *\n     * @see `status`\n     *\n     * @return {?} True if the control has any status other than 'DISABLED',\n     * false if the status is 'DISABLED'.\n     *\n     */\n    get enabled() { return this.status !== DISABLED; }\n    /**\n     * A control is `dirty` if the user has changed the value\n     * in the UI.\n     *\n     * @return {?} True if the user has changed the value of this control in the UI; compare `pristine`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    get dirty() { return !this.pristine; }\n    /**\n     * True if the control has not been marked as touched\n     *\n     * A control is `untouched` if the user has not yet triggered\n     * a `blur` event on it.\n     * @return {?}\n     */\n    get untouched() { return !this.touched; }\n    /**\n     * Reports the update strategy of the `AbstractControl` (meaning\n     * the event on which the control updates itself).\n     * Possible values: `'change'` | `'blur'` | `'submit'`\n     * Default value: `'change'`\n     * @return {?}\n     */\n    get updateOn() {\n        return this._updateOn ? this._updateOn : (this.parent ? this.parent.updateOn : 'change');\n    }\n    /**\n     * Sets the synchronous validators that are active on this control.  Calling\n     * this overwrites any existing sync validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    setValidators(newValidator) {\n        this.validator = coerceToValidator(newValidator);\n    }\n    /**\n     * Sets the async validators that are active on this control. Calling this\n     * overwrites any existing async validators.\n     * @param {?} newValidator\n     * @return {?}\n     */\n    setAsyncValidators(newValidator) {\n        this.asyncValidator = coerceToAsyncValidator(newValidator);\n    }\n    /**\n     * Empties out the sync validator list.\n     * @return {?}\n     */\n    clearValidators() { this.validator = null; }\n    /**\n     * Empties out the async validator list.\n     * @return {?}\n     */\n    clearAsyncValidators() { this.asyncValidator = null; }\n    /**\n     * Marks the control as `touched`. A control is touched by focus and\n     * blur events that do not change the value; compare `markAsDirty`;\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes\n     * and emits events events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsTouched(opts = {}) {\n        (/** @type {?} */ (this)).touched = true;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `untouched`.\n     *\n     * If the control has any children, also marks all children as `untouched`\n     * and recalculates the `touched` status of all parent controls.\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes\n     * and emits events after the marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsUntouched(opts = {}) {\n        (/** @type {?} */ (this)).touched = false;\n        this._pendingTouched = false;\n        this._forEachChild((control) => { control.markAsUntouched({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * Marks the control as `dirty`. A control becomes dirty when\n     * the control's is changed through the UI; compare `markAsTouched`.\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes\n     * and emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false.\n     * @return {?}\n     */\n    markAsDirty(opts = {}) {\n        (/** @type {?} */ (this)).pristine = false;\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsDirty(opts);\n        }\n    }\n    /**\n     * Marks the control as `pristine`.\n     *\n     * If the control has any children, marks all children as `pristine`,\n     * and recalculates the `pristine` status of all parent\n     * controls.\n     *\n     * @param {?=} opts Configuration options that determine how the control emits events after\n     * marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * @return {?}\n     */\n    markAsPristine(opts = {}) {\n        (/** @type {?} */ (this)).pristine = true;\n        this._pendingDirty = false;\n        this._forEachChild((control) => { control.markAsPristine({ onlySelf: true }); });\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * Marks the control as `pending`.\n     *\n     * A control is pending while the control performs async validation.\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates changes and\n     * emits events after marking is applied.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n     * observable emits an event with the latest status the control is marked pending.\n     * When false, no events are emitted.\n     *\n     * @return {?}\n     */\n    markAsPending(opts = {}) {\n        (/** @type {?} */ (this)).status = PENDING;\n        if (opts.emitEvent !== false) {\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.markAsPending(opts);\n        }\n    }\n    /**\n     * Disables the control. This means the control is exempt from validation checks and\n     * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n     *\n     * If the control has children, all children are also disabled.\n     *\n     * @param {?=} opts Configuration options that determine how the control propagates\n     * changes and emits events after the control is disabled.\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is disabled.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    disable(opts = {}) {\n        (/** @type {?} */ (this)).status = DISABLED;\n        (/** @type {?} */ (this)).errors = null;\n        this._forEachChild((control) => { control.disable(Object.assign({}, opts, { onlySelf: true })); });\n        this._updateValue();\n        if (opts.emitEvent !== false) {\n            (/** @type {?} */ (this.valueChanges)).emit(this.value);\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        this._updateAncestors(opts);\n        this._onDisabledChange.forEach((changeFn) => changeFn(true));\n    }\n    /**\n     * Enables the control. This means the control is included in validation checks and\n     * the aggregate value of its parent. Its status recalculates based on its value and\n     * its validators.\n     *\n     * By default, if the control has children, all children are enabled.\n     *\n     * @param {?=} opts Configure options that control how the control propagates changes and\n     * emits events when marked as untouched\n     * * `onlySelf`: When true, mark only this control. When false or not supplied,\n     * marks all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is enabled.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    enable(opts = {}) {\n        (/** @type {?} */ (this)).status = VALID;\n        this._forEachChild((control) => { control.enable(Object.assign({}, opts, { onlySelf: true })); });\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n        this._updateAncestors(opts);\n        this._onDisabledChange.forEach((changeFn) => changeFn(false));\n    }\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    _updateAncestors(opts) {\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n            this._parent._updatePristine();\n            this._parent._updateTouched();\n        }\n    }\n    /**\n     * @param {?} parent Sets the parent of the control\n     * @return {?}\n     */\n    setParent(parent) { this._parent = parent; }\n    /**\n     * Recalculates the value and validation status of the control.\n     *\n     * By default, it also updates the value and validity of its ancestors.\n     *\n     * @param {?=} opts Configuration options determine how the control propagates changes and emits events\n     * after updates and validity checks are applied.\n     * * `onlySelf`: When true, only update this control. When false or not supplied,\n     * update all direct ancestors. Default is false..\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is updated.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    updateValueAndValidity(opts = {}) {\n        this._setInitialStatus();\n        this._updateValue();\n        if (this.enabled) {\n            this._cancelExistingSubscription();\n            (/** @type {?} */ (this)).errors = this._runValidator();\n            (/** @type {?} */ (this)).status = this._calculateStatus();\n            if (this.status === VALID || this.status === PENDING) {\n                this._runAsyncValidator(opts.emitEvent);\n            }\n        }\n        if (opts.emitEvent !== false) {\n            (/** @type {?} */ (this.valueChanges)).emit(this.value);\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        if (this._parent && !opts.onlySelf) {\n            this._parent.updateValueAndValidity(opts);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _updateTreeValidity(opts = { emitEvent: true }) {\n        this._forEachChild((ctrl) => ctrl._updateTreeValidity(opts));\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: opts.emitEvent });\n    }\n    /**\n     * @return {?}\n     */\n    _setInitialStatus() {\n        (/** @type {?} */ (this)).status = this._allControlsDisabled() ? DISABLED : VALID;\n    }\n    /**\n     * @return {?}\n     */\n    _runValidator() {\n        return this.validator ? this.validator(this) : null;\n    }\n    /**\n     * @param {?=} emitEvent\n     * @return {?}\n     */\n    _runAsyncValidator(emitEvent) {\n        if (this.asyncValidator) {\n            (/** @type {?} */ (this)).status = PENDING;\n            /** @type {?} */\n            const obs = toObservable(this.asyncValidator(this));\n            this._asyncValidationSubscription =\n                obs.subscribe((errors) => this.setErrors(errors, { emitEvent }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _cancelExistingSubscription() {\n        if (this._asyncValidationSubscription) {\n            this._asyncValidationSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Sets errors on a form control when running validations manually, rather than automatically.\n     *\n     * Calling `setErrors` also updates the validity of the parent control.\n     *\n     * \\@usageNotes\n     * ### Manually set the errors for a control\n     *\n     * ```\n     * const login = new FormControl('someLogin');\n     * login.setErrors({\n     *   notUnique: true\n     * });\n     *\n     * expect(login.valid).toEqual(false);\n     * expect(login.errors).toEqual({ notUnique: true });\n     *\n     * login.setValue('someOtherLogin');\n     *\n     * expect(login.valid).toEqual(true);\n     * ```\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    setErrors(errors, opts = {}) {\n        (/** @type {?} */ (this)).errors = errors;\n        this._updateControlsErrors(opts.emitEvent !== false);\n    }\n    /**\n     * Retrieves a child control given the control's name or path.\n     *\n     * \\@usageNotes\n     * ### Retrieve a nested control\n     *\n     * For example, to get a `name` control nested within a `person` sub-group:\n     *\n     * * `this.form.get('person.name');`\n     *\n     * -OR-\n     *\n     * * `this.form.get(['person', 'name']);`\n     * @param {?} path A dot-delimited string or array of string/number values that define the path to the\n     * control.\n     *\n     * @return {?}\n     */\n    get(path) { return _find(this, path, '.'); }\n    /**\n     * Reports error data for a specific error occurring in this control or in another control.\n     *\n     * @param {?} errorCode The error code for which to retrieve data\n     * @param {?=} path The path to a control to check. If not supplied, checks for the error in this\n     * control.\n     *\n     * @return {?} The error data if the control with the given path has the given error, otherwise null\n     * or undefined.\n     */\n    getError(errorCode, path) {\n        /** @type {?} */\n        const control = path ? this.get(path) : this;\n        return control && control.errors ? control.errors[errorCode] : null;\n    }\n    /**\n     * Reports whether the control with the given path has the error specified.\n     *\n     * @param {?} errorCode The error code for which to retrieve data\n     * @param {?=} path The path to a control to check. If not supplied, checks for the error in this\n     * control.\n     * @return {?} True when the control with the given path has the error, otherwise false.\n     */\n    hasError(errorCode, path) { return !!this.getError(errorCode, path); }\n    /**\n     * Retrieves the top-level ancestor of this control.\n     * @return {?}\n     */\n    get root() {\n        /** @type {?} */\n        let x = this;\n        while (x._parent) {\n            x = x._parent;\n        }\n        return x;\n    }\n    /**\n     * \\@internal\n     * @param {?} emitEvent\n     * @return {?}\n     */\n    _updateControlsErrors(emitEvent) {\n        (/** @type {?} */ (this)).status = this._calculateStatus();\n        if (emitEvent) {\n            (/** @type {?} */ (this.statusChanges)).emit(this.status);\n        }\n        if (this._parent) {\n            this._parent._updateControlsErrors(emitEvent);\n        }\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _initObservables() {\n        (/** @type {?} */ (this)).valueChanges = new EventEmitter();\n        (/** @type {?} */ (this)).statusChanges = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    _calculateStatus() {\n        if (this._allControlsDisabled())\n            return DISABLED;\n        if (this.errors)\n            return INVALID;\n        if (this._anyControlsHaveStatus(PENDING))\n            return PENDING;\n        if (this._anyControlsHaveStatus(INVALID))\n            return INVALID;\n        return VALID;\n    }\n    /**\n     * \\@internal\n     * @param {?} status\n     * @return {?}\n     */\n    _anyControlsHaveStatus(status) {\n        return this._anyControls((control) => control.status === status);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _anyControlsDirty() {\n        return this._anyControls((control) => control.dirty);\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _anyControlsTouched() {\n        return this._anyControls((control) => control.touched);\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _updatePristine(opts = {}) {\n        (/** @type {?} */ (this)).pristine = !this._anyControlsDirty();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updatePristine(opts);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _updateTouched(opts = {}) {\n        (/** @type {?} */ (this)).touched = this._anyControlsTouched();\n        if (this._parent && !opts.onlySelf) {\n            this._parent._updateTouched(opts);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} formState\n     * @return {?}\n     */\n    _isBoxedValue(formState) {\n        return typeof formState === 'object' && formState !== null &&\n            Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    _registerOnCollectionChange(fn) { this._onCollectionChange = fn; }\n    /**\n     * \\@internal\n     * @param {?=} opts\n     * @return {?}\n     */\n    _setUpdateStrategy(opts) {\n        if (isOptionsObj(opts) && (/** @type {?} */ (opts)).updateOn != null) {\n            this._updateOn = /** @type {?} */ (((/** @type {?} */ (opts)).updateOn));\n        }\n    }\n}\n/**\n * Tracks the value and validation status of an individual form control.\n *\n * This is one of the three fundamental building blocks of Angular forms, along with\n * `FormGroup` and `FormArray`. It extends the `AbstractControl` class that\n * implements most of the base functionality for accessing the value, validation status,\n * user interactions and events.\n *\n * @see `AbstractControl`\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see [Usage Notes](#usage-notes)\n *\n * \\@usageNotes\n *\n * ### Initializing Form Controls\n *\n * Instantiate a `FormControl`, with an initial value.\n *\n * ```ts\n * const control = new FormControl('some value');\n * console.log(control.value);     // 'some value'\n * ```\n *\n * The following example initializes the control with a form state object. The `value`\n * and `disabled` keys are required in this case.\n *\n * ```ts\n * const control = new FormControl({ value: 'n/a', disabled: true });\n * console.log(control.value);     // 'n/a'\n * console.log(control.status);    // 'DISABLED'\n * ```\n *\n * The following example initializes the control with a sync validator.\n *\n * ```ts\n * const control = new FormControl('', Validators.required);\n * console.log(control.value);      // ''\n * console.log(control.status);     // 'INVALID'\n * ```\n *\n * The following example initializes the control using an options object.\n *\n * ```ts\n * const control = new FormControl('', {\n *    validators: Validators.required,\n *    asyncValidators: myAsyncValidator\n * });\n * ```\n *\n * ### Configure the control to update on a blur event\n *\n * Set the `updateOn` option to `'blur'` to update on the blur `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'blur' });\n * ```\n *\n * ### Configure the control to update on a submit event\n *\n * Set the `updateOn` option to `'submit'` to update on a submit `event`.\n *\n * ```ts\n * const control = new FormControl('', { updateOn: 'submit' });\n * ```\n *\n * ### Reset the control back to an initial value\n *\n * You reset to a specific form state by passing through a standalone\n * value or a form state object that contains both a value and a disabled state\n * (these are the only two properties that cannot be calculated).\n *\n * ```ts\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n *\n * control.reset('Drew');\n *\n * console.log(control.value); // 'Drew'\n * ```\n *\n * ### Reset the control back to an initial value and disabled\n *\n * ```\n * const control = new FormControl('Nancy');\n *\n * console.log(control.value); // 'Nancy'\n * console.log(control.status); // 'VALID'\n *\n * control.reset({ value: 'Drew', disabled: true });\n *\n * console.log(control.value); // 'Drew'\n * console.log(control.status); // 'DISABLED'\n *\n */\nclass FormControl extends AbstractControl {\n    /**\n     * Creates a new `FormControl` instance.\n     *\n     * @param {?=} formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(formState = null, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        /**\n         * \\@internal\n         */\n        this._onChange = [];\n        this._applyFormState(formState);\n        this._setUpdateStrategy(validatorOrOpts);\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        this._initObservables();\n    }\n    /**\n     * Sets a new value for the form control.\n     *\n     * @param {?} value The new value for the control.\n     * @param {?=} options Configuration options that determine how the control proopagates changes\n     * and emits events when the value changes.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * * `emitModelToViewChange`: When true or not supplied  (the default), each change triggers an\n     * `onChange` event to\n     * update the view.\n     * * `emitViewToModelChange`: When true or not supplied (the default), each change triggers an\n     * `ngModelChange`\n     * event to update the model.\n     *\n     * @return {?}\n     */\n    setValue(value, options = {}) {\n        (/** @type {?} */ (this)).value = this._pendingValue = value;\n        if (this._onChange.length && options.emitModelToViewChange !== false) {\n            this._onChange.forEach((changeFn) => changeFn(this.value, options.emitViewToModelChange !== false));\n        }\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of a control.\n     *\n     * This function is functionally the same as {\\@link FormControl#setValue setValue} at this level.\n     * It exists for symmetry with {\\@link FormGroup#patchValue patchValue} on `FormGroups` and\n     * `FormArrays`, where it does behave differently.\n     *\n     * @see `setValue` for options\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    patchValue(value, options = {}) {\n        this.setValue(value, options);\n    }\n    /**\n     * Resets the form control, marking it `pristine` and `untouched`, and setting\n     * the value to null.\n     *\n     * @param {?=} formState Resets the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     *\n     * @return {?}\n     */\n    reset(formState = null, options = {}) {\n        this._applyFormState(formState);\n        this.markAsPristine(options);\n        this.markAsUntouched(options);\n        this.setValue(this.value, options);\n        this._pendingChange = false;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateValue() { }\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    _anyControls(condition) { return false; }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _allControlsDisabled() { return this.disabled; }\n    /**\n     * Register a listener for change events.\n     *\n     * @param {?} fn The method that is called when the value changes\n     * @return {?}\n     */\n    registerOnChange(fn) { this._onChange.push(fn); }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _clearChangeFns() {\n        this._onChange = [];\n        this._onDisabledChange = [];\n        this._onCollectionChange = () => { };\n    }\n    /**\n     * Register a listener for disabled events.\n     *\n     * @param {?} fn The method that is called when the disabled status changes.\n     * @return {?}\n     */\n    registerOnDisabledChange(fn) {\n        this._onDisabledChange.push(fn);\n    }\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    _forEachChild(cb) { }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _syncPendingControls() {\n        if (this.updateOn === 'submit') {\n            if (this._pendingDirty)\n                this.markAsDirty();\n            if (this._pendingTouched)\n                this.markAsTouched();\n            if (this._pendingChange) {\n                this.setValue(this._pendingValue, { onlySelf: true, emitModelToViewChange: false });\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * @param {?} formState\n     * @return {?}\n     */\n    _applyFormState(formState) {\n        if (this._isBoxedValue(formState)) {\n            (/** @type {?} */ (this)).value = this._pendingValue = formState.value;\n            formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                this.enable({ onlySelf: true, emitEvent: false });\n        }\n        else {\n            (/** @type {?} */ (this)).value = this._pendingValue = formState;\n        }\n    }\n}\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormArray`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * \\@usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n */\nclass FormGroup extends AbstractControl {\n    /**\n     * Creates a new `FormGroup` instance.\n     *\n     * @param {?} controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Registers a control with the group's list of controls.\n     *\n     * This method does not update the value or validity of the control.\n     * Use {\\@link FormGroup#addControl addControl} instead.\n     *\n     * @param {?} name The control name to register in the collection\n     * @param {?} control Provides the control for the given name\n     * @return {?}\n     */\n    registerControl(name, control) {\n        if (this.controls[name])\n            return this.controls[name];\n        this.controls[name] = control;\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n        return control;\n    }\n    /**\n     * Add a control to this group.\n     *\n     * This method also updates the value and validity of the control.\n     *\n     * @param {?} name The control name to add to the collection\n     * @param {?} control Provides the control for the given name\n     * @return {?}\n     */\n    addControl(name, control) {\n        this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Remove a control from this group.\n     *\n     * @param {?} name The control name to remove from the collection\n     * @return {?}\n     */\n    removeControl(name) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param {?} name The control name to replace in the collection\n     * @param {?} control Provides the control for the given name\n     * @return {?}\n     */\n    setControl(name, control) {\n        if (this.controls[name])\n            this.controls[name]._registerOnCollectionChange(() => { });\n        delete (this.controls[name]);\n        if (control)\n            this.registerControl(name, control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Check whether there is an enabled control with the given name in the group.\n     *\n     * Reports false for disabled controls. If you'd like to check for existence in the group\n     * only, use {\\@link AbstractControl#get get} instead.\n     *\n     * @param {?} controlName\n     * @return {?} false for disabled controls, true otherwise.\n     */\n    contains(controlName) {\n        return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n    }\n    /**\n     * Sets the value of the `FormGroup`. It accepts an object that matches\n     * the structure of the group, with control names as keys.\n     *\n     * \\@usageNotes\n     * ### Set the complete value for the form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl(),\n     *   last: new FormControl()\n     * });\n     *\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.setValue({first: 'Nancy', last: 'Drew'});\n     * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n     * ```\n     *\n     * @throws When strict checks fail, such as setting the value of a control\n     * that doesn't exist or if you excluding the value of a control.\n     *\n     * @param {?} value The new value for the control that matches the structure of the group.\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events after the value changes.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * @return {?}\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        Object.keys(value).forEach(name => {\n            this._throwIfControlMissing(name);\n            this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormGroup`. It accepts an object with control\n     * names as keys, and does its best to match the values to the correct controls\n     * in the group.\n     *\n     * It accepts both super-sets and sub-sets of the group without throwing an error.\n     *\n     * \\@usageNotes\n     * ### Patch the value for a form group\n     *\n     * ```\n     * const form = new FormGroup({\n     *    first: new FormControl(),\n     *    last: new FormControl()\n     * });\n     * console.log(form.value);   // {first: null, last: null}\n     *\n     * form.patchValue({first: 'Nancy'});\n     * console.log(form.value);   // {first: 'Nancy', last: null}\n     * ```\n     *\n     * @param {?} value The object that matches the structure of the group.\n     * @param {?=} options Configuration options that determine how the control propagates changes and\n     * emits events after the value is patched.\n     * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n     * true.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    patchValue(value, options = {}) {\n        Object.keys(value).forEach(name => {\n            if (this.controls[name]) {\n                this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormGroup`, marks all descendants are marked `pristine` and `untouched`, and\n     * the value of all descendants to null.\n     *\n     * You reset to a specific form state by passing in a map of states\n     * that matches the structure of your form, with control names as keys. The state\n     * is a standalone value or a form state object with both a value and a disabled\n     * status.\n     *\n     * \\@usageNotes\n     *\n     * ### Reset the form group values\n     *\n     * ```ts\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * console.log(form.value);  // {first: 'first name', last: 'last name'}\n     *\n     * form.reset({ first: 'name', last: 'last name' });\n     *\n     * console.log(form.value);  // {first: 'name', last: 'last name'}\n     * ```\n     *\n     * ### Reset the form group values and disabled status\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('first name'),\n     *   last: new FormControl('last name')\n     * });\n     *\n     * form.reset({\n     *   first: {value: 'name', disabled: true},\n     *   last: 'last'\n     * });\n     *\n     * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n     * console.log(this.form.get('first').status);  // 'DISABLED'\n     * ```\n     * @param {?=} value\n     * @param {?=} options Configuration options that determine how the control propagates changes\n     * and emits events when the group is reset.\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n     * false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     *\n     * @return {?}\n     */\n    reset(value = {}, options = {}) {\n        this._forEachChild((control, name) => {\n            control.reset(value[name], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    }\n    /**\n     * The aggregate value of the `FormGroup`, including any disabled controls.\n     *\n     * Retrieves all values regardless of disabled status.\n     * The `value` property is the best way to get the value of the group, because\n     * it excludes disabled controls in the `FormGroup`.\n     * @return {?}\n     */\n    getRawValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            acc[name] = control instanceof FormControl ? control.value : (/** @type {?} */ (control)).getRawValue();\n            return acc;\n        });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _syncPendingControls() {\n        /** @type {?} */\n        let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        });\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /**\n     * \\@internal\n     * @param {?} name\n     * @return {?}\n     */\n    _throwIfControlMissing(name) {\n        if (!Object.keys(this.controls).length) {\n            throw new Error(`\n        There are no form controls registered with this group yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.controls[name]) {\n            throw new Error(`Cannot find form control with name: ${name}.`);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    _forEachChild(cb) {\n        Object.keys(this.controls).forEach(k => cb(this.controls[k], k));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _setUpControls() {\n        this._forEachChild((control) => {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateValue() { (/** @type {?} */ (this)).value = this._reduceValue(); }\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    _anyControls(condition) {\n        /** @type {?} */\n        let res = false;\n        this._forEachChild((control, name) => {\n            res = res || (this.contains(name) && condition(control));\n        });\n        return res;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _reduceValue() {\n        return this._reduceChildren({}, (acc, control, name) => {\n            if (control.enabled || this.disabled) {\n                acc[name] = control.value;\n            }\n            return acc;\n        });\n    }\n    /**\n     * \\@internal\n     * @param {?} initValue\n     * @param {?} fn\n     * @return {?}\n     */\n    _reduceChildren(initValue, fn) {\n        /** @type {?} */\n        let res = initValue;\n        this._forEachChild((control, name) => { res = fn(res, control, name); });\n        return res;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _allControlsDisabled() {\n        for (const controlName of Object.keys(this.controls)) {\n            if (this.controls[controlName].enabled) {\n                return false;\n            }\n        }\n        return Object.keys(this.controls).length > 0 || this.disabled;\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, name) => {\n            if (value[name] === undefined) {\n                throw new Error(`Must supply a value for form control with name: '${name}'.`);\n            }\n        });\n    }\n}\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n * along with `FormControl` and `FormGroup`.\n *\n * \\@usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n *\n */\nclass FormArray extends AbstractControl {\n    /**\n     * Creates a new `FormArray` instance.\n     *\n     * @param {?} controls An array of child controls. Each child control is given an index\n     * where it is registered.\n     *\n     * @param {?=} validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or an `AbstractControlOptions` object that contains validation functions\n     * and a validation trigger.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     */\n    constructor(controls, validatorOrOpts, asyncValidator) {\n        super(coerceToValidator(validatorOrOpts), coerceToAsyncValidator(asyncValidator, validatorOrOpts));\n        this.controls = controls;\n        this._initObservables();\n        this._setUpdateStrategy(validatorOrOpts);\n        this._setUpControls();\n        this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n    }\n    /**\n     * Get the `AbstractControl` at the given `index` in the array.\n     *\n     * @param {?} index Index in the array to retrieve the control\n     * @return {?}\n     */\n    at(index) { return this.controls[index]; }\n    /**\n     * Insert a new `AbstractControl` at the end of the array.\n     *\n     * @param {?} control Form control to be inserted\n     * @return {?}\n     */\n    push(control) {\n        this.controls.push(control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Insert a new `AbstractControl` at the given `index` in the array.\n     *\n     * @param {?} index Index in the array to insert the control\n     * @param {?} control Form control to be inserted\n     * @return {?}\n     */\n    insert(index, control) {\n        this.controls.splice(index, 0, control);\n        this._registerControl(control);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Remove the control at the given `index` in the array.\n     *\n     * @param {?} index Index in the array to remove the control\n     * @return {?}\n     */\n    removeAt(index) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        this.updateValueAndValidity();\n    }\n    /**\n     * Replace an existing control.\n     *\n     * @param {?} index Index in the array to replace the control\n     * @param {?} control The `AbstractControl` control to replace the existing control\n     * @return {?}\n     */\n    setControl(index, control) {\n        if (this.controls[index])\n            this.controls[index]._registerOnCollectionChange(() => { });\n        this.controls.splice(index, 1);\n        if (control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n        }\n        this.updateValueAndValidity();\n        this._onCollectionChange();\n    }\n    /**\n     * Length of the control array.\n     * @return {?}\n     */\n    get length() { return this.controls.length; }\n    /**\n     * Sets the value of the `FormArray`. It accepts an array that matches\n     * the structure of the control.\n     *\n     * This method performs strict checks, and throws an error if you try\n     * to set the value of a control that doesn't exist or if you exclude the\n     * value of a control.\n     *\n     * \\@usageNotes\n     * ### Set the values for the controls in the form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl(),\n     *   new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.setValue(['Nancy', 'Drew']);\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * ```\n     *\n     * @param {?} value Array of values for the controls\n     * @param {?=} options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    setValue(value, options = {}) {\n        this._checkAllValuesPresent(value);\n        value.forEach((newValue, index) => {\n            this._throwIfControlMissing(index);\n            this.at(index).setValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Patches the value of the `FormArray`. It accepts an array that matches the\n     * structure of the control, and does its best to match the values to the correct\n     * controls in the group.\n     *\n     * It accepts both super-sets and sub-sets of the array without throwing an error.\n     *\n     * \\@usageNotes\n     * ### Patch the values for controls in a form array\n     *\n     * ```\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * console.log(arr.value);   // [null, null]\n     *\n     * arr.patchValue(['Nancy']);\n     * console.log(arr.value);   // ['Nancy', null]\n     * ```\n     *\n     * @param {?} value Array of latest values for the controls\n     * @param {?=} options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control value is updated.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    patchValue(value, options = {}) {\n        value.forEach((newValue, index) => {\n            if (this.at(index)) {\n                this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: options.emitEvent });\n            }\n        });\n        this.updateValueAndValidity(options);\n    }\n    /**\n     * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n     * value of all descendants to null or null maps.\n     *\n     * You reset to a specific form state by passing in an array of states\n     * that matches the structure of the control. The state is a standalone value\n     * or a form state object with both a value and a disabled status.\n     *\n     * \\@usageNotes\n     * ### Reset the values in a form array\n     *\n     * ```ts\n     * const arr = new FormArray([\n     *    new FormControl(),\n     *    new FormControl()\n     * ]);\n     * arr.reset(['name', 'last name']);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * ```\n     *\n     * ### Reset the values in a form array and the disabled status for the first control\n     *\n     * ```\n     * this.arr.reset([\n     *   {value: 'name', disabled: true},\n     *   'last'\n     * ]);\n     *\n     * console.log(this.arr.value);  // ['name', 'last name']\n     * console.log(this.arr.get(0).status);  // 'DISABLED'\n     * ```\n     *\n     * @param {?=} value Array of values for the controls\n     * @param {?=} options Configure options that determine how the control propagates changes and\n     * emits events after the value changes\n     *\n     * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n     * is false.\n     * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n     * `valueChanges`\n     * observables emit events with the latest status and value when the control is reset.\n     * When false, no events are emitted.\n     * The configuration options are passed to the {\\@link AbstractControl#updateValueAndValidity\n     * updateValueAndValidity} method.\n     * @return {?}\n     */\n    reset(value = [], options = {}) {\n        this._forEachChild((control, index) => {\n            control.reset(value[index], { onlySelf: true, emitEvent: options.emitEvent });\n        });\n        this.updateValueAndValidity(options);\n        this._updatePristine(options);\n        this._updateTouched(options);\n    }\n    /**\n     * The aggregate value of the array, including any disabled controls.\n     *\n     * Reports all values regardless of disabled status.\n     * For enabled controls only, the `value` property is the best way to get the value of the array.\n     * @return {?}\n     */\n    getRawValue() {\n        return this.controls.map((control) => {\n            return control instanceof FormControl ? control.value : (/** @type {?} */ (control)).getRawValue();\n        });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _syncPendingControls() {\n        /** @type {?} */\n        let subtreeUpdated = this.controls.reduce((updated, child) => {\n            return child._syncPendingControls() ? true : updated;\n        }, false);\n        if (subtreeUpdated)\n            this.updateValueAndValidity({ onlySelf: true });\n        return subtreeUpdated;\n    }\n    /**\n     * \\@internal\n     * @param {?} index\n     * @return {?}\n     */\n    _throwIfControlMissing(index) {\n        if (!this.controls.length) {\n            throw new Error(`\n        There are no form controls registered with this array yet.  If you're using ngModel,\n        you may want to check next tick (e.g. use setTimeout).\n      `);\n        }\n        if (!this.at(index)) {\n            throw new Error(`Cannot find form control at index ${index}`);\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} cb\n     * @return {?}\n     */\n    _forEachChild(cb) {\n        this.controls.forEach((control, index) => { cb(control, index); });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateValue() {\n        (/** @type {?} */ (this)).value =\n            this.controls.filter((control) => control.enabled || this.disabled)\n                .map((control) => control.value);\n    }\n    /**\n     * \\@internal\n     * @param {?} condition\n     * @return {?}\n     */\n    _anyControls(condition) {\n        return this.controls.some((control) => control.enabled && condition(control));\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _setUpControls() {\n        this._forEachChild((control) => this._registerControl(control));\n    }\n    /**\n     * \\@internal\n     * @param {?} value\n     * @return {?}\n     */\n    _checkAllValuesPresent(value) {\n        this._forEachChild((control, i) => {\n            if (value[i] === undefined) {\n                throw new Error(`Must supply a value for form control at index: ${i}.`);\n            }\n        });\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _allControlsDisabled() {\n        for (const control of this.controls) {\n            if (control.enabled)\n                return false;\n        }\n        return this.controls.length > 0 || this.disabled;\n    }\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    _registerControl(control) {\n        control.setParent(this);\n        control._registerOnCollectionChange(this._onCollectionChange);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formDirectiveProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgForm)\n};\n/** @type {?} */\nconst resolvedPromise = Promise.resolve(null);\n/**\n * \\@description\n *\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You can export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * will give you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, you'll want to use `NgModel` with a\n * `name` attribute.  You can also use `NgModelGroup` if you'd like to create\n * sub-groups within the form.\n *\n * You can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * If you want to import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, you can add `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * **npm package**: `\\@angular/forms`\n *\n * \\@ngModule FormsModule\n */\nclass NgForm extends ControlContainer {\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(validators, asyncValidators) {\n        super();\n        this.submitted = false;\n        this._directives = [];\n        this.ngSubmit = new EventEmitter();\n        this.form =\n            new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() { this._setUpdateStrategy(); }\n    /**\n     * @return {?}\n     */\n    get formDirective() { return this; }\n    /**\n     * @return {?}\n     */\n    get control() { return this.form; }\n    /**\n     * @return {?}\n     */\n    get path() { return []; }\n    /**\n     * @return {?}\n     */\n    get controls() { return this.form.controls; }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    addControl(dir) {\n        resolvedPromise.then(() => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            (/** @type {?} */ (dir)).control = /** @type {?} */ (container.registerControl(dir.name, dir.control));\n            setUpControl(dir.control, dir);\n            dir.control.updateValueAndValidity({ emitEvent: false });\n            this._directives.push(dir);\n        });\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    getControl(dir) { return /** @type {?} */ (this.form.get(dir.path)); }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    removeControl(dir) {\n        resolvedPromise.then(() => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n            removeDir(this._directives, dir);\n        });\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    addFormGroup(dir) {\n        resolvedPromise.then(() => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            /** @type {?} */\n            const group = new FormGroup({});\n            setUpFormContainer(group, dir);\n            container.registerControl(dir.name, group);\n            group.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    removeFormGroup(dir) {\n        resolvedPromise.then(() => {\n            /** @type {?} */\n            const container = this._findContainer(dir.path);\n            if (container) {\n                container.removeControl(dir.name);\n            }\n        });\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    getFormGroup(dir) { return /** @type {?} */ (this.form.get(dir.path)); }\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    updateModel(dir, value) {\n        resolvedPromise.then(() => {\n            /** @type {?} */\n            const ctrl = /** @type {?} */ (this.form.get(/** @type {?} */ ((dir.path))));\n            ctrl.setValue(value);\n        });\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    setValue(value) { this.control.setValue(value); }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onSubmit($event) {\n        (/** @type {?} */ (this)).submitted = true;\n        syncPendingControls(this.form, this._directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    onReset() { this.resetForm(); }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        (/** @type {?} */ (this)).submitted = false;\n    }\n    /**\n     * @return {?}\n     */\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.form._updateOn = this.options.updateOn;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} path\n     * @return {?}\n     */\n    _findContainer(path) {\n        path.pop();\n        return path.length ? /** @type {?} */ (this.form.get(path)) : this.form;\n    }\n}\nNgForm.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                providers: [formDirectiveProvider],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                outputs: ['ngSubmit'],\n                exportAs: 'ngForm'\n            },] }\n];\n/** @nocollapse */\nNgForm.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgForm.propDecorators = {\n    options: [{ type: Input, args: ['ngFormOptions',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass TemplateDrivenErrors {\n    /**\n     * @return {?}\n     */\n    static modelParentException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n      formGroup's partner directive \"formControlName\" instead.  Example:\n\n      ${FormErrorExamples.formControlName}\n\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n      Example:\n\n      ${FormErrorExamples.ngModelWithFormGroup}`);\n    }\n    /**\n     * @return {?}\n     */\n    static formGroupNameException() {\n        throw new Error(`\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n    /**\n     * @return {?}\n     */\n    static missingNameException() {\n        throw new Error(`If ngModel is used within a form tag, either the name attribute must be set or the form\n      control must be defined as 'standalone' in ngModelOptions.\n\n      Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n      Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n    }\n    /**\n     * @return {?}\n     */\n    static modelGroupParentException() {\n        throw new Error(`\n      ngModelGroup cannot be used with a parent formGroup directive.\n\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n      ${FormErrorExamples.formGroupName}\n\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n      ${FormErrorExamples.ngModelGroup}`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst modelGroupProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => NgModelGroup)\n};\n/**\n * \\@description\n *\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (or in other words,\n * within `<form>` tags).\n *\n * Use this directive if you'd like to create a sub-group within a form. This can\n * come in handy if you want to validate a sub-group of your form separately from\n * the rest of your form, or if some values in your domain model make more sense to\n * consume together in a nested object.\n *\n * Pass in the name you'd like this sub-group to have and it will become the key\n * for the sub-group in the form's full value. You can also export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * \\@ngModule FormsModule\n */\nclass NgModelGroup extends AbstractFormGroupDirective {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelGroupParentException();\n        }\n    }\n}\nNgModelGroup.decorators = [\n    { type: Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] }\n];\n/** @nocollapse */\nNgModelGroup.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nNgModelGroup.propDecorators = {\n    name: [{ type: Input, args: ['ngModelGroup',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formControlBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => NgModel)\n};\n/** *\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have and old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel` have been changed.\n * - this is a general problem when using `exportAs` for directives!\n  @type {?} */\nconst resolvedPromise$1 = Promise.resolve(null);\n/**\n * \\@description\n *\n * Creates a `FormControl` instance from a domain model and binds it\n * to a form control element.\n *\n * The `FormControl` instance will track the value, user interaction, and\n * validation status of the control and keep the view synced with the model. If used\n * within a parent form, the directive will also register itself with the form as a child\n * control.\n *\n * This directive can be used by itself or as part of a larger form. All you need is the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n * the domain model in your class as well.\n *\n * If you wish to inspect the properties of the associated `FormControl` (like\n * validity state), you can also export the directive into a local template variable using\n * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n * will fall through to the control anyway, so you can access them directly. You can see a\n * full list of properties directly available in `AbstractControlDirective`.\n *\n * The following is an example of a simple standalone control using `ngModel`:\n *\n * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * It's worth noting that in the context of a parent form, you often can skip one-way or\n * two-way binding because the parent form will sync the value for you. You can access\n * its properties by exporting it into a local template variable using `ngForm` (ex:\n * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * Take a look at an example of using `ngModel` within a form:\n *\n * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * To see `ngModel` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * \\@ngModule FormsModule\n */\nclass NgModel extends NgControl {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     */\n    constructor(parent, validators, asyncValidators, valueAccessors) {\n        super();\n        this.control = new FormControl();\n        /**\n         * \\@internal\n         */\n        this._registered = false;\n        this.update = new EventEmitter();\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._checkForErrors();\n        if (!this._registered)\n            this._setUpControl();\n        if ('isDisabled' in changes) {\n            this._updateDisabled(changes);\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            this._updateValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this.formDirective && this.formDirective.removeControl(this); }\n    /**\n     * @return {?}\n     */\n    get path() {\n        return this._parent ? controlPath(this.name, this._parent) : [this.name];\n    }\n    /**\n     * @return {?}\n     */\n    get formDirective() { return this._parent ? this._parent.formDirective : null; }\n    /**\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._rawValidators); }\n    /**\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @return {?}\n     */\n    _setUpControl() {\n        this._setUpdateStrategy();\n        this._isStandalone() ? this._setUpStandalone() :\n            this.formDirective.addControl(this);\n        this._registered = true;\n    }\n    /**\n     * @return {?}\n     */\n    _setUpdateStrategy() {\n        if (this.options && this.options.updateOn != null) {\n            this.control._updateOn = this.options.updateOn;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _isStandalone() {\n        return !this._parent || !!(this.options && this.options.standalone);\n    }\n    /**\n     * @return {?}\n     */\n    _setUpStandalone() {\n        setUpControl(this.control, this);\n        this.control.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * @return {?}\n     */\n    _checkForErrors() {\n        if (!this._isStandalone()) {\n            this._checkParentType();\n        }\n        this._checkName();\n    }\n    /**\n     * @return {?}\n     */\n    _checkParentType() {\n        if (!(this._parent instanceof NgModelGroup) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            TemplateDrivenErrors.formGroupNameException();\n        }\n        else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n            TemplateDrivenErrors.modelParentException();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _checkName() {\n        if (this.options && this.options.name)\n            this.name = this.options.name;\n        if (!this._isStandalone() && !this.name) {\n            TemplateDrivenErrors.missingNameException();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _updateValue(value) {\n        resolvedPromise$1.then(() => { this.control.setValue(value, { emitViewToModelChange: false }); });\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    _updateDisabled(changes) {\n        /** @type {?} */\n        const disabledValue = changes['isDisabled'].currentValue;\n        /** @type {?} */\n        const isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n        resolvedPromise$1.then(() => {\n            if (isDisabled && !this.control.disabled) {\n                this.control.disable();\n            }\n            else if (!isDisabled && this.control.disabled) {\n                this.control.enable();\n            }\n        });\n    }\n}\nNgModel.decorators = [\n    { type: Directive, args: [{\n                selector: '[ngModel]:not([formControlName]):not([formControl])',\n                providers: [formControlBinding],\n                exportAs: 'ngModel'\n            },] }\n];\n/** @nocollapse */\nNgModel.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] }\n];\nNgModel.propDecorators = {\n    name: [{ type: Input }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    options: [{ type: Input, args: ['ngModelOptions',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** *\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n  @type {?} */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = new InjectionToken('NgModelWithFormControlWarning');\n/** @type {?} */\nconst formControlBinding$1 = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlDirective)\n};\n/**\n * \\@description\n *\n * Syncs a standalone `FormControl` instance to a form control element.\n *\n * This directive ensures that any values written to the `FormControl`\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * `FormControl` instance (view -> model).\n *\n * \\@usageNotes\n * Use this directive if you'd like to create and manage a `FormControl` instance directly.\n * Simply create a `FormControl`, save it to your component class, and pass it into the\n * `FormControlDirective`.\n *\n * This directive is designed to be used as a standalone control.  Unlike `FormControlName`,\n * it does not require that your `FormControl` instance be part of any parent\n * `FormGroup`, and it won't be registered to any `FormGroupDirective` that\n * exists above it.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * `FormControl` instance. See a full list of available properties in\n * `AbstractControl`.\n *\n * **Set the value**: You can pass in an initial value when instantiating the `FormControl`,\n * or you can set it programmatically later using {\\@link AbstractControl#setValue setValue} or\n * {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * ### Use with ngModel\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and will be removed in Angular v7.\n *\n * Now deprecated:\n *\n * ```html\n * <input [formControl]=\"control\" [(ngModel)]=\"value\">\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * This has been deprecated for a few reasons. First, developers have found this pattern\n * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's\n * an input/output property named `ngModel` on the reactive form directive that simply\n * approximates (some of) its behavior. Specifically, it allows getting/setting the value\n * and intercepting value events. However, some of `ngModel`'s other features - like\n * delaying updates with`ngModelOptions` or exporting the directive - simply don't work,\n * which has understandably caused some confusion.\n *\n * In addition, this pattern mixes template-driven and reactive forms strategies, which\n * we generally don't recommend because it doesn't take advantage of the full benefits of\n * either strategy. Setting the value in the template violates the template-agnostic\n * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in\n * the class removes the convenience of defining forms in the template.\n *\n * To update your code before v7, you'll want to decide whether to stick with reactive form\n * directives (and get/set values using reactive forms patterns) or switch over to\n * template-driven directives.\n *\n * After (choice 1 - use reactive forms):\n *\n * ```html\n * <input [formControl]=\"control\">\n * ```\n *\n * ```ts\n * this.control.setValue('some value');\n * ```\n *\n * After (choice 2 - use template-driven forms):\n *\n * ```html\n * <input [(ngModel)]=\"value\">\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * By default, when you use this pattern, you will see a deprecation warning once in dev\n * mode. You can choose to silence this warning by providing a config for\n * `ReactiveFormsModule` at import time:\n *\n * ```ts\n * imports: [\n *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'});\n * ]\n * ```\n *\n * Alternatively, you can choose to surface a separate warning for each instance of this\n * pattern with a config value of `\"always\"`. This may help to track down where in the code\n * the pattern is being used as the code is being updated.\n *\n * \\@ngModule ReactiveFormsModule\n */\nclass FormControlDirective extends NgControl {\n    /**\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     * @param {?} _ngModelWarningConfig\n     */\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        /**\n         * @deprecated as of v6\n         */\n        this.update = new EventEmitter();\n        /**\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlDirective instance. Used to support warning config of \"always\".\n         *\n         * \\@internal\n         */\n        this._ngModelWarningSent = false;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set isDisabled(isDisabled) { ReactiveErrors.disabledAttrWarning(); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._isControlChanged(changes)) {\n            setUpControl(this.form, this);\n            if (this.control.disabled && /** @type {?} */ ((this.valueAccessor)).setDisabledState) {\n                /** @type {?} */ ((/** @type {?} */ ((this.valueAccessor)).setDisabledState))(true);\n            }\n            this.form.updateValueAndValidity({ emitEvent: false });\n        }\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n            this.form.setValue(this.model);\n            this.viewModel = this.model;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get path() { return []; }\n    /**\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._rawValidators); }\n    /**\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._rawAsyncValidators);\n    }\n    /**\n     * @return {?}\n     */\n    get control() { return this.form; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    _isControlChanged(changes) {\n        return changes.hasOwnProperty('form');\n    }\n}\n/**\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlDirective. Used to support warning config of \"once\".\n *\n * \\@internal\n */\nFormControlDirective._ngModelWarningSentOnce = false;\nFormControlDirective.decorators = [\n    { type: Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] }\n];\n/** @nocollapse */\nFormControlDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlDirective.propDecorators = {\n    form: [{ type: Input, args: ['formControl',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formDirectiveProvider$1 = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupDirective)\n};\n/**\n * \\@description\n *\n * Binds an existing `FormGroup` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * \\@usageNotes\n * **Set value**: You can set the form's initial value when instantiating the\n * `FormGroup`, or you can set it programmatically later using the `FormGroup`'s\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}\n * methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n * to the `FormGroup`'s {\\@link AbstractControl#valueChanges valueChanges} event.  You can also\n * listen to its {\\@link AbstractControl#statusChanges statusChanges} event to be notified when the\n * validation status is re-calculated.\n *\n * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n * submission event.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n */\nclass FormGroupDirective extends ControlContainer {\n    /**\n     * @param {?} _validators\n     * @param {?} _asyncValidators\n     */\n    constructor(_validators, _asyncValidators) {\n        super();\n        this._validators = _validators;\n        this._asyncValidators = _asyncValidators;\n        this.submitted = false;\n        this.directives = [];\n        this.form = /** @type {?} */ ((null));\n        this.ngSubmit = new EventEmitter();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this._checkFormPresent();\n        if (changes.hasOwnProperty('form')) {\n            this._updateValidators();\n            this._updateDomValue();\n            this._updateRegistrations();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get formDirective() { return this; }\n    /**\n     * @return {?}\n     */\n    get control() { return this.form; }\n    /**\n     * @return {?}\n     */\n    get path() { return []; }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    addControl(dir) {\n        /** @type {?} */\n        const ctrl = this.form.get(dir.path);\n        setUpControl(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n        this.directives.push(dir);\n        return ctrl;\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    getControl(dir) { return /** @type {?} */ (this.form.get(dir.path)); }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    removeControl(dir) { removeDir(this.directives, dir); }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    addFormGroup(dir) {\n        /** @type {?} */\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    removeFormGroup(dir) { }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    getFormGroup(dir) { return /** @type {?} */ (this.form.get(dir.path)); }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    addFormArray(dir) {\n        /** @type {?} */\n        const ctrl = this.form.get(dir.path);\n        setUpFormContainer(ctrl, dir);\n        ctrl.updateValueAndValidity({ emitEvent: false });\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    removeFormArray(dir) { }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    getFormArray(dir) { return /** @type {?} */ (this.form.get(dir.path)); }\n    /**\n     * @param {?} dir\n     * @param {?} value\n     * @return {?}\n     */\n    updateModel(dir, value) {\n        /** @type {?} */\n        const ctrl = /** @type {?} */ (this.form.get(dir.path));\n        ctrl.setValue(value);\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onSubmit($event) {\n        (/** @type {?} */ (this)).submitted = true;\n        syncPendingControls(this.form, this.directives);\n        this.ngSubmit.emit($event);\n        return false;\n    }\n    /**\n     * @return {?}\n     */\n    onReset() { this.resetForm(); }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    resetForm(value = undefined) {\n        this.form.reset(value);\n        (/** @type {?} */ (this)).submitted = false;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _updateDomValue() {\n        this.directives.forEach(dir => {\n            /** @type {?} */\n            const newCtrl = this.form.get(dir.path);\n            if (dir.control !== newCtrl) {\n                cleanUpControl(dir.control, dir);\n                if (newCtrl)\n                    setUpControl(newCtrl, dir);\n                (/** @type {?} */ (dir)).control = newCtrl;\n            }\n        });\n        this.form._updateTreeValidity({ emitEvent: false });\n    }\n    /**\n     * @return {?}\n     */\n    _updateRegistrations() {\n        this.form._registerOnCollectionChange(() => this._updateDomValue());\n        if (this._oldForm)\n            this._oldForm._registerOnCollectionChange(() => { });\n        this._oldForm = this.form;\n    }\n    /**\n     * @return {?}\n     */\n    _updateValidators() {\n        /** @type {?} */\n        const sync = composeValidators(this._validators);\n        this.form.validator = Validators.compose([/** @type {?} */ ((this.form.validator)), /** @type {?} */ ((sync))]);\n        /** @type {?} */\n        const async = composeAsyncValidators(this._asyncValidators);\n        this.form.asyncValidator = Validators.composeAsync([/** @type {?} */ ((this.form.asyncValidator)), /** @type {?} */ ((async))]);\n    }\n    /**\n     * @return {?}\n     */\n    _checkFormPresent() {\n        if (!this.form) {\n            ReactiveErrors.missingFormException();\n        }\n    }\n}\nFormGroupDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[formGroup]',\n                providers: [formDirectiveProvider$1],\n                host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                exportAs: 'ngForm'\n            },] }\n];\n/** @nocollapse */\nFormGroupDirective.ctorParameters = () => [\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupDirective.propDecorators = {\n    form: [{ type: Input, args: ['formGroup',] }],\n    ngSubmit: [{ type: Output }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst formGroupNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormGroupName)\n};\n/**\n * \\@description\n *\n * Syncs a nested `FormGroup` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormGroup` you want to link, and\n * will look for a `FormGroup` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Nested form groups can come in handy when you want to validate a sub-group of a\n * form separately from the rest or when you'd like to group the values of certain\n * controls into their own nested object.\n *\n * \\@usageNotes\n * **Access the group**: You can access the associated `FormGroup` using the\n * {\\@link AbstractControl#get get} method. Ex: `this.form.get('name')`.\n *\n * You can also access individual controls within the group using dot syntax.\n * Ex: `this.form.get('name.first')`\n *\n * **Get the value**: the `value` property is always synced and available on the\n * `FormGroup`. See a full list of available properties in `AbstractControl`.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the `FormGroup`, or you can set it programmatically later using\n * {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the group, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n */\nclass FormGroupName extends AbstractFormGroupDirective {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.groupParentException();\n        }\n    }\n}\nFormGroupName.decorators = [\n    { type: Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] }\n];\n/** @nocollapse */\nFormGroupName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormGroupName.propDecorators = {\n    name: [{ type: Input, args: ['formGroupName',] }]\n};\n/** @type {?} */\nconst formArrayNameProvider = {\n    provide: ControlContainer,\n    useExisting: forwardRef(() => FormArrayName)\n};\n/**\n * \\@description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Nested form arrays can come in handy when you have a group of form controls but\n * you're not sure how many there will be. Form arrays allow you to create new\n * form controls dynamically.\n *\n * \\@usageNotes\n * **Access the array**: You can access the associated `FormArray` using the\n * {\\@link AbstractControl#get get} method on the parent `FormGroup`.\n * Ex: `this.form.get('cities')`.\n *\n * **Get the value**: the `value` property is always synced and available on the\n * `FormArray`. See a full list of available properties in `AbstractControl`.\n *\n * **Set the value**: You can set an initial value for each child control when instantiating\n * the `FormArray`, or you can set the value programmatically later using the\n * `FormArray`'s {\\@link AbstractControl#setValue setValue} or\n * {\\@link AbstractControl#patchValue patchValue} methods.\n *\n * **Listen to value**: If you want to listen to changes in the value of the array, you can\n * subscribe to the `FormArray`'s {\\@link AbstractControl#valueChanges valueChanges} event.\n * You can also listen to its {\\@link AbstractControl#statusChanges statusChanges} event to be\n * notified when the validation status is re-calculated.\n *\n * **Add new controls**: You can add new controls to the `FormArray` dynamically by calling\n * its {\\@link FormArray#push push} method.\n * Ex: `this.form.get('cities').push(new FormControl());`\n *\n * ### Example\n *\n * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * \\@ngModule ReactiveFormsModule\n */\nclass FormArrayName extends ControlContainer {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     */\n    constructor(parent, validators, asyncValidators) {\n        super();\n        this._parent = parent;\n        this._validators = validators;\n        this._asyncValidators = asyncValidators;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._checkParentType(); /** @type {?} */\n        ((this.formDirective)).addFormArray(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeFormArray(this);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get control() { return /** @type {?} */ ((this.formDirective)).getFormArray(this); }\n    /**\n     * @return {?}\n     */\n    get formDirective() {\n        return this._parent ? /** @type {?} */ (this._parent.formDirective) : null;\n    }\n    /**\n     * @return {?}\n     */\n    get path() { return controlPath(this.name, this._parent); }\n    /**\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._validators); }\n    /**\n     * @return {?}\n     */\n    get asyncValidator() {\n        return composeAsyncValidators(this._asyncValidators);\n    }\n    /**\n     * @return {?}\n     */\n    _checkParentType() {\n        if (_hasInvalidParent(this._parent)) {\n            ReactiveErrors.arrayParentException();\n        }\n    }\n}\nFormArrayName.decorators = [\n    { type: Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] }\n];\n/** @nocollapse */\nFormArrayName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] }\n];\nFormArrayName.propDecorators = {\n    name: [{ type: Input, args: ['formArrayName',] }]\n};\n/**\n * @param {?} parent\n * @return {?}\n */\nfunction _hasInvalidParent(parent) {\n    return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n        !(parent instanceof FormArrayName);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst controlNameBinding = {\n    provide: NgControl,\n    useExisting: forwardRef(() => FormControlName)\n};\n/**\n * \\@description\n *\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * This directive ensures that any values written to the `FormControl`\n * instance programmatically will be written to the DOM element (model -> view). Conversely,\n * any values written to the DOM element through user input will be reflected in the\n * `FormControl` instance (view -> model).\n *\n * \\@usageNotes\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the `FormControl` instance you want to\n * link, and will look for a `FormControl` registered with that name in the\n * closest `FormGroup` or `FormArray` above it.\n *\n * **Access the control**: You can access the `FormControl` associated with\n * this directive by using the {\\@link AbstractControl#get get} method.\n * Ex: `this.form.get('first');`\n *\n * **Get value**: the `value` property is always synced and available on the `FormControl`.\n * See a full list of available properties in `AbstractControl`.\n *\n *  **Set value**: You can set an initial value for the control when instantiating the\n *  `FormControl`, or you can set it programmatically later using\n *  {\\@link AbstractControl#setValue setValue} or {\\@link AbstractControl#patchValue patchValue}.\n *\n * **Listen to value**: If you want to listen to changes in the value of the control, you can\n * subscribe to the {\\@link AbstractControl#valueChanges valueChanges} event.  You can also listen to\n * {\\@link AbstractControl#statusChanges statusChanges} to be notified when the validation status is\n * re-calculated.\n *\n * ### Example\n *\n * In this example, we create form controls for first name and last name.\n *\n * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and will be removed in Angular v7.\n *\n * Now deprecated:\n *\n * ```html\n * <form [formGroup]=\"form\">\n *   <input formControlName=\"first\" [(ngModel)]=\"value\">\n * </form>\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * This has been deprecated for a few reasons. First, developers have found this pattern\n * confusing. It seems like the actual `ngModel` directive is being used, but in fact it's\n * an input/output property named `ngModel` on the reactive form directive that simply\n * approximates (some of) its behavior. Specifically, it allows getting/setting the value\n * and intercepting value events. However, some of `ngModel`'s other features - like\n * delaying updates with`ngModelOptions` or exporting the directive - simply don't work,\n * which has understandably caused some confusion.\n *\n * In addition, this pattern mixes template-driven and reactive forms strategies, which\n * we generally don't recommend because it doesn't take advantage of the full benefits of\n * either strategy. Setting the value in the template violates the template-agnostic\n * principles behind reactive forms, whereas adding a `FormControl`/`FormGroup` layer in\n * the class removes the convenience of defining forms in the template.\n *\n * To update your code before v7, you'll want to decide whether to stick with reactive form\n * directives (and get/set values using reactive forms patterns) or switch over to\n * template-driven directives.\n *\n * After (choice 1 - use reactive forms):\n *\n * ```html\n * <form [formGroup]=\"form\">\n *   <input formControlName=\"first\">\n * </form>\n * ```\n *\n * ```ts\n * this.form.get('first').setValue('some value');\n * ```\n *\n * After (choice 2 - use template-driven forms):\n *\n * ```html\n * <input [(ngModel)]=\"value\">\n * ```\n *\n * ```ts\n * this.value = 'some value';\n * ```\n *\n * By default, when you use this pattern, you will see a deprecation warning once in dev\n * mode. You can choose to silence this warning by providing a config for\n * `ReactiveFormsModule` at import time:\n *\n * ```ts\n * imports: [\n *   ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'});\n * ]\n * ```\n *\n * Alternatively, you can choose to surface a separate warning for each instance of this\n * pattern with a config value of `\"always\"`. This may help to track down where in the code\n * the pattern is being used as the code is being updated.\n *\n * \\@ngModule ReactiveFormsModule\n */\nclass FormControlName extends NgControl {\n    /**\n     * @param {?} parent\n     * @param {?} validators\n     * @param {?} asyncValidators\n     * @param {?} valueAccessors\n     * @param {?} _ngModelWarningConfig\n     */\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n        super();\n        this._ngModelWarningConfig = _ngModelWarningConfig;\n        this._added = false;\n        /**\n         * @deprecated as of v6\n         */\n        this.update = new EventEmitter();\n        /**\n         * Instance property used to track whether an ngModel warning has been sent out for this\n         * particular FormControlName instance. Used to support warning config of \"always\".\n         *\n         * \\@internal\n         */\n        this._ngModelWarningSent = false;\n        this._parent = parent;\n        this._rawValidators = validators || [];\n        this._rawAsyncValidators = asyncValidators || [];\n        this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set isDisabled(isDisabled) { ReactiveErrors.disabledAttrWarning(); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (!this._added)\n            this._setUpControl();\n        if (isPropertyUpdated(changes, this.viewModel)) {\n            _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n            this.viewModel = this.model;\n            this.formDirective.updateModel(this, this.model);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.formDirective) {\n            this.formDirective.removeControl(this);\n        }\n    }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    viewToModelUpdate(newValue) {\n        this.viewModel = newValue;\n        this.update.emit(newValue);\n    }\n    /**\n     * @return {?}\n     */\n    get path() { return controlPath(this.name, /** @type {?} */ ((this._parent))); }\n    /**\n     * @return {?}\n     */\n    get formDirective() { return this._parent ? this._parent.formDirective : null; }\n    /**\n     * @return {?}\n     */\n    get validator() { return composeValidators(this._rawValidators); }\n    /**\n     * @return {?}\n     */\n    get asyncValidator() {\n        return /** @type {?} */ ((composeAsyncValidators(this._rawAsyncValidators)));\n    }\n    /**\n     * @return {?}\n     */\n    _checkParentType() {\n        if (!(this._parent instanceof FormGroupName) &&\n            this._parent instanceof AbstractFormGroupDirective) {\n            ReactiveErrors.ngModelGroupException();\n        }\n        else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n            !(this._parent instanceof FormArrayName)) {\n            ReactiveErrors.controlParentException();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _setUpControl() {\n        this._checkParentType();\n        (/** @type {?} */ (this)).control = this.formDirective.addControl(this);\n        if (this.control.disabled && /** @type {?} */ ((this.valueAccessor)).setDisabledState) {\n            /** @type {?} */ ((/** @type {?} */ ((this.valueAccessor)).setDisabledState))(true);\n        }\n        this._added = true;\n    }\n}\n/**\n * Static property used to track whether any ngModel warnings have been sent across\n * all instances of FormControlName. Used to support warning config of \"once\".\n *\n * \\@internal\n */\nFormControlName._ngModelWarningSentOnce = false;\nFormControlName.decorators = [\n    { type: Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] }\n];\n/** @nocollapse */\nFormControlName.ctorParameters = () => [\n    { type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS,] }] },\n    { type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [NG_MODEL_WITH_FORM_CONTROL_WARNING,] }] }\n];\nFormControlName.propDecorators = {\n    name: [{ type: Input, args: ['formControlName',] }],\n    isDisabled: [{ type: Input, args: ['disabled',] }],\n    model: [{ type: Input, args: ['ngModel',] }],\n    update: [{ type: Output, args: ['ngModelChange',] }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => RequiredValidator),\n    multi: true\n};\n/** @type {?} */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => CheckboxRequiredValidator),\n    multi: true\n};\n/**\n * A Directive that adds the `required` validator to any controls marked with the\n * `required` attribute, via the `NG_VALIDATORS` binding.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass RequiredValidator {\n    /**\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = value != null && value !== false && `${value}` !== 'false';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.required ? Validators.required(control) : null;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n}\nRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                providers: [REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] }\n];\nRequiredValidator.propDecorators = {\n    required: [{ type: Input }]\n};\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute, via the `NG_VALIDATORS` binding.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * \\@experimental\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass CheckboxRequiredValidator extends RequiredValidator {\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.required ? Validators.requiredTrue(control) : null;\n    }\n}\nCheckboxRequiredValidator.decorators = [\n    { type: Directive, args: [{\n                selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                host: { '[attr.required]': 'required ? \"\" : null' }\n            },] }\n];\n/** *\n * Provider which adds `EmailValidator` to `NG_VALIDATORS`.\n  @type {?} */\nconst EMAIL_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => EmailValidator),\n    multi: true\n};\n/**\n * A Directive that adds the `email` validator to controls marked with the\n * `email` attribute, via the `NG_VALIDATORS` binding.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * \\@experimental\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass EmailValidator {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set email(value) {\n        this._enabled = value === '' || value === true || value === 'true';\n        if (this._onChange)\n            this._onChange();\n    }\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this._enabled ? Validators.email(control) : null;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n}\nEmailValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[email][formControlName],[email][formControl],[email][ngModel]',\n                providers: [EMAIL_VALIDATOR]\n            },] }\n];\nEmailValidator.propDecorators = {\n    email: [{ type: Input }]\n};\n/** *\n * Provider which adds `MinLengthValidator` to `NG_VALIDATORS`.\n *\n * \\@usageNotes\n * ### Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='min'}\n  @type {?} */\nconst MIN_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinLengthValidator),\n    multi: true\n};\n/**\n * A directive which installs the `MinLengthValidator` for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass MinLengthValidator {\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('minlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.minlength == null ? null : this._validator(control);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n    /**\n     * @return {?}\n     */\n    _createValidator() {\n        this._validator = Validators.minLength(parseInt(this.minlength, 10));\n    }\n}\nMinLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                providers: [MIN_LENGTH_VALIDATOR],\n                host: { '[attr.minlength]': 'minlength ? minlength : null' }\n            },] }\n];\nMinLengthValidator.propDecorators = {\n    minlength: [{ type: Input }]\n};\n/** *\n * Provider which adds `MaxLengthValidator` to `NG_VALIDATORS`.\n *\n * \\@usageNotes\n * ### Example:\n *\n * {\\@example common/forms/ts/validators/validators.ts region='max'}\n  @type {?} */\nconst MAX_LENGTH_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxLengthValidator),\n    multi: true\n};\n/**\n * A directive which installs the `MaxLengthValidator` for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `maxlength` attribute.\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass MaxLengthValidator {\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('maxlength' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) {\n        return this.maxlength != null ? this._validator(control) : null;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n    /**\n     * @return {?}\n     */\n    _createValidator() {\n        this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n    }\n}\nMaxLengthValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                providers: [MAX_LENGTH_VALIDATOR],\n                host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n            },] }\n];\nMaxLengthValidator.propDecorators = {\n    maxlength: [{ type: Input }]\n};\n/** @type {?} */\nconst PATTERN_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => PatternValidator),\n    multi: true\n};\n/**\n * A Directive that adds the `pattern` validator to any controls marked with the\n * `pattern` attribute, via the `NG_VALIDATORS` binding. Uses attribute value\n * as the regex to validate Control value against.  Follows pattern attribute\n * semantics; i.e. regex must match entire Control value.\n *\n * \\@usageNotes\n * ### Example\n *\n * ```\n * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n * ```\n *\n * \\@ngModule FormsModule\n * \\@ngModule ReactiveFormsModule\n */\nclass PatternValidator {\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('pattern' in changes) {\n            this._createValidator();\n            if (this._onChange)\n                this._onChange();\n        }\n    }\n    /**\n     * @param {?} control\n     * @return {?}\n     */\n    validate(control) { return this._validator(control); }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._onChange = fn; }\n    /**\n     * @return {?}\n     */\n    _createValidator() { this._validator = Validators.pattern(this.pattern); }\n}\nPatternValidator.decorators = [\n    { type: Directive, args: [{\n                selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                providers: [PATTERN_VALIDATOR],\n                host: { '[attr.pattern]': 'pattern ? pattern : null' }\n            },] }\n];\nPatternValidator.propDecorators = {\n    pattern: [{ type: Input }]\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a `FormControl`,\n * `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to build complex\n * forms.\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n */\nclass FormBuilder {\n    /**\n     * \\@description\n     * Construct a new `FormGroup` instance.\n     *\n     * @param {?} controlsConfig A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param {?=} extra An object of configuration options for the `FormGroup`.\n     * * `validator`: A synchronous validator function, or an array of validator functions\n     * * `asyncValidator`: A single async validator or array of async validator functions\n     *\n     * @return {?}\n     */\n    group(controlsConfig, extra = null) {\n        /** @type {?} */\n        const controls = this._reduceControls(controlsConfig);\n        /** @type {?} */\n        const validator = extra != null ? extra['validator'] : null;\n        /** @type {?} */\n        const asyncValidator = extra != null ? extra['asyncValidator'] : null;\n        return new FormGroup(controls, validator, asyncValidator);\n    }\n    /**\n     * \\@description\n     * Construct a new `FormControl` instance.\n     *\n     * \\@usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\"\n     *   linenums=\"false\" region=\"disabled-control\">\n     * </code-example>\n     *\n     * @param {?} formState Initializes the control with an initial value,\n     * or an object that defines the initial value and disabled state.\n     *\n     * @param {?=} validator A synchronous validator function, or an array of synchronous validator\n     * functions.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     *\n     * @return {?}\n     */\n    control(formState, validator, asyncValidator) {\n        return new FormControl(formState, validator, asyncValidator);\n    }\n    /**\n     * \\@description\n     * Construct a new `FormArray` instance.\n     *\n     * @param {?} controlsConfig An array of child controls. The key for each child control is its index\n     * in the array.\n     *\n     * @param {?=} validator A synchronous validator function, or an array of synchronous validator\n     * functions.\n     *\n     * @param {?=} asyncValidator A single async validator or array of async validator functions\n     * @return {?}\n     */\n    array(controlsConfig, validator, asyncValidator) {\n        /** @type {?} */\n        const controls = controlsConfig.map(c => this._createControl(c));\n        return new FormArray(controls, validator, asyncValidator);\n    }\n    /**\n     * \\@internal\n     * @param {?} controlsConfig\n     * @return {?}\n     */\n    _reduceControls(controlsConfig) {\n        /** @type {?} */\n        const controls = {};\n        Object.keys(controlsConfig).forEach(controlName => {\n            controls[controlName] = this._createControl(controlsConfig[controlName]);\n        });\n        return controls;\n    }\n    /**\n     * \\@internal\n     * @param {?} controlConfig\n     * @return {?}\n     */\n    _createControl(controlConfig) {\n        if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n            controlConfig instanceof FormArray) {\n            return controlConfig;\n        }\n        else if (Array.isArray(controlConfig)) {\n            /** @type {?} */\n            const value = controlConfig[0];\n            /** @type {?} */\n            const validator = controlConfig.length > 1 ? controlConfig[1] : null;\n            /** @type {?} */\n            const asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n            return this.control(value, validator, asyncValidator);\n        }\n        else {\n            return this.control(controlConfig);\n        }\n    }\n}\nFormBuilder.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst VERSION = new Version('6.1.10');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * \\@experimental\n * \\@ngModule ReactiveFormsModule\n * \\@ngModule FormsModule\n */\nclass NgNoValidate {\n}\nNgNoValidate.decorators = [\n    { type: Directive, args: [{\n                selector: 'form:not([ngNoForm]):not([ngNativeValidate])',\n                host: { 'novalidate': '' },\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SHARED_FORM_DIRECTIVES = [\n    NgNoValidate,\n    NgSelectOption,\n    NgSelectMultipleOption,\n    DefaultValueAccessor,\n    NumberValueAccessor,\n    RangeValueAccessor,\n    CheckboxControlValueAccessor,\n    SelectControlValueAccessor,\n    SelectMultipleControlValueAccessor,\n    RadioControlValueAccessor,\n    NgControlStatus,\n    NgControlStatusGroup,\n    RequiredValidator,\n    MinLengthValidator,\n    MaxLengthValidator,\n    PatternValidator,\n    CheckboxRequiredValidator,\n    EmailValidator,\n];\n/** @type {?} */\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n/** @type {?} */\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nclass InternalFormsSharedModule {\n}\nInternalFormsSharedModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: SHARED_FORM_DIRECTIVES,\n                exports: SHARED_FORM_DIRECTIVES,\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n * @see [Forms](guide/forms)\n *\n * @see [Forms Guide](/guide/forms)\n */\nclass FormsModule {\n}\nFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                providers: [RadioControlRegistry],\n                exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n            },] }\n];\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n * @see [Forms](guide/reactive-forms)\n *\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n *\n */\nclass ReactiveFormsModule {\n    /**\n     * \\@description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param {?} opts An object of configuration options `warnOnNgModelWithFormControl` Configures when\n     * to emit a warning when an `ngModel binding is used with reactive form directives.\n     * @return {?}\n     */\n    static withConfig(opts) {\n        return {\n            ngModule: ReactiveFormsModule,\n            providers: [{\n                    provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n                    useValue: opts.warnOnNgModelWithFormControl\n                }]\n        };\n    }\n}\nReactiveFormsModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                providers: [FormBuilder, RadioControlRegistry],\n                exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InternalFormsSharedModule as ɵangular_packages_forms_forms_bb, REACTIVE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_ba, SHARED_FORM_DIRECTIVES as ɵangular_packages_forms_forms_y, TEMPLATE_DRIVEN_DIRECTIVES as ɵangular_packages_forms_forms_z, CHECKBOX_VALUE_ACCESSOR as ɵangular_packages_forms_forms_a, DEFAULT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_b, AbstractControlStatus as ɵangular_packages_forms_forms_c, ngControlStatusHost as ɵangular_packages_forms_forms_d, formDirectiveProvider as ɵangular_packages_forms_forms_e, formControlBinding as ɵangular_packages_forms_forms_f, modelGroupProvider as ɵangular_packages_forms_forms_g, NgNoValidate as ɵangular_packages_forms_forms_bg, NUMBER_VALUE_ACCESSOR as ɵangular_packages_forms_forms_bc, NumberValueAccessor as ɵangular_packages_forms_forms_bd, RADIO_VALUE_ACCESSOR as ɵangular_packages_forms_forms_h, RadioControlRegistry as ɵangular_packages_forms_forms_i, RANGE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_be, RangeValueAccessor as ɵangular_packages_forms_forms_bf, NG_MODEL_WITH_FORM_CONTROL_WARNING as ɵangular_packages_forms_forms_j, formControlBinding$1 as ɵangular_packages_forms_forms_k, controlNameBinding as ɵangular_packages_forms_forms_l, formDirectiveProvider$1 as ɵangular_packages_forms_forms_m, formArrayNameProvider as ɵangular_packages_forms_forms_o, formGroupNameProvider as ɵangular_packages_forms_forms_n, SELECT_VALUE_ACCESSOR as ɵangular_packages_forms_forms_p, NgSelectMultipleOption as ɵangular_packages_forms_forms_r, SELECT_MULTIPLE_VALUE_ACCESSOR as ɵangular_packages_forms_forms_q, CHECKBOX_REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_t, EMAIL_VALIDATOR as ɵangular_packages_forms_forms_u, MAX_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_w, MIN_LENGTH_VALIDATOR as ɵangular_packages_forms_forms_v, PATTERN_VALIDATOR as ɵangular_packages_forms_forms_x, REQUIRED_VALIDATOR as ɵangular_packages_forms_forms_s, AbstractControlDirective, AbstractFormGroupDirective, CheckboxControlValueAccessor, ControlContainer, NG_VALUE_ACCESSOR, COMPOSITION_BUFFER_MODE, DefaultValueAccessor, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, RadioControlValueAccessor, FormControlDirective, FormControlName, FormGroupDirective, FormArrayName, FormGroupName, NgSelectOption, SelectControlValueAccessor, SelectMultipleControlValueAccessor, CheckboxRequiredValidator, EmailValidator, MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator, FormBuilder, AbstractControl, FormArray, FormControl, FormGroup, NG_ASYNC_VALIDATORS, NG_VALIDATORS, Validators, VERSION, FormsModule, ReactiveFormsModule };\n//# sourceMappingURL=forms.js.map\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from './../../core/services/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n\n  pageInfo = {\n    title: 'Login'\n  };\n  email: string;\n  password: string;\n\n  constructor(\n    private _auth: AuthService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  submit() {\n    console.log(this.email);\n    console.log(this.password);\n  }\n\n  logins(f: NgForm) {\n    console.log(f);\n    this._auth.login(f.value).subscribe();\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookiesService {\n\n  constructor() { }\n\n  setCookie(name: string, value: string, time: any = {day: 0, minute: 0, always: false}) {\n    let expires;\n    const date = new Date();\n    if (time.day) {\n      date.setTime(date.getTime() + (+time.day * 24 * 60 * 60 * 1000));\n      expires = '; expires=' + (<any>date).toGMTString();\n    } else if (time.minute) {\n      date.setTime(date.getTime() + (+time.minute * 60 * 1000));\n      expires = '; expires=' + (<any>date).toGMTString();\n    } else if (time.always) {\n      expires = '; expires=Fri, 31 Dec 9999 23:59:59 GMT';\n    } else {\n      expires = '';\n    }\n    document.cookie = name + '=' + value + expires + '; path=/';\n  }\n\n  getCookie(name: string) {\n    const names = name + '=';\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(names) === 0) {\n        return c.substring(names.length, c.length);\n      }\n    }\n    return '';\n  }\n\n  deleteCookie(name: string, path = '/', domain = '') {\n    document.cookie = name + '=;'\n      + 'path=' + path + ';'\n      + 'domain=' + domain + ';'\n      + 'expires=Thu, 01-Jan-70 00:00:01 GMT';\n  }\n\n}\n","import * as i0 from \"@angular/core\";\nexport class CookiesService {\n    constructor() { }\n    setCookie(name, value, time = { day: 0, minute: 0, always: false }) {\n        let expires;\n        const date = new Date();\n        if (time.day) {\n            date.setTime(date.getTime() + (+time.day * 24 * 60 * 60 * 1000));\n            expires = '; expires=' + date.toGMTString();\n        }\n        else if (time.minute) {\n            date.setTime(date.getTime() + (+time.minute * 60 * 1000));\n            expires = '; expires=' + date.toGMTString();\n        }\n        else if (time.always) {\n            expires = '; expires=Fri, 31 Dec 9999 23:59:59 GMT';\n        }\n        else {\n            expires = '';\n        }\n        document.cookie = name + '=' + value + expires + '; path=/';\n    }\n    getCookie(name) {\n        const names = name + '=';\n        const ca = document.cookie.split(';');\n        for (let i = 0; i < ca.length; i++) {\n            let c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(names) === 0) {\n                return c.substring(names.length, c.length);\n            }\n        }\n        return '';\n    }\n    deleteCookie(name, path = '/', domain = '') {\n        document.cookie = name + '=;'\n            + 'path=' + path + ';'\n            + 'domain=' + domain + ';'\n            + 'expires=Thu, 01-Jan-70 00:00:01 GMT';\n    }\n}\nCookiesService.ngInjectableDef = i0.defineInjectable({ factory: function CookiesService_Factory() { return new CookiesService(); }, token: CookiesService, providedIn: \"root\" });\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingActionService {\n\n  loading = new Subject<any>();\n  listerning$ = this.loading.asObservable();\n\n  constructor() { }\n\n  open() {\n    this.loading.next(true);\n  }\n\n  off() {\n    this.loading.next(false);\n  }\n\n}\n","import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LoadingActionService {\n    constructor() {\n        this.loading = new Subject();\n        this.listerning$ = this.loading.asObservable();\n    }\n    open() {\n        this.loading.next(true);\n    }\n    off() {\n        this.loading.next(false);\n    }\n}\nLoadingActionService.ngInjectableDef = i0.defineInjectable({ factory: function LoadingActionService_Factory() { return new LoadingActionService(); }, token: LoadingActionService, providedIn: \"root\" });\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { observable, Observable, of } from 'rxjs';\nimport { CookiesService } from './cookies.service';\nimport { LoadingActionService } from './loading-action.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  isLogin: boolean;\n\n  constructor(\n    private router: Router,\n    private cookie: CookiesService,\n    private loading: LoadingActionService\n  ) { }\n\n  login(data: any): Observable<any> {\n    const getUser = localStorage.getItem('user');\n    if (getUser) {\n      const parseUser: any[] = JSON.parse(getUser);\n      const checkLogin = parseUser.some(val => val.email === data.email && val.password === data.password);\n      if (checkLogin) {\n        this.loading.open();\n        setTimeout(() => {\n          this.cookie.setCookie('login', '1', {minute: 30});\n          this.router.navigate(['/account']);\n          this.isLogin = true;\n          this.loading.off();\n        }, 1000);\n      }\n    } else {\n\n    }\n    return of(true);\n  }\n\n  logout(): void {\n    this.loading.open();\n    setTimeout(() => {\n      this.isLogin = false;\n      this.cookie.deleteCookie('login');\n      // this.router.navigate(['/']);\n      this.loading.off();\n    }, 1000);\n  }\n\n  checkLogged(): void {\n    this.isLogin = !!this.cookie.getCookie('login');\n  }\n\n}\n","import { Router } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { CookiesService } from './cookies.service';\nimport { LoadingActionService } from './loading-action.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./cookies.service\";\nimport * as i3 from \"./loading-action.service\";\nexport class AuthService {\n    constructor(router, cookie, loading) {\n        this.router = router;\n        this.cookie = cookie;\n        this.loading = loading;\n    }\n    login(data) {\n        const getUser = localStorage.getItem('user');\n        if (getUser) {\n            const parseUser = JSON.parse(getUser);\n            const checkLogin = parseUser.some(val => val.email === data.email && val.password === data.password);\n            if (checkLogin) {\n                this.loading.open();\n                setTimeout(() => {\n                    this.cookie.setCookie('login', '1', { minute: 30 });\n                    this.router.navigate(['/account']);\n                    this.isLogin = true;\n                    this.loading.off();\n                }, 1000);\n            }\n        }\n        else {\n        }\n        return of(true);\n    }\n    logout() {\n        this.loading.open();\n        setTimeout(() => {\n            this.isLogin = false;\n            this.cookie.deleteCookie('login');\n            // this.router.navigate(['/']);\n            this.loading.off();\n        }, 1000);\n    }\n    checkLogged() {\n        this.isLogin = !!this.cookie.getCookie('login');\n    }\n}\nAuthService.ngInjectableDef = i0.defineInjectable({ factory: function AuthService_Factory() { return new AuthService(i0.inject(i1.Router), i0.inject(i2.CookiesService), i0.inject(i3.LoadingActionService)); }, token: AuthService, providedIn: \"root\" });\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./login.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./login.component\";\nimport * as i6 from \"../../core/services/auth.service\";\nvar styles_LoginComponent = [i0.styles];\nvar RenderType_LoginComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_LoginComponent, data: {} });\nexport { RenderType_LoginComponent as RenderType_LoginComponent };\nexport function View_LoginComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 31, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"h3\", [[\"class\", \"text-center mb-5 mt-3\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Login\"])), (_l()(), i1.ɵeld(3, 0, null, null, 28, \"div\", [[\"class\", \"login-form\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 27, \"form\", [[\"novalidate\", \"\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngSubmit\"], [null, \"submit\"], [null, \"reset\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"submit\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 6).onSubmit($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"reset\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 6).onReset() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"ngSubmit\" === en)) {\n        var pd_2 = (_co.logins(i1.ɵnov(_v, 6)) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(5, 16384, null, 0, i2.ɵangular_packages_forms_forms_bg, [], null, null), i1.ɵdid(6, 4210688, [[\"login\", 4]], 0, i2.NgForm, [[8, null], [8, null]], null, { ngSubmit: \"ngSubmit\" }), i1.ɵprd(2048, null, i2.ControlContainer, null, [i2.NgForm]), i1.ɵdid(8, 16384, null, 0, i2.NgControlStatusGroup, [[4, i2.ControlContainer]], null, null), (_l()(), i1.ɵeld(9, 0, null, null, 8, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(10, 0, null, null, 1, \"label\", [[\"for\", \"exampleInputEmail1\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Email address\"])), (_l()(), i1.ɵeld(12, 0, null, null, 5, \"input\", [[\"aria-describedby\", \"emailHelp\"], [\"class\", \"form-control\"], [\"id\", \"exampleInputEmail1\"], [\"name\", \"email\"], [\"placeholder\", \"Enter email\"], [\"type\", \"email\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"], [null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"input\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 13)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 13).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 13)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i1.ɵnov(_v, 13)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"ngModelChange\" === en)) {\n        var pd_4 = ((_co.email = $event) !== false);\n        ad = (pd_4 && ad);\n    } return ad; }, null, null)), i1.ɵdid(13, 16384, null, 0, i2.DefaultValueAccessor, [i1.Renderer2, i1.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], null, null), i1.ɵprd(1024, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i2.DefaultValueAccessor]), i1.ɵdid(15, 671744, null, 0, i2.NgModel, [[2, i2.ControlContainer], [8, null], [8, null], [6, i2.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], model: [1, \"model\"] }, { update: \"ngModelChange\" }), i1.ɵprd(2048, null, i2.NgControl, null, [i2.NgModel]), i1.ɵdid(17, 16384, null, 0, i2.NgControlStatus, [[4, i2.NgControl]], null, null), (_l()(), i1.ɵeld(18, 0, null, null, 8, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(19, 0, null, null, 1, \"label\", [[\"for\", \"exampleInputPassword1\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Password\"])), (_l()(), i1.ɵeld(21, 0, null, null, 5, \"input\", [[\"class\", \"form-control\"], [\"id\", \"exampleInputPassword1\"], [\"name\", \"password\"], [\"placeholder\", \"Password\"], [\"type\", \"password\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"], [null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"input\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 22)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 22).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 22)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i1.ɵnov(_v, 22)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"ngModelChange\" === en)) {\n        var pd_4 = ((_co.password = $event) !== false);\n        ad = (pd_4 && ad);\n    } return ad; }, null, null)), i1.ɵdid(22, 16384, null, 0, i2.DefaultValueAccessor, [i1.Renderer2, i1.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], null, null), i1.ɵprd(1024, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i2.DefaultValueAccessor]), i1.ɵdid(24, 671744, null, 0, i2.NgModel, [[2, i2.ControlContainer], [8, null], [8, null], [6, i2.NG_VALUE_ACCESSOR]], { name: [0, \"name\"], model: [1, \"model\"] }, { update: \"ngModelChange\" }), i1.ɵprd(2048, null, i2.NgControl, null, [i2.NgModel]), i1.ɵdid(26, 16384, null, 0, i2.NgControlStatus, [[4, i2.NgControl]], null, null), (_l()(), i1.ɵeld(27, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary btn-lg w-100 mt-2\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Login\"])), (_l()(), i1.ɵeld(29, 0, null, null, 2, \"a\", [[\"class\", \"register-link\"], [\"routerLink\", \"/auth/register\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 30).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(30, 671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Don\\u2019t have an account? Create an account here\"]))], function (_ck, _v) { var _co = _v.component; var currVal_14 = \"email\"; var currVal_15 = _co.email; _ck(_v, 15, 0, currVal_14, currVal_15); var currVal_23 = \"password\"; var currVal_24 = _co.password; _ck(_v, 24, 0, currVal_23, currVal_24); var currVal_27 = \"/auth/register\"; _ck(_v, 30, 0, currVal_27); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 8).ngClassUntouched; var currVal_1 = i1.ɵnov(_v, 8).ngClassTouched; var currVal_2 = i1.ɵnov(_v, 8).ngClassPristine; var currVal_3 = i1.ɵnov(_v, 8).ngClassDirty; var currVal_4 = i1.ɵnov(_v, 8).ngClassValid; var currVal_5 = i1.ɵnov(_v, 8).ngClassInvalid; var currVal_6 = i1.ɵnov(_v, 8).ngClassPending; _ck(_v, 4, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); var currVal_7 = i1.ɵnov(_v, 17).ngClassUntouched; var currVal_8 = i1.ɵnov(_v, 17).ngClassTouched; var currVal_9 = i1.ɵnov(_v, 17).ngClassPristine; var currVal_10 = i1.ɵnov(_v, 17).ngClassDirty; var currVal_11 = i1.ɵnov(_v, 17).ngClassValid; var currVal_12 = i1.ɵnov(_v, 17).ngClassInvalid; var currVal_13 = i1.ɵnov(_v, 17).ngClassPending; _ck(_v, 12, 0, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13); var currVal_16 = i1.ɵnov(_v, 26).ngClassUntouched; var currVal_17 = i1.ɵnov(_v, 26).ngClassTouched; var currVal_18 = i1.ɵnov(_v, 26).ngClassPristine; var currVal_19 = i1.ɵnov(_v, 26).ngClassDirty; var currVal_20 = i1.ɵnov(_v, 26).ngClassValid; var currVal_21 = i1.ɵnov(_v, 26).ngClassInvalid; var currVal_22 = i1.ɵnov(_v, 26).ngClassPending; _ck(_v, 21, 0, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21, currVal_22); var currVal_25 = i1.ɵnov(_v, 30).target; var currVal_26 = i1.ɵnov(_v, 30).href; _ck(_v, 29, 0, currVal_25, currVal_26); }); }\nexport function View_LoginComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-login\", [], null, null, null, View_LoginComponent_0, RenderType_LoginComponent)), i1.ɵdid(1, 114688, null, 0, i5.LoginComponent, [i6.AuthService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar LoginComponentNgFactory = i1.ɵccf(\"app-login\", i5.LoginComponent, View_LoginComponent_Host_0, {}, {}, []);\nexport { LoginComponentNgFactory as LoginComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  <h3 class=\"text-center mb-5 mt-3\">Login</h3>\n  <div class=\"login-form\">\n    <form #login=\"ngForm\" (ngSubmit)=\"logins(login)\">\n      <div class=\"form-group\">\n        <label for=\"exampleInputEmail1\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" [(ngModel)]=\"email\" name=\"email\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" [(ngModel)]=\"password\" name=\"password\">\n      </div>\n      <button class=\"btn btn-primary btn-lg w-100 mt-2\">Login</button>\n      <a class=\"register-link\" routerLink=\"/auth/register\">Don’t have an account? Create an account here</a>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormControlName, FormBuilder, Validators } from '@angular/forms';\nimport { LoadingActionService } from './../../core/services/loading-action.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private loading: LoadingActionService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      firstName: ['', Validators.maxLength(10)],\n      lastName: [''],\n      email: [''],\n      password: [''],\n      confirmPassword: ['']\n    });\n  }\n\n  submit() {\n    const user = localStorage.getItem('user');\n    if (user) {\n      const parseUser: any[] = JSON.parse(user);\n      const checkExist = parseUser.some(val => val.firstName === this.registerForm.value.firstName);\n      if (!checkExist) {\n        parseUser.push(this.registerForm.value);\n        localStorage.setItem('user', JSON.stringify(parseUser));\n        this.loading.open();\n        setTimeout(() => {\n          this.loading.off();\n          this.router.navigate(['/auth/login']);\n        }, 1000);\n      } else {\n        alert('First name is existed, Please input another name.');\n      }\n    } else {\n      localStorage.setItem('user', JSON.stringify([this.registerForm.value]));\n    }\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./register.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"./register.component\";\nimport * as i6 from \"../../core/services/loading-action.service\";\nvar styles_RegisterComponent = [i0.styles];\nvar RenderType_RegisterComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_RegisterComponent, data: {} });\nexport { RenderType_RegisterComponent as RenderType_RegisterComponent };\nexport function View_RegisterComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 58, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"h3\", [[\"class\", \"text-center mb-5 mt-3\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Create an account\"])), (_l()(), i1.ɵeld(3, 0, null, null, 55, \"div\", [[\"class\", \"login-form\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 54, \"form\", [[\"novalidate\", \"\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngSubmit\"], [null, \"submit\"], [null, \"reset\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"submit\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 6).onSubmit($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"reset\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 6).onReset() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"ngSubmit\" === en)) {\n        var pd_2 = (_co.submit() !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, null, null)), i1.ɵdid(5, 16384, null, 0, i2.ɵangular_packages_forms_forms_bg, [], null, null), i1.ɵdid(6, 540672, null, 0, i2.FormGroupDirective, [[8, null], [8, null]], { form: [0, \"form\"] }, { ngSubmit: \"ngSubmit\" }), i1.ɵprd(2048, null, i2.ControlContainer, null, [i2.FormGroupDirective]), i1.ɵdid(8, 16384, null, 0, i2.NgControlStatusGroup, [[4, i2.ControlContainer]], null, null), (_l()(), i1.ɵeld(9, 0, null, null, 8, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(10, 0, null, null, 1, \"label\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"First Name\"])), (_l()(), i1.ɵeld(12, 0, null, null, 5, \"input\", [[\"class\", \"form-control\"], [\"formControlName\", \"firstName\"], [\"type\", \"text\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; if ((\"input\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 13)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 13).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 13)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i1.ɵnov(_v, 13)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), i1.ɵdid(13, 16384, null, 0, i2.DefaultValueAccessor, [i1.Renderer2, i1.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], null, null), i1.ɵprd(1024, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i2.DefaultValueAccessor]), i1.ɵdid(15, 671744, null, 0, i2.FormControlName, [[3, i2.ControlContainer], [8, null], [8, null], [6, i2.NG_VALUE_ACCESSOR], [2, i2.ɵangular_packages_forms_forms_j]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i2.NgControl, null, [i2.FormControlName]), i1.ɵdid(17, 16384, null, 0, i2.NgControlStatus, [[4, i2.NgControl]], null, null), (_l()(), i1.ɵeld(18, 0, null, null, 8, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(19, 0, null, null, 1, \"label\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Last Name\"])), (_l()(), i1.ɵeld(21, 0, null, null, 5, \"input\", [[\"class\", \"form-control\"], [\"formControlName\", \"lastName\"], [\"type\", \"text\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; if ((\"input\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 22)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 22).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 22)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i1.ɵnov(_v, 22)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), i1.ɵdid(22, 16384, null, 0, i2.DefaultValueAccessor, [i1.Renderer2, i1.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], null, null), i1.ɵprd(1024, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i2.DefaultValueAccessor]), i1.ɵdid(24, 671744, null, 0, i2.FormControlName, [[3, i2.ControlContainer], [8, null], [8, null], [6, i2.NG_VALUE_ACCESSOR], [2, i2.ɵangular_packages_forms_forms_j]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i2.NgControl, null, [i2.FormControlName]), i1.ɵdid(26, 16384, null, 0, i2.NgControlStatus, [[4, i2.NgControl]], null, null), (_l()(), i1.ɵeld(27, 0, null, null, 8, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(28, 0, null, null, 1, \"label\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Email\"])), (_l()(), i1.ɵeld(30, 0, null, null, 5, \"input\", [[\"class\", \"form-control\"], [\"formControlName\", \"email\"], [\"type\", \"email\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; if ((\"input\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 31)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 31).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 31)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i1.ɵnov(_v, 31)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), i1.ɵdid(31, 16384, null, 0, i2.DefaultValueAccessor, [i1.Renderer2, i1.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], null, null), i1.ɵprd(1024, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i2.DefaultValueAccessor]), i1.ɵdid(33, 671744, null, 0, i2.FormControlName, [[3, i2.ControlContainer], [8, null], [8, null], [6, i2.NG_VALUE_ACCESSOR], [2, i2.ɵangular_packages_forms_forms_j]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i2.NgControl, null, [i2.FormControlName]), i1.ɵdid(35, 16384, null, 0, i2.NgControlStatus, [[4, i2.NgControl]], null, null), (_l()(), i1.ɵeld(36, 0, null, null, 8, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(37, 0, null, null, 1, \"label\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Password\"])), (_l()(), i1.ɵeld(39, 0, null, null, 5, \"input\", [[\"class\", \"form-control\"], [\"formControlName\", \"password\"], [\"type\", \"password\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; if ((\"input\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 40)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 40).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 40)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i1.ɵnov(_v, 40)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), i1.ɵdid(40, 16384, null, 0, i2.DefaultValueAccessor, [i1.Renderer2, i1.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], null, null), i1.ɵprd(1024, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i2.DefaultValueAccessor]), i1.ɵdid(42, 671744, null, 0, i2.FormControlName, [[3, i2.ControlContainer], [8, null], [8, null], [6, i2.NG_VALUE_ACCESSOR], [2, i2.ɵangular_packages_forms_forms_j]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i2.NgControl, null, [i2.FormControlName]), i1.ɵdid(44, 16384, null, 0, i2.NgControlStatus, [[4, i2.NgControl]], null, null), (_l()(), i1.ɵeld(45, 0, null, null, 8, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(46, 0, null, null, 1, \"label\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Confirm Password\"])), (_l()(), i1.ɵeld(48, 0, null, null, 5, \"input\", [[\"class\", \"form-control\"], [\"formControlName\", \"confirmPassword\"], [\"type\", \"password\"]], [[2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"input\"], [null, \"blur\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; if ((\"input\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 49)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i1.ɵnov(_v, 49).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i1.ɵnov(_v, 49)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i1.ɵnov(_v, 49)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } return ad; }, null, null)), i1.ɵdid(49, 16384, null, 0, i2.DefaultValueAccessor, [i1.Renderer2, i1.ElementRef, [2, i2.COMPOSITION_BUFFER_MODE]], null, null), i1.ɵprd(1024, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i2.DefaultValueAccessor]), i1.ɵdid(51, 671744, null, 0, i2.FormControlName, [[3, i2.ControlContainer], [8, null], [8, null], [6, i2.NG_VALUE_ACCESSOR], [2, i2.ɵangular_packages_forms_forms_j]], { name: [0, \"name\"] }, null), i1.ɵprd(2048, null, i2.NgControl, null, [i2.FormControlName]), i1.ɵdid(53, 16384, null, 0, i2.NgControlStatus, [[4, i2.NgControl]], null, null), (_l()(), i1.ɵeld(54, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary btn-lg w-100 mt-2\"], [\"type\", \"submit\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Create\"])), (_l()(), i1.ɵeld(56, 0, null, null, 2, \"a\", [[\"class\", \"register-link\"], [\"routerLink\", \"/auth/login\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 57).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(57, 671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Already have an account? sign in here\"]))], function (_ck, _v) { var _co = _v.component; var currVal_7 = _co.registerForm; _ck(_v, 6, 0, currVal_7); var currVal_15 = \"firstName\"; _ck(_v, 15, 0, currVal_15); var currVal_23 = \"lastName\"; _ck(_v, 24, 0, currVal_23); var currVal_31 = \"email\"; _ck(_v, 33, 0, currVal_31); var currVal_39 = \"password\"; _ck(_v, 42, 0, currVal_39); var currVal_47 = \"confirmPassword\"; _ck(_v, 51, 0, currVal_47); var currVal_50 = \"/auth/login\"; _ck(_v, 57, 0, currVal_50); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 8).ngClassUntouched; var currVal_1 = i1.ɵnov(_v, 8).ngClassTouched; var currVal_2 = i1.ɵnov(_v, 8).ngClassPristine; var currVal_3 = i1.ɵnov(_v, 8).ngClassDirty; var currVal_4 = i1.ɵnov(_v, 8).ngClassValid; var currVal_5 = i1.ɵnov(_v, 8).ngClassInvalid; var currVal_6 = i1.ɵnov(_v, 8).ngClassPending; _ck(_v, 4, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6); var currVal_8 = i1.ɵnov(_v, 17).ngClassUntouched; var currVal_9 = i1.ɵnov(_v, 17).ngClassTouched; var currVal_10 = i1.ɵnov(_v, 17).ngClassPristine; var currVal_11 = i1.ɵnov(_v, 17).ngClassDirty; var currVal_12 = i1.ɵnov(_v, 17).ngClassValid; var currVal_13 = i1.ɵnov(_v, 17).ngClassInvalid; var currVal_14 = i1.ɵnov(_v, 17).ngClassPending; _ck(_v, 12, 0, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14); var currVal_16 = i1.ɵnov(_v, 26).ngClassUntouched; var currVal_17 = i1.ɵnov(_v, 26).ngClassTouched; var currVal_18 = i1.ɵnov(_v, 26).ngClassPristine; var currVal_19 = i1.ɵnov(_v, 26).ngClassDirty; var currVal_20 = i1.ɵnov(_v, 26).ngClassValid; var currVal_21 = i1.ɵnov(_v, 26).ngClassInvalid; var currVal_22 = i1.ɵnov(_v, 26).ngClassPending; _ck(_v, 21, 0, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21, currVal_22); var currVal_24 = i1.ɵnov(_v, 35).ngClassUntouched; var currVal_25 = i1.ɵnov(_v, 35).ngClassTouched; var currVal_26 = i1.ɵnov(_v, 35).ngClassPristine; var currVal_27 = i1.ɵnov(_v, 35).ngClassDirty; var currVal_28 = i1.ɵnov(_v, 35).ngClassValid; var currVal_29 = i1.ɵnov(_v, 35).ngClassInvalid; var currVal_30 = i1.ɵnov(_v, 35).ngClassPending; _ck(_v, 30, 0, currVal_24, currVal_25, currVal_26, currVal_27, currVal_28, currVal_29, currVal_30); var currVal_32 = i1.ɵnov(_v, 44).ngClassUntouched; var currVal_33 = i1.ɵnov(_v, 44).ngClassTouched; var currVal_34 = i1.ɵnov(_v, 44).ngClassPristine; var currVal_35 = i1.ɵnov(_v, 44).ngClassDirty; var currVal_36 = i1.ɵnov(_v, 44).ngClassValid; var currVal_37 = i1.ɵnov(_v, 44).ngClassInvalid; var currVal_38 = i1.ɵnov(_v, 44).ngClassPending; _ck(_v, 39, 0, currVal_32, currVal_33, currVal_34, currVal_35, currVal_36, currVal_37, currVal_38); var currVal_40 = i1.ɵnov(_v, 53).ngClassUntouched; var currVal_41 = i1.ɵnov(_v, 53).ngClassTouched; var currVal_42 = i1.ɵnov(_v, 53).ngClassPristine; var currVal_43 = i1.ɵnov(_v, 53).ngClassDirty; var currVal_44 = i1.ɵnov(_v, 53).ngClassValid; var currVal_45 = i1.ɵnov(_v, 53).ngClassInvalid; var currVal_46 = i1.ɵnov(_v, 53).ngClassPending; _ck(_v, 48, 0, currVal_40, currVal_41, currVal_42, currVal_43, currVal_44, currVal_45, currVal_46); var currVal_48 = i1.ɵnov(_v, 57).target; var currVal_49 = i1.ɵnov(_v, 57).href; _ck(_v, 56, 0, currVal_48, currVal_49); }); }\nexport function View_RegisterComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-register\", [], null, null, null, View_RegisterComponent_0, RenderType_RegisterComponent)), i1.ɵdid(1, 114688, null, 0, i5.RegisterComponent, [i2.FormBuilder, i6.LoadingActionService, i3.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar RegisterComponentNgFactory = i1.ɵccf(\"app-register\", i5.RegisterComponent, View_RegisterComponent_Host_0, {}, {}, []);\nexport { RegisterComponentNgFactory as RegisterComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  <h3 class=\"text-center mb-5 mt-3\">Create an account</h3>\n  <div class=\"login-form\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\n      <div class=\"form-group\">\n        <label>First Name</label>\n        <input type=\"text\" class=\"form-control\"  formControlName=\"firstName\">\n      </div>\n      <div class=\"form-group\">\n        <label>Last Name</label>\n        <input type=\"text\" class=\"form-control\"  formControlName=\"lastName\">\n      </div>\n      <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"email\" class=\"form-control\"  formControlName=\"email\">\n      </div>\n      <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n      </div>\n      <div class=\"form-group\">\n        <label>Confirm Password</label>\n        <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary btn-lg w-100 mt-2\">Create</button>\n      <a class=\"register-link\" routerLink=\"/auth/login\">Already have an account? sign in here</a>\n    </form>\n  </div>\n</div>\n  ","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { AuthService } from './../../../core/services/auth.service';\nimport { ComponentInterationService } from './../../../core/services/component-interation.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n\n  @Input() notFixed: boolean;\n  sub = new Subscription();\n\n  constructor(\n    public auth: AuthService,\n    private iteraction: ComponentInterationService\n  ) { }\n\n  ngOnInit() {\n    // console.log(this.auth.isLogin);\n    this.sub.add(this.iteraction.$getSource.subscribe((data) => console.log(data)));\n    this.sub.add(this.iteraction.$getSource.subscribe((data) => console.log(data)));\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  logout(): void {\n    this.auth.logout();\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./header.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./header.component\";\nimport * as i5 from \"../../../core/services/auth.service\";\nimport * as i6 from \"../../../core/services/component-interation.service\";\nvar styles_HeaderComponent = [i0.styles];\nvar RenderType_HeaderComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_HeaderComponent, data: {} });\nexport { RenderType_HeaderComponent as RenderType_HeaderComponent };\nfunction View_HeaderComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"a\", [[\"class\", \"nav-link\"], [\"routerLink\", \"/auth/login\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(1, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Login\"]))], function (_ck, _v) { var currVal_2 = \"/auth/login\"; _ck(_v, 1, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 1).target; var currVal_1 = i1.ɵnov(_v, 1).href; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nfunction View_HeaderComponent_2(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"a\", [[\"class\", \"nav-link\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.logout() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(-1, null, [\"Logout\"]))], null, null); }\nfunction View_HeaderComponent_3(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"a\", [[\"class\", \"nav-link\"], [\"routerLink\", \"/account\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 1).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(1, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"My account\"]))], function (_ck, _v) { var currVal_2 = \"/account\"; _ck(_v, 1, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 1).target; var currVal_1 = i1.ɵnov(_v, 1).href; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nexport function View_HeaderComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 62, \"header\", [[\"class\", \"page-header\"]], [[2, \"not-fixed\", null]], null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 61, \"nav\", [[\"class\", \"navbar navbar-dark navbar-expand-lg\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 60, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 2, \"a\", [[\"class\", \"navbar-brand\"], [\"routerLink\", \"/\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 4).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(4, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵeld(5, 0, null, null, 0, \"img\", [[\"alt\", \"\"], [\"src\", \"https://angular.io/assets/images/logos/angular/logo-nav@2x.png\"], [\"width\", \"103\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"button\", [[\"aria-controls\", \"navbarNav\"], [\"aria-expanded\", \"false\"], [\"aria-label\", \"Toggle navigation\"], [\"class\", \"navbar-toggler\"], [\"data-target\", \"#navbarNav\"], [\"data-toggle\", \"collapse\"], [\"type\", \"button\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(7, 0, null, null, 0, \"span\", [[\"class\", \"navbar-toggler-icon\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(8, 0, null, null, 46, \"div\", [[\"class\", \"collapse navbar-collapse\"], [\"id\", \"navbarNav\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(9, 0, null, null, 45, \"ul\", [[\"class\", \"navbar-nav\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(10, 0, null, null, 9, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(11, 0, null, null, 8, \"a\", [[\"class\", \"nav-link\"], [\"routerLink\", \"/\"], [\"routerLinkActive\", \"active\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 12).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(12, 671744, [[2, 4]], 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i1.ɵdid(13, 1720320, null, 2, i2.RouterLinkActive, [i2.Router, i1.ElementRef, i1.Renderer2, i1.ChangeDetectorRef], { routerLinkActiveOptions: [0, \"routerLinkActiveOptions\"], routerLinkActive: [1, \"routerLinkActive\"] }, null), i1.ɵqud(603979776, 1, { links: 1 }), i1.ɵqud(603979776, 2, { linksWithHrefs: 1 }), i1.ɵpod(16, { exact: 0 }), (_l()(), i1.ɵted(-1, null, [\"Home \"])), (_l()(), i1.ɵeld(18, 0, null, null, 1, \"span\", [[\"class\", \"sr-only\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"(current)\"])), (_l()(), i1.ɵeld(20, 0, null, null, 6, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(21, 0, null, null, 5, \"a\", [[\"class\", \"nav-link\"], [\"routerLink\", \"/directive\"], [\"routerLinkActive\", \"active\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 22).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(22, 671744, [[4, 4]], 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i1.ɵdid(23, 1720320, null, 2, i2.RouterLinkActive, [i2.Router, i1.ElementRef, i1.Renderer2, i1.ChangeDetectorRef], { routerLinkActive: [0, \"routerLinkActive\"] }, null), i1.ɵqud(603979776, 3, { links: 1 }), i1.ɵqud(603979776, 4, { linksWithHrefs: 1 }), (_l()(), i1.ɵted(-1, null, [\"Courses\"])), (_l()(), i1.ɵeld(27, 0, null, null, 6, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(28, 0, null, null, 5, \"a\", [[\"class\", \"nav-link\"], [\"routerLink\", \"/client\"], [\"routerLinkActive\", \"active\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 29).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(29, 671744, [[6, 4]], 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i1.ɵdid(30, 1720320, null, 2, i2.RouterLinkActive, [i2.Router, i1.ElementRef, i1.Renderer2, i1.ChangeDetectorRef], { routerLinkActive: [0, \"routerLinkActive\"] }, null), i1.ɵqud(603979776, 5, { links: 1 }), i1.ɵqud(603979776, 6, { linksWithHrefs: 1 }), (_l()(), i1.ɵted(-1, null, [\"Client\"])), (_l()(), i1.ɵeld(34, 0, null, null, 6, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(35, 0, null, null, 5, \"a\", [[\"class\", \"nav-link\"], [\"routerLink\", \"/new-login\"], [\"routerLinkActive\", \"active\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 36).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(36, 671744, [[8, 4]], 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i1.ɵdid(37, 1720320, null, 2, i2.RouterLinkActive, [i2.Router, i1.ElementRef, i1.Renderer2, i1.ChangeDetectorRef], { routerLinkActive: [0, \"routerLinkActive\"] }, null), i1.ɵqud(603979776, 7, { links: 1 }), i1.ɵqud(603979776, 8, { linksWithHrefs: 1 }), (_l()(), i1.ɵted(-1, null, [\"New login\"])), (_l()(), i1.ɵeld(41, 0, null, null, 6, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(42, 0, null, null, 5, \"a\", [[\"class\", \"nav-link\"], [\"routerLink\", \"/api-working\"], [\"routerLinkActive\", \"active\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 43).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(43, 671744, [[10, 4]], 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i1.ɵdid(44, 1720320, null, 2, i2.RouterLinkActive, [i2.Router, i1.ElementRef, i1.Renderer2, i1.ChangeDetectorRef], { routerLinkActive: [0, \"routerLinkActive\"] }, null), i1.ɵqud(603979776, 9, { links: 1 }), i1.ɵqud(603979776, 10, { linksWithHrefs: 1 }), (_l()(), i1.ɵted(-1, null, [\"Api\"])), (_l()(), i1.ɵeld(48, 0, null, null, 6, \"li\", [[\"class\", \"nav-item\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(49, 0, null, null, 5, \"a\", [[\"class\", \"nav-link\"], [\"routerLink\", \"/lazy\"], [\"routerLinkActive\", \"active\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 50).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(50, 671744, [[12, 4]], 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), i1.ɵdid(51, 1720320, null, 2, i2.RouterLinkActive, [i2.Router, i1.ElementRef, i1.Renderer2, i1.ChangeDetectorRef], { routerLinkActive: [0, \"routerLinkActive\"] }, null), i1.ɵqud(603979776, 11, { links: 1 }), i1.ɵqud(603979776, 12, { linksWithHrefs: 1 }), (_l()(), i1.ɵted(-1, null, [\"Lazy\"])), (_l()(), i1.ɵeld(55, 0, null, null, 7, \"ul\", [[\"class\", \"navbar-nav ml-auto mt-2 mt-lg-0\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(56, 0, null, null, 6, \"li\", [[\"class\", \"nav-item active\"]], [[2, \"d-flex\", null]], null, null, null, null)), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HeaderComponent_1)), i1.ɵdid(58, 16384, null, 0, i3.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HeaderComponent_2)), i1.ɵdid(60, 16384, null, 0, i3.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_HeaderComponent_3)), i1.ɵdid(62, 16384, null, 0, i3.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = \"/\"; _ck(_v, 4, 0, currVal_3); var currVal_6 = \"/\"; _ck(_v, 12, 0, currVal_6); var currVal_7 = _ck(_v, 16, 0, true); var currVal_8 = \"active\"; _ck(_v, 13, 0, currVal_7, currVal_8); var currVal_11 = \"/directive\"; _ck(_v, 22, 0, currVal_11); var currVal_12 = \"active\"; _ck(_v, 23, 0, currVal_12); var currVal_15 = \"/client\"; _ck(_v, 29, 0, currVal_15); var currVal_16 = \"active\"; _ck(_v, 30, 0, currVal_16); var currVal_19 = \"/new-login\"; _ck(_v, 36, 0, currVal_19); var currVal_20 = \"active\"; _ck(_v, 37, 0, currVal_20); var currVal_23 = \"/api-working\"; _ck(_v, 43, 0, currVal_23); var currVal_24 = \"active\"; _ck(_v, 44, 0, currVal_24); var currVal_27 = \"/lazy\"; _ck(_v, 50, 0, currVal_27); var currVal_28 = \"active\"; _ck(_v, 51, 0, currVal_28); var currVal_30 = !_co.auth.isLogin; _ck(_v, 58, 0, currVal_30); var currVal_31 = _co.auth.isLogin; _ck(_v, 60, 0, currVal_31); var currVal_32 = _co.auth.isLogin; _ck(_v, 62, 0, currVal_32); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.notFixed; _ck(_v, 0, 0, currVal_0); var currVal_1 = i1.ɵnov(_v, 4).target; var currVal_2 = i1.ɵnov(_v, 4).href; _ck(_v, 3, 0, currVal_1, currVal_2); var currVal_4 = i1.ɵnov(_v, 12).target; var currVal_5 = i1.ɵnov(_v, 12).href; _ck(_v, 11, 0, currVal_4, currVal_5); var currVal_9 = i1.ɵnov(_v, 22).target; var currVal_10 = i1.ɵnov(_v, 22).href; _ck(_v, 21, 0, currVal_9, currVal_10); var currVal_13 = i1.ɵnov(_v, 29).target; var currVal_14 = i1.ɵnov(_v, 29).href; _ck(_v, 28, 0, currVal_13, currVal_14); var currVal_17 = i1.ɵnov(_v, 36).target; var currVal_18 = i1.ɵnov(_v, 36).href; _ck(_v, 35, 0, currVal_17, currVal_18); var currVal_21 = i1.ɵnov(_v, 43).target; var currVal_22 = i1.ɵnov(_v, 43).href; _ck(_v, 42, 0, currVal_21, currVal_22); var currVal_25 = i1.ɵnov(_v, 50).target; var currVal_26 = i1.ɵnov(_v, 50).href; _ck(_v, 49, 0, currVal_25, currVal_26); var currVal_29 = _co.auth.isLogin; _ck(_v, 56, 0, currVal_29); }); }\nexport function View_HeaderComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-header\", [], null, null, null, View_HeaderComponent_0, RenderType_HeaderComponent)), i1.ɵdid(1, 245760, null, 0, i4.HeaderComponent, [i5.AuthService, i6.ComponentInterationService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar HeaderComponentNgFactory = i1.ɵccf(\"app-header\", i4.HeaderComponent, View_HeaderComponent_Host_0, { notFixed: \"notFixed\" }, {}, []);\nexport { HeaderComponentNgFactory as HeaderComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<header class=\"page-header\" [class.not-fixed]=\"notFixed\">\n  <nav class=\"navbar navbar-dark navbar-expand-lg\">\n    <div class=\"container\">\n      <a class=\"navbar-brand\" routerLink=\"/\"><img src=\"https://angular.io/assets/images/logos/angular/logo-nav@2x.png\" width=\"103\" alt=\"\"></a>\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Home <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/directive\" routerLinkActive=\"active\">Courses</a>\n          </li>\n          <!-- <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/events\" routerLinkActive=\"active\">Events</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/lifecycle-hooks\" routerLinkActive=\"active\">Lifecycle Hooks</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/form\" routerLinkActive=\"active\">Form</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/learn-form\" routerLinkActive=\"active\">Learn Form</a>\n          </li> -->\n          <!-- <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/feature\" routerLinkActive=\"active\" [queryParams]=\"{abc: 'dong'}\">Feature</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/other\" routerLinkActive=\"active\">Other</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/user\" routerLinkActive=\"active\">User</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/other-login\" routerLinkActive=\"active\">Other Login</a>\n          </li> -->\n\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/client\" routerLinkActive=\"active\">Client</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/new-login\" routerLinkActive=\"active\">New login</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/api-working\" routerLinkActive=\"active\">Api</a>\n          </li>\n\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"/lazy\" routerLinkActive=\"active\">Lazy</a>\n          </li>\n\n        </ul>\n      </div>\n      <ul class=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n        <li class=\"nav-item active\" [class.d-flex]=\"auth.isLogin\">\n          <a class=\"nav-link\" *ngIf=\"!auth.isLogin\" routerLink=\"/auth/login\">Login</a>\n          <a class=\"nav-link\" *ngIf=\"auth.isLogin\" (click)=\"logout()\">Logout</a>\n          <a class=\"nav-link\" *ngIf=\"auth.isLogin\"routerLink=\"/account\">My account</a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n</header>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./footer.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./footer.component\";\nvar styles_FooterComponent = [i0.styles];\nvar RenderType_FooterComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_FooterComponent, data: {} });\nexport { RenderType_FooterComponent as RenderType_FooterComponent };\nexport function View_FooterComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 2, \"footer\", [[\"class\", \"page-footer py-3 text-center\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Footer \"]))], null, null); }\nexport function View_FooterComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-footer\", [], null, null, null, View_FooterComponent_0, RenderType_FooterComponent)), i1.ɵdid(1, 114688, null, 0, i2.FooterComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar FooterComponentNgFactory = i1.ɵccf(\"app-footer\", i2.FooterComponent, View_FooterComponent_Host_0, {}, {}, []);\nexport { FooterComponentNgFactory as FooterComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<footer class=\"page-footer py-3 text-center\">\n  <div class=\"container\">\n    Footer\n  </div>\n</footer>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./app.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./shared/components/header/header.component.ngfactory\";\nimport * as i3 from \"./shared/components/header/header.component\";\nimport * as i4 from \"./core/services/auth.service\";\nimport * as i5 from \"./core/services/component-interation.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"./shared/components/footer/footer.component.ngfactory\";\nimport * as i8 from \"./shared/components/footer/footer.component\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"./app.component\";\nimport * as i11 from \"./core/services/loading-action.service\";\nvar styles_AppComponent = [i0.styles];\nvar RenderType_AppComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_AppComponent, data: {} });\nexport { RenderType_AppComponent as RenderType_AppComponent };\nfunction View_AppComponent_1(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 0, \"div\", [[\"class\", \"loading\"]], null, null, null, null, null))], null, null); }\nexport function View_AppComponent_0(_l) { return i1.ɵvid(0, [i1.ɵqud(402653184, 1, { addClassEle: 0 }), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"app-header\", [], null, null, null, i2.View_HeaderComponent_0, i2.RenderType_HeaderComponent)), i1.ɵdid(2, 245760, null, 0, i3.HeaderComponent, [i4.AuthService, i5.ComponentInterationService], null, null), (_l()(), i1.ɵeld(3, 0, null, null, 2, \"main\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i1.ɵdid(5, 212992, null, 0, i6.RouterOutlet, [i6.ChildrenOutletContexts, i1.ViewContainerRef, i1.ComponentFactoryResolver, [8, null], i1.ChangeDetectorRef], null, null), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"app-footer\", [], null, null, null, i7.View_FooterComponent_0, i7.RenderType_FooterComponent)), i1.ɵdid(7, 114688, null, 0, i8.FooterComponent, [], null, null), (_l()(), i1.ɵand(16777216, null, null, 1, null, View_AppComponent_1)), i1.ɵdid(9, 16384, null, 0, i9.NgIf, [i1.ViewContainerRef, i1.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; _ck(_v, 2, 0); _ck(_v, 5, 0); _ck(_v, 7, 0); var currVal_0 = _co.toggleLoading; _ck(_v, 9, 0, currVal_0); }, null); }\nexport function View_AppComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-root\", [], null, null, null, View_AppComponent_0, RenderType_AppComponent)), i1.ɵdid(1, 114688, null, 0, i10.AppComponent, [i6.Router, i4.AuthService, i11.LoadingActionService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar AppComponentNgFactory = i1.ɵccf(\"app-root\", i10.AppComponent, View_AppComponent_Host_0, {}, {}, []);\nexport { AppComponentNgFactory as AppComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"ul[_ngcontent-%COMP%]{display:flex;list-style-type:none}ul[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{padding:15px;background:#ccc;text-align:center;min-width:100px}ul[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%]{background:#000;color:#fff}\"];\nexport { styles as styles };\n","<app-header></app-header>\n<main>\n  <router-outlet></router-outlet>\n</main>\n<app-footer></app-footer>\n<div class=\"loading\" *ngIf=\"toggleLoading\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-feature',\n  templateUrl: './feature.component.html',\n  styleUrls: ['./feature.component.scss']\n})\nexport class FeatureComponent implements OnInit {\n\n  constructor(\n    private activated: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.activated.queryParamMap.subscribe(e => {\n      console.log(e);\n    });\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./feature.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./feature.component\";\nvar styles_FeatureComponent = [i0.styles];\nvar RenderType_FeatureComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_FeatureComponent, data: {} });\nexport { RenderType_FeatureComponent as RenderType_FeatureComponent };\nexport function View_FeatureComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 14, \"section\", [[\"class\", \"section-banner\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 0, \"img\", [[\"alt\", \"\"], [\"src\", \"./assets/slider1.jpg\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 10, \"div\", [[\"class\", \"caption\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 9, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(4, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"We are here to help you\"])), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Welcome to Angular Courses\"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Lorem ipsum dolor sit amet consectetur, adipisicing elit.\"])), (_l()(), i1.ɵeld(10, 0, null, null, 2, \"a\", [[\"routerLink\", \"/auth/register\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 11).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(11, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Register now\"])), (_l()(), i1.ɵeld(13, 0, null, null, 1, \"div\", [[\"class\", \"cotainer\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" Feature component \"]))], function (_ck, _v) { var currVal_2 = \"/auth/register\"; _ck(_v, 11, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 11).target; var currVal_1 = i1.ɵnov(_v, 11).href; _ck(_v, 10, 0, currVal_0, currVal_1); }); }\nexport function View_FeatureComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-feature\", [], null, null, null, View_FeatureComponent_0, RenderType_FeatureComponent)), i1.ɵdid(1, 114688, null, 0, i4.FeatureComponent, [i2.ActivatedRoute], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar FeatureComponentNgFactory = i1.ɵccf(\"app-feature\", i4.FeatureComponent, View_FeatureComponent_Host_0, {}, {}, []);\nexport { FeatureComponentNgFactory as FeatureComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","\n<section class=\"section-banner\">\n  <img src=\"./assets/slider1.jpg\" alt=\"\">\n  <div class=\"caption\">\n    <div class=\"container\">\n      <span>We are here to help you</span>\n      <h2>Welcome to Angular Courses</h2>\n      <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit.</p>\n      <a routerLink=\"/auth/register\">Register now</a>\n    </div>\n  </div>\n  <div class=\"cotainer\">\n    Feature component\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-other',\n  templateUrl: './other.component.html',\n  styleUrls: ['./other.component.scss']\n})\nexport class OtherComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./other.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./other.component\";\nvar styles_OtherComponent = [i0.styles];\nvar RenderType_OtherComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_OtherComponent, data: {} });\nexport { RenderType_OtherComponent as RenderType_OtherComponent };\nexport function View_OtherComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" other works!\\n\"]))], null, null); }\nexport function View_OtherComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-other\", [], null, null, null, View_OtherComponent_0, RenderType_OtherComponent)), i1.ɵdid(1, 114688, null, 0, i2.OtherComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar OtherComponentNgFactory = i1.ɵccf(\"app-other\", i2.OtherComponent, View_OtherComponent_Host_0, {}, {}, []);\nexport { OtherComponentNgFactory as OtherComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<p>\n  other works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../core/services/login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-other-login',\n  templateUrl: './other-login.component.html',\n  styleUrls: ['./other-login.component.scss']\n})\nexport class OtherLoginComponent implements OnInit {\n\n  constructor(\n    private loginService: LoginService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.loginService.isLogin = true;\n    this.router.navigateByUrl('/user');\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  isLogin = false;\n\n  constructor(\n    private router: Router\n  ) { }\n\n  logout() {\n    this.isLogin = false;\n    // this.router.navigateByUrl('/');\n  }\n}\n","import { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class LoginService {\n    constructor(router) {\n        this.router = router;\n        this.isLogin = false;\n    }\n    logout() {\n        this.isLogin = false;\n        // this.router.navigateByUrl('/');\n    }\n}\nLoginService.ngInjectableDef = i0.defineInjectable({ factory: function LoginService_Factory() { return new LoginService(i0.inject(i1.Router)); }, token: LoginService, providedIn: \"root\" });\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./other-login.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./other-login.component\";\nimport * as i3 from \"../core/services/login.service\";\nimport * as i4 from \"@angular/router\";\nvar styles_OtherLoginComponent = [i0.styles];\nvar RenderType_OtherLoginComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_OtherLoginComponent, data: {} });\nexport { RenderType_OtherLoginComponent as RenderType_OtherLoginComponent };\nexport function View_OtherLoginComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 7, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 3, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"label\", [[\"for\", \"my-input\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Login\"])), (_l()(), i1.ɵeld(4, 0, null, null, 0, \"input\", [[\"class\", \"form-control\"], [\"id\", \"my-input\"], [\"name\", \"\"], [\"type\", \"text\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 2, \"div\", [[\"class\", \"buttons-set\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.login() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(-1, null, [\" Login \"]))], null, null); }\nexport function View_OtherLoginComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-other-login\", [], null, null, null, View_OtherLoginComponent_0, RenderType_OtherLoginComponent)), i1.ɵdid(1, 114688, null, 0, i2.OtherLoginComponent, [i3.LoginService, i4.Router], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar OtherLoginComponentNgFactory = i1.ɵccf(\"app-other-login\", i2.OtherLoginComponent, View_OtherLoginComponent_Host_0, {}, {}, []);\nexport { OtherLoginComponentNgFactory as OtherLoginComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  <div class=\"form-group\">\n    <label for=\"my-input\">Login</label>\n    <input id=\"my-input\" class=\"form-control\" type=\"text\" name=\"\">\n  </div>\n  <div class=\"buttons-set\">\n    <button class=\"btn btn-primary\" (click)=\"login()\">\n      Login\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../core/services/login.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(\n    private loginService: LoginService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.loginService.logout();\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./user.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./user.component\";\nimport * as i5 from \"../core/services/login.service\";\nvar styles_UserComponent = [i0.styles];\nvar RenderType_UserComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_UserComponent, data: {} });\nexport { RenderType_UserComponent as RenderType_UserComponent };\nexport function View_UserComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 12, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" THis is user page \"])), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.logout() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(-1, null, [\" Logout \"])), (_l()(), i1.ɵeld(4, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(5, 0, null, null, 2, \"a\", [[\"routerLink\", \"/user/profile\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 6).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(6, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Profile\"])), (_l()(), i1.ɵeld(8, 0, null, null, 2, \"a\", [[\"routerLink\", \"/user/dashboard\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 9).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(9, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Dashboard\"])), (_l()(), i1.ɵeld(11, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i1.ɵdid(12, 212992, null, 0, i2.RouterOutlet, [i2.ChildrenOutletContexts, i1.ViewContainerRef, i1.ComponentFactoryResolver, [8, null], i1.ChangeDetectorRef], null, null)], function (_ck, _v) { var currVal_2 = \"/user/profile\"; _ck(_v, 6, 0, currVal_2); var currVal_5 = \"/user/dashboard\"; _ck(_v, 9, 0, currVal_5); _ck(_v, 12, 0); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 6).target; var currVal_1 = i1.ɵnov(_v, 6).href; _ck(_v, 5, 0, currVal_0, currVal_1); var currVal_3 = i1.ɵnov(_v, 9).target; var currVal_4 = i1.ɵnov(_v, 9).href; _ck(_v, 8, 0, currVal_3, currVal_4); }); }\nexport function View_UserComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-user\", [], null, null, null, View_UserComponent_0, RenderType_UserComponent)), i1.ɵdid(1, 114688, null, 0, i4.UserComponent, [i5.LoginService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar UserComponentNgFactory = i1.ɵccf(\"app-user\", i4.UserComponent, View_UserComponent_Host_0, {}, {}, []);\nexport { UserComponentNgFactory as UserComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  THis is user page\n  <button class=\"btn btn-primary\" (click)=\"logout()\">\n    Logout\n  </button>\n\n  <br>\n  <a routerLink=\"/user/profile\">Profile</a>\n  <a routerLink=\"/user/dashboard\">Dashboard</a>\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\nexport class UserProfileComponent implements OnInit {\n\n  typing = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onTyping() {\n    this.typing = true;\n    console.log('asd');\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./user-profile.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./user-profile.component\";\nvar styles_UserProfileComponent = [i0.styles];\nvar RenderType_UserProfileComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_UserProfileComponent, data: {} });\nexport { RenderType_UserProfileComponent as RenderType_UserProfileComponent };\nexport function View_UserProfileComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 3, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"label\", [[\"for\", \"my-input\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Text\"])), (_l()(), i1.ɵeld(4, 0, null, null, 0, \"input\", [[\"class\", \"form-control\"], [\"id\", \"my-input\"], [\"name\", \"\"], [\"type\", \"text\"]], null, [[null, \"input\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"input\" === en)) {\n        var pd_0 = (_co.onTyping() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null))], null, null); }\nexport function View_UserProfileComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-user-profile\", [], null, null, null, View_UserProfileComponent_0, RenderType_UserProfileComponent)), i1.ɵdid(1, 114688, null, 0, i2.UserProfileComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar UserProfileComponentNgFactory = i1.ɵccf(\"app-user-profile\", i2.UserProfileComponent, View_UserProfileComponent_Host_0, {}, {}, []);\nexport { UserProfileComponentNgFactory as UserProfileComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  <div class=\"form-group\">\n    <label for=\"my-input\">Text</label>\n    <input id=\"my-input\" class=\"form-control\" type=\"text\" name=\"\" (input)=\"onTyping()\">\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.scss']\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    console.log(this.route.snapshot.data['user']);\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./user-dashboard.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./user-dashboard.component\";\nimport * as i3 from \"@angular/router\";\nvar styles_UserDashboardComponent = [i0.styles];\nvar RenderType_UserDashboardComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_UserDashboardComponent, data: {} });\nexport { RenderType_UserDashboardComponent as RenderType_UserDashboardComponent };\nexport function View_UserDashboardComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" user-dashboard works!\\n\"]))], null, null); }\nexport function View_UserDashboardComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-user-dashboard\", [], null, null, null, View_UserDashboardComponent_0, RenderType_UserDashboardComponent)), i1.ɵdid(1, 114688, null, 0, i2.UserDashboardComponent, [i3.ActivatedRoute], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar UserDashboardComponentNgFactory = i1.ɵccf(\"app-user-dashboard\", i2.UserDashboardComponent, View_UserDashboardComponent_Host_0, {}, {}, []);\nexport { UserDashboardComponentNgFactory as UserDashboardComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<p>\n  user-dashboard works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenService } from '../core/services/authen.service';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.component.html',\n  styleUrls: ['./client.component.scss']\n})\nexport class ClientComponent implements OnInit {\n\n  constructor(\n    private authen: AuthenService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n    this.authen.logout();\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenService {\n  isLogin = false;\n\n  constructor(\n    private router: Router\n  ) { }\n\n  logout() {\n    this.isLogin = false;\n    // this.router.navigateByUrl('/');\n  }\n}\n","import { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthenService {\n    constructor(router) {\n        this.router = router;\n        this.isLogin = false;\n    }\n    logout() {\n        this.isLogin = false;\n        // this.router.navigateByUrl('/');\n    }\n}\nAuthenService.ngInjectableDef = i0.defineInjectable({ factory: function AuthenService_Factory() { return new AuthenService(i0.inject(i1.Router)); }, token: AuthenService, providedIn: \"root\" });\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./client.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./client.component\";\nimport * as i5 from \"../core/services/authen.service\";\nvar styles_ClientComponent = [i0.styles];\nvar RenderType_ClientComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_ClientComponent, data: {} });\nexport { RenderType_ClientComponent as RenderType_ClientComponent };\nexport function View_ClientComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 13, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" client works! \"])), (_l()(), i1.ɵeld(3, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-primary\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.logout() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i1.ɵted(-1, null, [\" Logout \"])), (_l()(), i1.ɵeld(5, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 2, \"a\", [[\"routerLink\", \"/client/home\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 7).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(7, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Home\"])), (_l()(), i1.ɵeld(9, 0, null, null, 2, \"a\", [[\"routerLink\", \"/client/profile\"]], [[1, \"target\", 0], [8, \"href\", 4]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i1.ɵnov(_v, 10).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i1.ɵdid(10, 671744, null, 0, i2.RouterLinkWithHref, [i2.Router, i2.ActivatedRoute, i3.LocationStrategy], { routerLink: [0, \"routerLink\"] }, null), (_l()(), i1.ɵted(-1, null, [\"Profile\"])), (_l()(), i1.ɵeld(12, 16777216, null, null, 1, \"router-outlet\", [], null, null, null, null, null)), i1.ɵdid(13, 212992, null, 0, i2.RouterOutlet, [i2.ChildrenOutletContexts, i1.ViewContainerRef, i1.ComponentFactoryResolver, [8, null], i1.ChangeDetectorRef], null, null)], function (_ck, _v) { var currVal_2 = \"/client/home\"; _ck(_v, 7, 0, currVal_2); var currVal_5 = \"/client/profile\"; _ck(_v, 10, 0, currVal_5); _ck(_v, 13, 0); }, function (_ck, _v) { var currVal_0 = i1.ɵnov(_v, 7).target; var currVal_1 = i1.ɵnov(_v, 7).href; _ck(_v, 6, 0, currVal_0, currVal_1); var currVal_3 = i1.ɵnov(_v, 10).target; var currVal_4 = i1.ɵnov(_v, 10).href; _ck(_v, 9, 0, currVal_3, currVal_4); }); }\nexport function View_ClientComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-client\", [], null, null, null, View_ClientComponent_0, RenderType_ClientComponent)), i1.ɵdid(1, 114688, null, 0, i4.ClientComponent, [i5.AuthenService], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar ClientComponentNgFactory = i1.ɵccf(\"app-client\", i4.ClientComponent, View_ClientComponent_Host_0, {}, {}, []);\nexport { ClientComponentNgFactory as ClientComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  <p>\n    client works!\n  </p>\n  <button class=\"btn btn-primary\" (click)=\"logout()\">\n    Logout\n  </button>\n  <br>\n  <a routerLink=\"/client/home\">Home</a>\n  <a routerLink=\"/client/profile\">Profile</a>\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-client-home',\n  templateUrl: './client-home.component.html',\n  styleUrls: ['./client-home.component.scss']\n})\nexport class ClientHomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./client-home.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./client-home.component\";\nvar styles_ClientHomeComponent = [i0.styles];\nvar RenderType_ClientHomeComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_ClientHomeComponent, data: {} });\nexport { RenderType_ClientHomeComponent as RenderType_ClientHomeComponent };\nexport function View_ClientHomeComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"p\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\" client-home works!\\n\"]))], null, null); }\nexport function View_ClientHomeComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-client-home\", [], null, null, null, View_ClientHomeComponent_0, RenderType_ClientHomeComponent)), i1.ɵdid(1, 114688, null, 0, i2.ClientHomeComponent, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar ClientHomeComponentNgFactory = i1.ɵccf(\"app-client-home\", i2.ClientHomeComponent, View_ClientHomeComponent_Host_0, {}, {}, []);\nexport { ClientHomeComponentNgFactory as ClientHomeComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<p>\n  client-home works!\n</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-client-profile',\n  templateUrl: './client-profile.component.html',\n  styleUrls: ['./client-profile.component.scss']\n})\nexport class ClientProfileComponent implements OnInit {\n\n  isTyping = false;\n\n  constructor(\n    private activate: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    console.log(this.activate.snapshot.data['userData']);\n  }\n\n  type() {\n    console.log('ok');\n    this.isTyping = true;\n  }\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./client-profile.component.scss.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"./client-profile.component\";\nimport * as i3 from \"@angular/router\";\nvar styles_ClientProfileComponent = [i0.styles];\nvar RenderType_ClientProfileComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_ClientProfileComponent, data: {} });\nexport { RenderType_ClientProfileComponent as RenderType_ClientProfileComponent };\nexport function View_ClientProfileComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 4, \"div\", [[\"class\", \"container\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(1, 0, null, null, 3, \"div\", [[\"class\", \"form-group\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(2, 0, null, null, 1, \"label\", [[\"for\", \"my-input\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Edit pfile\"])), (_l()(), i1.ɵeld(4, 0, null, null, 0, \"input\", [[\"class\", \"form-control\"], [\"id\", \"my-input\"], [\"name\", \"\"], [\"type\", \"text\"]], null, [[null, \"input\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"input\" === en)) {\n        var pd_0 = (_co.type() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null))], null, null); }\nexport function View_ClientProfileComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"app-client-profile\", [], null, null, null, View_ClientProfileComponent_0, RenderType_ClientProfileComponent)), i1.ɵdid(1, 114688, null, 0, i2.ClientProfileComponent, [i3.ActivatedRoute], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar ClientProfileComponentNgFactory = i1.ɵccf(\"app-client-profile\", i2.ClientProfileComponent, View_ClientProfileComponent_Host_0, {}, {}, []);\nexport { ClientProfileComponentNgFactory as ClientProfileComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\"];\nexport { styles as styles };\n","<div class=\"container\">\n  <div class=\"form-group\">\n    <label for=\"my-input\">Edit pfile</label>\n    <input id=\"my-input\" class=\"form-control\" type=\"text\" name=\"\" (input)=\"type()\">\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    console.log(req);\n    // Get the auth token from the service.\n    // const authToken = this.auth.getAuthorizationToken();\n\n    // Clone the request and replace the original headers with\n    // cloned headers, updated with the authorization.\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', 'asdasd')\n    });\n\n    // send cloned request with header to the next handler.\n    return next.handle(authReq);\n  }\n}\n","import * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n    constructor() { }\n    intercept(req, next) {\n        console.log(req);\n        // Get the auth token from the service.\n        // const authToken = this.auth.getAuthorizationToken();\n        // Clone the request and replace the original headers with\n        // cloned headers, updated with the authorization.\n        const authReq = req.clone({\n            headers: req.headers.set('Authorization', 'asdasd')\n        });\n        // send cloned request with header to the next handler.\n        return next.handle(authReq);\n    }\n}\nAuthInterceptor.ngInjectableDef = i0.defineInjectable({ factory: function AuthInterceptor_Factory() { return new AuthInterceptor(); }, token: AuthInterceptor, providedIn: \"root\" });\n","import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SelectivePreloadingStrategyService implements PreloadingStrategy {\n\n  constructor() { }\n\n  preload(route: Route, fn: () => Observable<any>): Observable<any> {\n    if (route.data && route.data['preload']) {\n      return fn();\n    }\n    return of(null);\n  }\n}\n","import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SelectivePreloadingStrategyService {\n    constructor() { }\n    preload(route, fn) {\n        if (route.data && route.data['preload']) {\n            return fn();\n        }\n        return of(null);\n    }\n}\nSelectivePreloadingStrategyService.ngInjectableDef = i0.defineInjectable({ factory: function SelectivePreloadingStrategyService_Factory() { return new SelectivePreloadingStrategyService(); }, token: SelectivePreloadingStrategyService, providedIn: \"root\" });\n","/**\n * @license Angular v6.1.10\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nimport { concat, defer, fromEvent, of, throwError, NEVER, Subject, merge } from 'rxjs';\nimport { filter, map, publish, switchMap, take, tap } from 'rxjs/operators';\nimport { Injectable, APP_INITIALIZER, ApplicationRef, InjectionToken, Injector, NgModule, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ERR_SW_NOT_SUPPORTED = 'Service workers are disabled or not supported by this browser';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction errorObservable(message) {\n    return defer(() => throwError(new Error(message)));\n}\n/**\n * \\@experimental\n */\nclass NgswCommChannel {\n    /**\n     * @param {?} serviceWorker\n     */\n    constructor(serviceWorker) {\n        this.serviceWorker = serviceWorker;\n        if (!serviceWorker) {\n            this.worker = this.events = this.registration = errorObservable(ERR_SW_NOT_SUPPORTED);\n        }\n        else {\n            /** @type {?} */\n            const controllerChangeEvents = fromEvent(serviceWorker, 'controllerchange');\n            /** @type {?} */\n            const controllerChanges = controllerChangeEvents.pipe(map(() => serviceWorker.controller));\n            /** @type {?} */\n            const currentController = defer(() => of(serviceWorker.controller));\n            /** @type {?} */\n            const controllerWithChanges = concat(currentController, controllerChanges);\n            this.worker = controllerWithChanges.pipe(filter(c => !!c));\n            this.registration = /** @type {?} */ ((this.worker.pipe(switchMap(() => serviceWorker.getRegistration()))));\n            /** @type {?} */\n            const rawEvents = fromEvent(serviceWorker, 'message');\n            /** @type {?} */\n            const rawEventPayload = rawEvents.pipe(map(event => event.data));\n            /** @type {?} */\n            const eventsUnconnected = rawEventPayload.pipe(filter(event => event && event.type));\n            /** @type {?} */\n            const events = /** @type {?} */ (eventsUnconnected.pipe(publish()));\n            events.connect();\n            this.events = events;\n        }\n    }\n    /**\n     * @param {?} action\n     * @param {?} payload\n     * @return {?}\n     */\n    postMessage(action, payload) {\n        return this.worker\n            .pipe(take(1), tap((sw) => {\n            sw.postMessage(Object.assign({ action }, payload));\n        }))\n            .toPromise()\n            .then(() => undefined);\n    }\n    /**\n     * @param {?} type\n     * @param {?} payload\n     * @param {?} nonce\n     * @return {?}\n     */\n    postMessageWithStatus(type, payload, nonce) {\n        /** @type {?} */\n        const waitForStatus = this.waitForStatus(nonce);\n        /** @type {?} */\n        const postMessage = this.postMessage(type, payload);\n        return Promise.all([waitForStatus, postMessage]).then(() => undefined);\n    }\n    /**\n     * @return {?}\n     */\n    generateNonce() { return Math.round(Math.random() * 10000000); }\n    /**\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    eventsOfType(type) {\n        /** @type {?} */\n        const filterFn = (event) => event.type === type;\n        return this.events.pipe(filter(filterFn));\n    }\n    /**\n     * @template T\n     * @param {?} type\n     * @return {?}\n     */\n    nextEventOfType(type) {\n        return this.eventsOfType(type).pipe(take(1));\n    }\n    /**\n     * @param {?} nonce\n     * @return {?}\n     */\n    waitForStatus(nonce) {\n        return this.eventsOfType('STATUS')\n            .pipe(filter(event => event.nonce === nonce), take(1), map(event => {\n            if (event.status) {\n                return undefined;\n            }\n            throw new Error(/** @type {?} */ ((event.error)));\n        }))\n            .toPromise();\n    }\n    /**\n     * @return {?}\n     */\n    get isEnabled() { return !!this.serviceWorker; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Subscribe and listen to push notifications from the Service Worker.\n *\n * \\@experimental\n */\nclass SwPush {\n    /**\n     * @param {?} sw\n     */\n    constructor(sw) {\n        this.sw = sw;\n        this.subscriptionChanges = new Subject();\n        if (!sw.isEnabled) {\n            this.messages = NEVER;\n            this.subscription = NEVER;\n            return;\n        }\n        this.messages = this.sw.eventsOfType('PUSH').pipe(map(message => message.data));\n        this.pushManager = this.sw.registration.pipe(map(registration => registration.pushManager));\n        /** @type {?} */\n        const workerDrivenSubscriptions = this.pushManager.pipe(switchMap(pm => pm.getSubscription()));\n        this.subscription = merge(workerDrivenSubscriptions, this.subscriptionChanges);\n    }\n    /**\n     * True if the Service Worker is enabled (supported by the browser and enabled via\n     * `ServiceWorkerModule`).\n     * @return {?}\n     */\n    get isEnabled() { return this.sw.isEnabled; }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    requestSubscription(options) {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        /** @type {?} */\n        const pushOptions = { userVisibleOnly: true };\n        /** @type {?} */\n        let key = this.decodeBase64(options.serverPublicKey.replace(/_/g, '/').replace(/-/g, '+'));\n        /** @type {?} */\n        let applicationServerKey = new Uint8Array(new ArrayBuffer(key.length));\n        for (let i = 0; i < key.length; i++) {\n            applicationServerKey[i] = key.charCodeAt(i);\n        }\n        pushOptions.applicationServerKey = applicationServerKey;\n        return this.pushManager.pipe(switchMap(pm => pm.subscribe(pushOptions)), take(1))\n            .toPromise()\n            .then(sub => {\n            this.subscriptionChanges.next(sub);\n            return sub;\n        });\n    }\n    /**\n     * @return {?}\n     */\n    unsubscribe() {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        /** @type {?} */\n        const doUnsubscribe = (sub) => {\n            if (sub === null) {\n                throw new Error('Not subscribed to push notifications.');\n            }\n            return sub.unsubscribe().then(success => {\n                if (!success) {\n                    throw new Error('Unsubscribe failed!');\n                }\n                this.subscriptionChanges.next(null);\n            });\n        };\n        return this.subscription.pipe(take(1), switchMap(doUnsubscribe)).toPromise();\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    decodeBase64(input) { return atob(input); }\n}\nSwPush.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nSwPush.ctorParameters = () => [\n    { type: NgswCommChannel }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Subscribe to update notifications from the Service Worker, trigger update\n * checks, and forcibly activate updates.\n *\n * \\@experimental\n */\nclass SwUpdate {\n    /**\n     * @param {?} sw\n     */\n    constructor(sw) {\n        this.sw = sw;\n        if (!sw.isEnabled) {\n            this.available = NEVER;\n            this.activated = NEVER;\n            return;\n        }\n        this.available = this.sw.eventsOfType('UPDATE_AVAILABLE');\n        this.activated = this.sw.eventsOfType('UPDATE_ACTIVATED');\n    }\n    /**\n     * True if the Service Worker is enabled (supported by the browser and enabled via\n     * `ServiceWorkerModule`).\n     * @return {?}\n     */\n    get isEnabled() { return this.sw.isEnabled; }\n    /**\n     * @return {?}\n     */\n    checkForUpdate() {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        /** @type {?} */\n        const statusNonce = this.sw.generateNonce();\n        return this.sw.postMessageWithStatus('CHECK_FOR_UPDATES', { statusNonce }, statusNonce);\n    }\n    /**\n     * @return {?}\n     */\n    activateUpdate() {\n        if (!this.sw.isEnabled) {\n            return Promise.reject(new Error(ERR_SW_NOT_SUPPORTED));\n        }\n        /** @type {?} */\n        const statusNonce = this.sw.generateNonce();\n        return this.sw.postMessageWithStatus('ACTIVATE_UPDATE', { statusNonce }, statusNonce);\n    }\n}\nSwUpdate.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nSwUpdate.ctorParameters = () => [\n    { type: NgswCommChannel }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nclass RegistrationOptions {\n}\n/** @type {?} */\nconst SCRIPT = new InjectionToken('NGSW_REGISTER_SCRIPT');\n/**\n * @param {?} injector\n * @param {?} script\n * @param {?} options\n * @param {?} platformId\n * @return {?}\n */\nfunction ngswAppInitializer(injector, script, options, platformId) {\n    /** @type {?} */\n    const initializer = () => {\n        /** @type {?} */\n        const app = injector.get(ApplicationRef);\n        if (!(isPlatformBrowser(platformId) && ('serviceWorker' in navigator) &&\n            options.enabled !== false)) {\n            return;\n        }\n        /** @type {?} */\n        const whenStable = app.isStable.pipe(filter((stable) => !!stable), take(1)).toPromise();\n        // Wait for service worker controller changes, and fire an INITIALIZE action when a new SW\n        // becomes active. This allows the SW to initialize itself even if there is no application\n        // traffic.\n        navigator.serviceWorker.addEventListener('controllerchange', () => {\n            if (navigator.serviceWorker.controller !== null) {\n                navigator.serviceWorker.controller.postMessage({ action: 'INITIALIZE' });\n            }\n        });\n        // Don't return the Promise, as that will block the application until the SW is registered, and\n        // cause a crash if the SW registration fails.\n        whenStable.then(() => navigator.serviceWorker.register(script, { scope: options.scope }));\n    };\n    return initializer;\n}\n/**\n * @param {?} opts\n * @param {?} platformId\n * @return {?}\n */\nfunction ngswCommChannelFactory(opts, platformId) {\n    return new NgswCommChannel(isPlatformBrowser(platformId) && opts.enabled !== false ? navigator.serviceWorker :\n        undefined);\n}\n/**\n * \\@experimental\n */\nclass ServiceWorkerModule {\n    /**\n     * Register the given Angular Service Worker script.\n     *\n     * If `enabled` is set to `false` in the given options, the module will behave as if service\n     * workers are not supported by the browser, and the service worker will not be registered.\n     * @param {?} script\n     * @param {?=} opts\n     * @return {?}\n     */\n    static register(script, opts = {}) {\n        return {\n            ngModule: ServiceWorkerModule,\n            providers: [\n                { provide: SCRIPT, useValue: script },\n                { provide: RegistrationOptions, useValue: opts },\n                {\n                    provide: NgswCommChannel,\n                    useFactory: ngswCommChannelFactory,\n                    deps: [RegistrationOptions, PLATFORM_ID]\n                },\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: ngswAppInitializer,\n                    deps: [Injector, SCRIPT, RegistrationOptions, PLATFORM_ID],\n                    multi: true,\n                },\n            ],\n        };\n    }\n}\nServiceWorkerModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [SwPush, SwUpdate],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgswCommChannel as ɵangular_packages_service_worker_service_worker_a, RegistrationOptions as ɵangular_packages_service_worker_service_worker_b, SCRIPT as ɵangular_packages_service_worker_service_worker_c, ngswAppInitializer as ɵangular_packages_service_worker_service_worker_d, ngswCommChannelFactory as ɵangular_packages_service_worker_service_worker_e, ServiceWorkerModule, SwPush, SwUpdate };\n//# sourceMappingURL=service-worker.js.map\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { FeaturesComponent } from './features.component';\nimport { DirectiveComponent } from './directive/directive.component';\nimport { EventsComponent } from './events/events.component';\nimport { EventDetailComponent } from './events/event-detail/event-detail.component';\nimport { LifecycleHooksComponent } from './lifecycle-hooks/lifecycle-hooks.component';\nconst ɵ0 = () => import('./form-train/form-train.module').then(m => m.FormTrainModule), ɵ1 = () => import('./n-form/n-form.module').then(m => m.NFormModule), ɵ2 = () => import('./learn-form/learn-form.module').then(m => m.LearnFormModule);\nconst routes = [\n    {\n        path: '',\n        component: FeaturesComponent,\n        children: [\n            {\n                path: '',\n                component: HomeComponent,\n            },\n            {\n                path: 'directive',\n                component: DirectiveComponent,\n            },\n            {\n                path: 'events',\n                component: EventsComponent\n            },\n            {\n                path: 'events/:id',\n                component: EventDetailComponent\n            },\n            {\n                path: 'lifecycle-hooks',\n                component: LifecycleHooksComponent\n            },\n            {\n                path: 'form',\n                loadChildren: ɵ0,\n            },\n            // {\n            //   path: 'form/form-reactive',\n            //   component: FormReactiveComponent\n            // },\n            // {\n            //   path: 'form/form-template',\n            //   component: FormTemplateDrivenComponent\n            // }\n            {\n                path: 'n-form',\n                loadChildren: ɵ1\n            },\n            {\n                path: 'learn-form',\n                loadChildren: ɵ2\n            }\n        ]\n    }\n];\nexport class FeaturesRoutingModule {\n}\nexport { ɵ0, ɵ1, ɵ2 };\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { FeaturesComponent } from './features.component';\nimport { DirectiveComponent } from './directive/directive.component';\nimport { EventsComponent } from './events/events.component';\nimport { EventDetailComponent  } from './events/event-detail/event-detail.component';\nimport { LifecycleHooksComponent } from './lifecycle-hooks/lifecycle-hooks.component';\nimport { FormTrainComponent } from './form-train/form-train.component';\nimport { FormReactiveComponent } from './form-train/form-reactive/form-reactive.component';\nimport { FormTemplateDrivenComponent } from './form-train/form-template-driven/form-template-driven.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FeaturesComponent,\n    children: [\n      {\n        path: '',\n        component: HomeComponent,\n      },\n      {\n        path: 'directive',\n        component: DirectiveComponent,\n      },\n      {\n        path: 'events',\n        component: EventsComponent\n      },\n      {\n        path: 'events/:id',\n        component: EventDetailComponent\n      },\n      {\n        path: 'lifecycle-hooks',\n        component: LifecycleHooksComponent\n      },\n      {\n        path: 'form',\n        loadChildren: () => import('./form-train/form-train.module').then(m => m.FormTrainModule),\n        // data: { preload: true }\n      },\n      // {\n      //   path: 'form/form-reactive',\n      //   component: FormReactiveComponent\n      // },\n      // {\n      //   path: 'form/form-template',\n      //   component: FormTemplateDrivenComponent\n      // }\n      {\n        path: 'n-form',\n        loadChildren: () => import('./n-form/n-form.module').then(m => m.NFormModule)\n      },\n      {\n        path: 'learn-form',\n        loadChildren: () => import('./learn-form/learn-form.module').then(m => m.LearnFormModule)\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FeaturesRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../core/services/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate, CanActivateChild {\n\n  constructor(\n    private loginService: LoginService,\n    private router: Router\n  ) {\n\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkLogin();\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkLogin();\n  }\n\n  checkLogin() {\n    if (!this.loginService.isLogin) {\n      this.router.navigateByUrl('/');\n    }\n    return this.loginService.isLogin;\n  }\n}\n","import { Router } from '@angular/router';\nimport { LoginService } from '../core/services/login.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/login.service\";\nimport * as i2 from \"@angular/router\";\nexport class UserGuard {\n    constructor(loginService, router) {\n        this.loginService = loginService;\n        this.router = router;\n    }\n    canActivate(next, state) {\n        return this.checkLogin();\n    }\n    canActivateChild(next, state) {\n        return this.checkLogin();\n    }\n    checkLogin() {\n        if (!this.loginService.isLogin) {\n            this.router.navigateByUrl('/');\n        }\n        return this.loginService.isLogin;\n    }\n}\nUserGuard.ngInjectableDef = i0.defineInjectable({ factory: function UserGuard_Factory() { return new UserGuard(i0.inject(i1.LoginService), i0.inject(i2.Router)); }, token: UserGuard, providedIn: \"root\" });\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, Router, CanDeactivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ProfileComponent } from '../account/profile/profile.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserCanDeactivate implements CanDeactivate<ProfileComponent> {\n  constructor() {}\n\n  canDeactivate(\n    component: ProfileComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState: RouterStateSnapshot\n  ): Observable<boolean>|Promise<boolean>|boolean {\n    console.log(component);\n    if (component.typing) {\n      return confirm('Your data will lose if you change page!');\n    }\n    return true;\n  }\n}\n","import { ActivatedRouteSnapshot, RouterStateSnapshot, CanDeactivate } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nexport class UserCanDeactivate {\n    constructor() { }\n    canDeactivate(component, currentRoute, currentState, nextState) {\n        console.log(component);\n        if (component.typing) {\n            return confirm('Your data will lose if you change page!');\n        }\n        return true;\n    }\n}\nUserCanDeactivate.ngInjectableDef = i0.defineInjectable({ factory: function UserCanDeactivate_Factory() { return new UserCanDeactivate(); }, token: UserCanDeactivate, providedIn: \"root\" });\n","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { delay } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class DashboardResolver implements Resolve<any> {\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any>|Promise<any>|any {\n    return of({data: 'data from resolver'}).pipe(delay(3000));\n  }\n}\n","import { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class DashboardResolver {\n    resolve(route, state) {\n        return of({ data: 'data from resolver' }).pipe(delay(3000));\n    }\n}\nDashboardResolver.ngInjectableDef = i0.defineInjectable({ factory: function DashboardResolver_Factory() { return new DashboardResolver(); }, token: DashboardResolver, providedIn: \"root\" });\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, CanActivateChild, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenService } from '../core/services/authen.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientGuard implements CanActivate, CanActivateChild {\n\n  constructor(\n    private authen: AuthenService,\n    private router: Router\n  ) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkLogin();\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return this.checkLogin();\n  }\n\n  checkLogin() {\n    if (!this.authen.isLogin) {\n      this.router.navigateByUrl('/');\n    }\n    return this.authen.isLogin;\n  }\n}\n","import { Router } from '@angular/router';\nimport { AuthenService } from '../core/services/authen.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../core/services/authen.service\";\nimport * as i2 from \"@angular/router\";\nexport class ClientGuard {\n    constructor(authen, router) {\n        this.authen = authen;\n        this.router = router;\n    }\n    canActivate(next, state) {\n        return this.checkLogin();\n    }\n    canActivateChild(next, state) {\n        return this.checkLogin();\n    }\n    checkLogin() {\n        if (!this.authen.isLogin) {\n            this.router.navigateByUrl('/');\n        }\n        return this.authen.isLogin;\n    }\n}\nClientGuard.ngInjectableDef = i0.defineInjectable({ factory: function ClientGuard_Factory() { return new ClientGuard(i0.inject(i1.AuthenService), i0.inject(i2.Router)); }, token: ClientGuard, providedIn: \"root\" });\n","import { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ClientProfileComponent } from './client-profile.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanDeactivateClientProfile implements CanDeactivate<ClientProfileComponent> {\n  constructor() {}\n\n  canDeactivate(\n    component: ClientProfileComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState: RouterStateSnapshot\n  ): Observable<boolean>|Promise<boolean>|boolean {\n    console.log(component);\n    if (component.isTyping) {\n      return confirm('Your data wil lose if you change page!');\n    }\n    return true;\n  }\n}\n","import * as i0 from \"@angular/core\";\nexport class CanDeactivateClientProfile {\n    constructor() { }\n    canDeactivate(component, currentRoute, currentState, nextState) {\n        console.log(component);\n        if (component.isTyping) {\n            return confirm('Your data wil lose if you change page!');\n        }\n        return true;\n    }\n}\nCanDeactivateClientProfile.ngInjectableDef = i0.defineInjectable({ factory: function CanDeactivateClientProfile_Factory() { return new CanDeactivateClientProfile(); }, token: CanDeactivateClientProfile, providedIn: \"root\" });\n","import { ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ClientResolver implements Resolve<any> {\n\n  constructor() {}\n\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<any>|Promise<any>|any {\n    return of({data: 'David Dong'}).pipe(delay(3000));\n  }\n}\n","import { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class ClientResolver {\n    constructor() { }\n    resolve(route, state) {\n        return of({ data: 'David Dong' }).pipe(delay(3000));\n    }\n}\nClientResolver.ngInjectableDef = i0.defineInjectable({ factory: function ClientResolver_Factory() { return new ClientResolver(); }, token: ClientResolver, providedIn: \"root\" });\n","import { Routes } from '@angular/router';\nimport { FeatureComponent } from './feature/feature.component';\nimport { AppComponent } from './app.component';\nimport { OtherComponent } from './other/other.component';\nimport { UserComponent } from './user/user.component';\nimport { UserGuard } from './user/user.guard';\nimport { OtherLoginComponent } from './other-login/other-login.component';\nimport { UserProfileComponent } from './user/user-profile/user-profile.component';\nimport { UserDashboardComponent } from './user/user-dashboard/user-dashboard.component';\nimport { UserCanDeactivate } from './user/user.deactive-guard';\nimport { DashboardResolver } from './user/user-dashboard/user.resolver';\nimport { ClientComponent } from './client/client.component';\nimport { ClientGuard } from './client/client.guard';\nimport { ClientHomeComponent } from './client/client-home/client-home.component';\nimport { ClientProfileComponent } from './client/client-profile/client-profile.component';\nimport { CanDeactivateClientProfile } from './client/client-profile/client-profile.candeactive';\nimport { ClientResolver } from './client/client-profile/client-profile.resolve';\nconst ɵ0 = () => import('./api-working/api-working.module').then(m => m.ApiWorkingModule), ɵ1 = () => import('./demo-lazy/demo-lazy.module').then(m => m.DemoLazyModule);\nconst routes = [\n    {\n        path: '',\n        component: AppComponent\n    },\n    {\n        path: 'feature',\n        component: FeatureComponent\n    },\n    {\n        path: 'other',\n        component: OtherComponent\n    },\n    {\n        path: 'other-login',\n        component: OtherLoginComponent\n    },\n    {\n        path: 'user',\n        component: UserComponent,\n        canActivate: [UserGuard],\n        canActivateChild: [UserGuard],\n        children: [\n            {\n                path: 'profile',\n                component: UserProfileComponent,\n                canDeactivate: [UserCanDeactivate]\n            },\n            {\n                path: 'dashboard',\n                component: UserDashboardComponent,\n                resolve: {\n                    user: DashboardResolver\n                }\n            }\n        ]\n    },\n    {\n        path: 'client',\n        component: ClientComponent,\n        canActivate: [ClientGuard],\n        canActivateChild: [ClientGuard],\n        children: [\n            {\n                path: ':id',\n                component: ClientHomeComponent\n            },\n            {\n                path: 'profile',\n                component: ClientProfileComponent,\n                canDeactivate: [CanDeactivateClientProfile],\n                resolve: {\n                    userData: ClientResolver\n                }\n            }\n        ]\n    },\n    // {\n    //   path: 'account',\n    //   loadChildren: './account/account.module#AccountModule',\n    //   // canLoad: [AccountGuard],\n    //   data: { preload: true }\n    // }\n    {\n        path: 'api-working',\n        loadChildren: ɵ0\n    },\n    {\n        path: 'lazy',\n        loadChildren: ɵ1\n    }\n];\nexport class AppRoutingModule {\n}\nexport { ɵ0, ɵ1 };\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules, NoPreloading } from '@angular/router';\n\nimport { FeaturesComponent } from './features/features.component';\nimport { AccountGuard } from './account/account.guard';\nimport { SelectivePreloadingStrategyService } from './core/services/selective-preloading-strategy.service';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { TabContentComponent } from './tab-content/tab-content.component';\nimport { FeatureComponent } from './feature/feature.component';\nimport { AppComponent } from './app.component';\nimport { OtherComponent } from './other/other.component';\nimport { UserComponent } from './user/user.component';\nimport { UserGuard } from './user/user.guard';\nimport { OtherLoginComponent } from './other-login/other-login.component';\nimport { UserProfileComponent } from './user/user-profile/user-profile.component';\nimport { UserDashboardComponent } from './user/user-dashboard/user-dashboard.component';\nimport { UserCanDeactivate } from './user/user.deactive-guard';\nimport { DashboardResolver } from './user/user-dashboard/user.resolver';\nimport { ClientComponent } from './client/client.component';\nimport { ClientGuard } from './client/client.guard';\nimport { NewLoginComponent } from './new-login/new-login.component';\nimport { ClientHomeComponent } from './client/client-home/client-home.component';\nimport { ClientProfileComponent } from './client/client-profile/client-profile.component';\nimport { CanDeactivateClientProfile } from './client/client-profile/client-profile.candeactive';\nimport { ClientResolver } from './client/client-profile/client-profile.resolve';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AppComponent\n  },\n  {\n    path: 'feature',\n    component: FeatureComponent\n  },\n  {\n    path: 'other',\n    component: OtherComponent\n  },\n  {\n    path: 'other-login',\n    component: OtherLoginComponent\n  },\n  {\n    path: 'user',\n    component: UserComponent,\n    canActivate: [UserGuard],\n    canActivateChild: [UserGuard],\n    children: [\n      {\n        path: 'profile',\n        component: UserProfileComponent,\n        canDeactivate: [UserCanDeactivate]\n      },\n      {\n        path: 'dashboard',\n        component: UserDashboardComponent,\n        resolve: {\n          user: DashboardResolver\n        }\n      }\n    ]\n  },\n  {\n    path: 'client',\n    component: ClientComponent,\n    canActivate: [ClientGuard],\n    canActivateChild: [ClientGuard],\n    children: [\n      {\n        path: ':id',\n        component: ClientHomeComponent\n      },\n      {\n        path: 'profile',\n        component: ClientProfileComponent,\n        canDeactivate: [CanDeactivateClientProfile],\n        resolve: {\n          userData: ClientResolver\n        }\n      }\n    ]\n  },\n  // {\n  //   path: 'account',\n  //   loadChildren: './account/account.module#AccountModule',\n  //   // canLoad: [AccountGuard],\n  //   data: { preload: true }\n  // }\n  {\n    path: 'api-working',\n    loadChildren: () => import('./api-working/api-working.module').then(m => m.ApiWorkingModule)\n  },\n  {\n    path: 'lazy',\n    loadChildren: () => import('./demo-lazy/demo-lazy.module').then(m => m.DemoLazyModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {preloadingStrategy: SelectivePreloadingStrategyService})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { DialogComponent } from './components/dialog/dialog.component';\nimport { PageTitleComponent } from './components/page-title/page-title.component';\nimport { HoverItemDirective } from './directive/hover-item.directive';\nimport { LowercasePipe } from './pipe/lowercase.pipe';\nimport { Json2stringPipe } from './pipe/json2string.pipe';\nimport { TrustUrlPipe } from './pipe/trust-url.pipe';\nimport { HoverDirective } from './directive/hover.directive';\nimport { UppercasePipe } from './pipes/uppercase.pipe';\n\n@NgModule({\n  declarations: [HeaderComponent, FooterComponent, DialogComponent,\n    PageTitleComponent, HoverItemDirective, LowercasePipe, Json2stringPipe, TrustUrlPipe, HoverDirective, UppercasePipe],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    HeaderComponent,\n    DialogComponent,\n    FooterComponent,\n    PageTitleComponent,\n    HoverItemDirective,\n    LowercasePipe,\n    Json2stringPipe,\n    TrustUrlPipe,\n    HoverDirective,\n    UppercasePipe\n  ]\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { SharedModule } from './../shared/shared.module';\n\nimport { FeaturesRoutingModule } from './features-routing.module';\n\nimport { FeaturesComponent } from './features.component';\nimport { HomeComponent } from './home/home.component';\nimport { DirectiveComponent } from './directive/directive.component';\nimport { DetailComponent } from './detail/detail.component';\nimport { HomeChildComponent } from './home/home-child/home-child.component';\nimport { EventsComponent } from './events/events.component';\nimport { EventDetailComponent } from './events/event-detail/event-detail.component';\nimport { LifecycleHooksComponent } from './lifecycle-hooks/lifecycle-hooks.component';\nimport { LifecycleHooksChildComponent } from './lifecycle-hooks/lifecycle-hooks-child/lifecycle-hooks-child.component';\nimport { LifecycleHooksOtherChildComponent } from './lifecycle-hooks/lifecycle-hooks-other-child/lifecycle-hooks-other-child.component';\nimport { FormTrainComponent } from './form-train/form-train.component';\nimport { FormReactiveComponent } from './form-train/form-reactive/form-reactive.component';\nimport { FormTemplateDrivenComponent } from './form-train/form-template-driven/form-template-driven.component';\nimport { FormTrainModule } from './form-train/form-train.module';\n\n@NgModule({\n  declarations: [HomeComponent, DirectiveComponent,\n    DetailComponent, HomeChildComponent, EventsComponent,\n    EventDetailComponent, LifecycleHooksComponent,\n    LifecycleHooksChildComponent, LifecycleHooksOtherChildComponent,\n    FormTemplateDrivenComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    // FormTrainModule,\n    ReactiveFormsModule,\n    FeaturesRoutingModule,\n    SharedModule,\n  ]\n})\nexport class FeaturesModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AuthComponent } from './auth.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {\n    path: 'auth',\n    component: AuthComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'register',\n        component: RegisterComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthComponent } from './auth.component';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent, AuthComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    ReactiveFormsModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./app.module\";\nimport * as i2 from \"./app.component\";\nimport * as i3 from \"../../node_modules/@angular/router/router.ngfactory\";\nimport * as i4 from \"./features/features.component.ngfactory\";\nimport * as i5 from \"./features/home/home.component.ngfactory\";\nimport * as i6 from \"./features/directive/directive.component.ngfactory\";\nimport * as i7 from \"./features/events/events.component.ngfactory\";\nimport * as i8 from \"./features/events/event-detail/event-detail.component.ngfactory\";\nimport * as i9 from \"./features/lifecycle-hooks/lifecycle-hooks.component.ngfactory\";\nimport * as i10 from \"./auth/auth.component.ngfactory\";\nimport * as i11 from \"./auth/login/login.component.ngfactory\";\nimport * as i12 from \"./auth/register/register.component.ngfactory\";\nimport * as i13 from \"./app.component.ngfactory\";\nimport * as i14 from \"./feature/feature.component.ngfactory\";\nimport * as i15 from \"./other/other.component.ngfactory\";\nimport * as i16 from \"./other-login/other-login.component.ngfactory\";\nimport * as i17 from \"./user/user.component.ngfactory\";\nimport * as i18 from \"./user/user-profile/user-profile.component.ngfactory\";\nimport * as i19 from \"./user/user-dashboard/user-dashboard.component.ngfactory\";\nimport * as i20 from \"./client/client.component.ngfactory\";\nimport * as i21 from \"./client/client-home/client-home.component.ngfactory\";\nimport * as i22 from \"./client/client-profile/client-profile.component.ngfactory\";\nimport * as i23 from \"@angular/common\";\nimport * as i24 from \"@angular/platform-browser\";\nimport * as i25 from \"@angular/common/http\";\nimport * as i26 from \"./core/intercepter/http-interceptor\";\nimport * as i27 from \"@angular/forms\";\nimport * as i28 from \"ng6-breadcrumbs/lib/breadcrumbs.service\";\nimport * as i29 from \"@angular/router\";\nimport * as i30 from \"./core/services/selective-preloading-strategy.service\";\nimport * as i31 from \"@angular/service-worker\";\nimport * as i32 from \"./features/features.component\";\nimport * as i33 from \"./features/home/home.component\";\nimport * as i34 from \"./features/directive/directive.component\";\nimport * as i35 from \"./features/events/events.component\";\nimport * as i36 from \"./features/events/event-detail/event-detail.component\";\nimport * as i37 from \"./features/lifecycle-hooks/lifecycle-hooks.component\";\nimport * as i38 from \"./features/features-routing.module\";\nimport * as i39 from \"./auth/auth.component\";\nimport * as i40 from \"./auth/login/login.component\";\nimport * as i41 from \"./auth/register/register.component\";\nimport * as i42 from \"./feature/feature.component\";\nimport * as i43 from \"./other/other.component\";\nimport * as i44 from \"./other-login/other-login.component\";\nimport * as i45 from \"./user/user.component\";\nimport * as i46 from \"./user/user.guard\";\nimport * as i47 from \"./user/user-profile/user-profile.component\";\nimport * as i48 from \"./user/user.deactive-guard\";\nimport * as i49 from \"./user/user-dashboard/user-dashboard.component\";\nimport * as i50 from \"./user/user-dashboard/user.resolver\";\nimport * as i51 from \"./client/client.component\";\nimport * as i52 from \"./client/client.guard\";\nimport * as i53 from \"./client/client-home/client-home.component\";\nimport * as i54 from \"./client/client-profile/client-profile.component\";\nimport * as i55 from \"./client/client-profile/client-profile.candeactive\";\nimport * as i56 from \"./client/client-profile/client-profile.resolve\";\nimport * as i57 from \"./app-routing.module\";\nimport * as i58 from \"./shared/shared.module\";\nimport * as i59 from \"ng6-breadcrumbs/lib/breadcrumbs.module\";\nimport * as i60 from \"./features/features.module\";\nimport * as i61 from \"./auth/auth-routing.module\";\nimport * as i62 from \"./auth/auth.module\";\nvar AppModuleNgFactory = i0.ɵcmf(i1.AppModule, [i2.AppComponent], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i3.ɵEmptyOutletComponentNgFactory, i4.FeaturesComponentNgFactory, i5.HomeComponentNgFactory, i6.DirectiveComponentNgFactory, i7.EventsComponentNgFactory, i8.EventDetailComponentNgFactory, i9.LifecycleHooksComponentNgFactory, i10.AuthComponentNgFactory, i11.LoginComponentNgFactory, i12.RegisterComponentNgFactory, i13.AppComponentNgFactory, i14.FeatureComponentNgFactory, i15.OtherComponentNgFactory, i16.OtherLoginComponentNgFactory, i17.UserComponentNgFactory, i18.UserProfileComponentNgFactory, i19.UserDashboardComponentNgFactory, i20.ClientComponentNgFactory, i21.ClientHomeComponentNgFactory, i22.ClientProfileComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(5120, i0.LOCALE_ID, i0.ɵangular_packages_core_core_k, [[3, i0.LOCALE_ID]]), i0.ɵmpd(4608, i23.NgLocalization, i23.NgLocaleLocalization, [i0.LOCALE_ID, [2, i23.ɵangular_packages_common_common_a]]), i0.ɵmpd(5120, i0.APP_ID, i0.ɵangular_packages_core_core_f, []), i0.ɵmpd(5120, i0.IterableDiffers, i0.ɵangular_packages_core_core_i, []), i0.ɵmpd(5120, i0.KeyValueDiffers, i0.ɵangular_packages_core_core_j, []), i0.ɵmpd(4608, i24.DomSanitizer, i24.ɵDomSanitizerImpl, [i23.DOCUMENT]), i0.ɵmpd(6144, i0.Sanitizer, null, [i24.DomSanitizer]), i0.ɵmpd(4608, i24.HAMMER_GESTURE_CONFIG, i24.HammerGestureConfig, []), i0.ɵmpd(5120, i24.EVENT_MANAGER_PLUGINS, function (p0_0, p0_1, p0_2, p1_0, p2_0, p2_1, p2_2, p2_3) { return [new i24.ɵDomEventsPlugin(p0_0, p0_1, p0_2), new i24.ɵKeyEventsPlugin(p1_0), new i24.ɵHammerGesturesPlugin(p2_0, p2_1, p2_2, p2_3)]; }, [i23.DOCUMENT, i0.NgZone, i0.PLATFORM_ID, i23.DOCUMENT, i23.DOCUMENT, i24.HAMMER_GESTURE_CONFIG, i0.ɵConsole, [2, i24.HAMMER_LOADER]]), i0.ɵmpd(4608, i24.EventManager, i24.EventManager, [i24.EVENT_MANAGER_PLUGINS, i0.NgZone]), i0.ɵmpd(135680, i24.ɵDomSharedStylesHost, i24.ɵDomSharedStylesHost, [i23.DOCUMENT]), i0.ɵmpd(4608, i24.ɵDomRendererFactory2, i24.ɵDomRendererFactory2, [i24.EventManager, i24.ɵDomSharedStylesHost]), i0.ɵmpd(6144, i0.RendererFactory2, null, [i24.ɵDomRendererFactory2]), i0.ɵmpd(6144, i24.ɵSharedStylesHost, null, [i24.ɵDomSharedStylesHost]), i0.ɵmpd(4608, i0.Testability, i0.Testability, [i0.NgZone]), i0.ɵmpd(4608, i25.HttpXsrfTokenExtractor, i25.ɵangular_packages_common_http_http_g, [i23.DOCUMENT, i0.PLATFORM_ID, i25.ɵangular_packages_common_http_http_e]), i0.ɵmpd(4608, i25.ɵangular_packages_common_http_http_h, i25.ɵangular_packages_common_http_http_h, [i25.HttpXsrfTokenExtractor, i25.ɵangular_packages_common_http_http_f]), i0.ɵmpd(5120, i25.HTTP_INTERCEPTORS, function (p0_0) { return [p0_0, new i26.AuthInterceptor()]; }, [i25.ɵangular_packages_common_http_http_h]), i0.ɵmpd(4608, i25.ɵangular_packages_common_http_http_d, i25.ɵangular_packages_common_http_http_d, []), i0.ɵmpd(6144, i25.XhrFactory, null, [i25.ɵangular_packages_common_http_http_d]), i0.ɵmpd(4608, i25.HttpXhrBackend, i25.HttpXhrBackend, [i25.XhrFactory]), i0.ɵmpd(6144, i25.HttpBackend, null, [i25.HttpXhrBackend]), i0.ɵmpd(4608, i25.HttpHandler, i25.ɵHttpInterceptingHandler, [i25.HttpBackend, i0.Injector]), i0.ɵmpd(4608, i25.HttpClient, i25.HttpClient, [i25.HttpHandler]), i0.ɵmpd(4608, i27.ɵangular_packages_forms_forms_i, i27.ɵangular_packages_forms_forms_i, []), i0.ɵmpd(4608, i27.FormBuilder, i27.FormBuilder, []), i0.ɵmpd(4608, i28.BreadcrumbsService, i28.BreadcrumbsService, []), i0.ɵmpd(5120, i29.ActivatedRoute, i29.ɵangular_packages_router_router_g, [i29.Router]), i0.ɵmpd(6144, i29.PreloadingStrategy, null, [i30.SelectivePreloadingStrategyService]), i0.ɵmpd(135680, i29.RouterPreloader, i29.RouterPreloader, [i29.Router, i0.NgModuleFactoryLoader, i0.Compiler, i0.Injector, i29.PreloadingStrategy]), i0.ɵmpd(4608, i29.NoPreloading, i29.NoPreloading, []), i0.ɵmpd(4608, i29.PreloadAllModules, i29.PreloadAllModules, []), i0.ɵmpd(5120, i29.ɵangular_packages_router_router_n, i29.ɵangular_packages_router_router_c, [i29.Router, i23.ViewportScroller, i29.ROUTER_CONFIGURATION]), i0.ɵmpd(5120, i29.ROUTER_INITIALIZER, i29.ɵangular_packages_router_router_j, [i29.ɵangular_packages_router_router_h]), i0.ɵmpd(5120, i0.APP_BOOTSTRAP_LISTENER, function (p0_0) { return [p0_0]; }, [i29.ROUTER_INITIALIZER]), i0.ɵmpd(5120, i31.ɵangular_packages_service_worker_service_worker_a, i31.ɵangular_packages_service_worker_service_worker_e, [i31.ɵangular_packages_service_worker_service_worker_b, i0.PLATFORM_ID]), i0.ɵmpd(4608, i31.SwPush, i31.SwPush, [i31.ɵangular_packages_service_worker_service_worker_a]), i0.ɵmpd(4608, i31.SwUpdate, i31.SwUpdate, [i31.ɵangular_packages_service_worker_service_worker_a]), i0.ɵmpd(1073742336, i23.CommonModule, i23.CommonModule, []), i0.ɵmpd(1024, i0.ErrorHandler, i24.ɵangular_packages_platform_browser_platform_browser_a, []), i0.ɵmpd(1024, i0.NgProbeToken, function () { return [i29.ɵangular_packages_router_router_b()]; }, []), i0.ɵmpd(512, i29.ɵangular_packages_router_router_h, i29.ɵangular_packages_router_router_h, [i0.Injector]), i0.ɵmpd(256, i31.ɵangular_packages_service_worker_service_worker_c, \"ngsw-worker.js\", []), i0.ɵmpd(256, i31.ɵangular_packages_service_worker_service_worker_b, { enabled: true }, []), i0.ɵmpd(1024, i0.APP_INITIALIZER, function (p0_0, p1_0, p2_0, p2_1, p2_2, p2_3) { return [i24.ɵangular_packages_platform_browser_platform_browser_j(p0_0), i29.ɵangular_packages_router_router_i(p1_0), i31.ɵangular_packages_service_worker_service_worker_d(p2_0, p2_1, p2_2, p2_3)]; }, [[2, i0.NgProbeToken], i29.ɵangular_packages_router_router_h, i0.Injector, i31.ɵangular_packages_service_worker_service_worker_c, i31.ɵangular_packages_service_worker_service_worker_b, i0.PLATFORM_ID]), i0.ɵmpd(512, i0.ApplicationInitStatus, i0.ApplicationInitStatus, [[2, i0.APP_INITIALIZER]]), i0.ɵmpd(131584, i0.ApplicationRef, i0.ApplicationRef, [i0.NgZone, i0.ɵConsole, i0.Injector, i0.ErrorHandler, i0.ComponentFactoryResolver, i0.ApplicationInitStatus]), i0.ɵmpd(1073742336, i0.ApplicationModule, i0.ApplicationModule, [i0.ApplicationRef]), i0.ɵmpd(1073742336, i24.BrowserModule, i24.BrowserModule, [[3, i24.BrowserModule]]), i0.ɵmpd(1073742336, i25.HttpClientXsrfModule, i25.HttpClientXsrfModule, []), i0.ɵmpd(1073742336, i25.HttpClientModule, i25.HttpClientModule, []), i0.ɵmpd(1073742336, i27.ɵangular_packages_forms_forms_bb, i27.ɵangular_packages_forms_forms_bb, []), i0.ɵmpd(1073742336, i27.FormsModule, i27.FormsModule, []), i0.ɵmpd(1073742336, i27.ReactiveFormsModule, i27.ReactiveFormsModule, []), i0.ɵmpd(1024, i29.ɵangular_packages_router_router_a, i29.ɵangular_packages_router_router_e, [[3, i29.Router]]), i0.ɵmpd(512, i29.UrlSerializer, i29.DefaultUrlSerializer, []), i0.ɵmpd(512, i29.ChildrenOutletContexts, i29.ChildrenOutletContexts, []), i0.ɵmpd(256, i29.ROUTER_CONFIGURATION, { preloadingStrategy: i30.SelectivePreloadingStrategyService }, []), i0.ɵmpd(1024, i23.LocationStrategy, i29.ɵangular_packages_router_router_d, [i23.PlatformLocation, [2, i23.APP_BASE_HREF], i29.ROUTER_CONFIGURATION]), i0.ɵmpd(512, i23.Location, i23.Location, [i23.LocationStrategy]), i0.ɵmpd(512, i0.Compiler, i0.Compiler, []), i0.ɵmpd(512, i0.NgModuleFactoryLoader, i0.SystemJsNgModuleLoader, [i0.Compiler, [2, i0.SystemJsNgModuleLoaderConfig]]), i0.ɵmpd(1024, i29.ROUTES, function () { return [[{ path: \"\", component: i32.FeaturesComponent, children: [{ path: \"\", component: i33.HomeComponent }, { path: \"directive\", component: i34.DirectiveComponent }, { path: \"events\", component: i35.EventsComponent }, { path: \"events/:id\", component: i36.EventDetailComponent }, { path: \"lifecycle-hooks\", component: i37.LifecycleHooksComponent }, { path: \"form\", loadChildren: i38.ɵ0 }, { path: \"n-form\", loadChildren: i38.ɵ1 }, { path: \"learn-form\", loadChildren: i38.ɵ2 }] }], [{ path: \"auth\", component: i39.AuthComponent, children: [{ path: \"login\", component: i40.LoginComponent }, { path: \"register\", component: i41.RegisterComponent }] }], [{ path: \"\", component: i2.AppComponent }, { path: \"feature\", component: i42.FeatureComponent }, { path: \"other\", component: i43.OtherComponent }, { path: \"other-login\", component: i44.OtherLoginComponent }, { path: \"user\", component: i45.UserComponent, canActivate: [i46.UserGuard], canActivateChild: [i46.UserGuard], children: [{ path: \"profile\", component: i47.UserProfileComponent, canDeactivate: [i48.UserCanDeactivate] }, { path: \"dashboard\", component: i49.UserDashboardComponent, resolve: { user: i50.DashboardResolver } }] }, { path: \"client\", component: i51.ClientComponent, canActivate: [i52.ClientGuard], canActivateChild: [i52.ClientGuard], children: [{ path: \":id\", component: i53.ClientHomeComponent }, { path: \"profile\", component: i54.ClientProfileComponent, canDeactivate: [i55.CanDeactivateClientProfile], resolve: { userData: i56.ClientResolver } }] }, { path: \"api-working\", loadChildren: i57.ɵ0 }, { path: \"lazy\", loadChildren: i57.ɵ1 }]]; }, []), i0.ɵmpd(1024, i29.Router, i29.ɵangular_packages_router_router_f, [i0.ApplicationRef, i29.UrlSerializer, i29.ChildrenOutletContexts, i23.Location, i0.Injector, i0.NgModuleFactoryLoader, i0.Compiler, i29.ROUTES, i29.ROUTER_CONFIGURATION, [2, i29.UrlHandlingStrategy], [2, i29.RouteReuseStrategy]]), i0.ɵmpd(1073742336, i29.RouterModule, i29.RouterModule, [[2, i29.ɵangular_packages_router_router_a], [2, i29.Router]]), i0.ɵmpd(1073742336, i58.SharedModule, i58.SharedModule, []), i0.ɵmpd(1073742336, i59.BreadcrumbsModule, i59.BreadcrumbsModule, []), i0.ɵmpd(1073742336, i38.FeaturesRoutingModule, i38.FeaturesRoutingModule, []), i0.ɵmpd(1073742336, i60.FeaturesModule, i60.FeaturesModule, []), i0.ɵmpd(1073742336, i61.AuthRoutingModule, i61.AuthRoutingModule, []), i0.ɵmpd(1073742336, i62.AuthModule, i62.AuthModule, []), i0.ɵmpd(1073742336, i57.AppRoutingModule, i57.AppRoutingModule, []), i0.ɵmpd(1073742336, i31.ServiceWorkerModule, i31.ServiceWorkerModule, []), i0.ɵmpd(1073742336, i1.AppModule, i1.AppModule, []), i0.ɵmpd(256, i0.ɵAPP_ROOT, true, []), i0.ɵmpd(256, i25.ɵangular_packages_common_http_http_e, \"XSRF-TOKEN\", []), i0.ɵmpd(256, i25.ɵangular_packages_common_http_http_f, \"X-XSRF-TOKEN\", [])]); });\nexport { AppModuleNgFactory as AppModuleNgFactory };\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}